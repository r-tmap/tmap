[{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"note-this-is-written-for-the-upcoming-version-4-1","dir":"Articles","previous_headings":"","what":"Note: this is written for the upcoming version 4.1","title":"tmap advanced: grouping of components","text":"component share position (see vignette positions), can specify grouped via tm_comp_group(). use self-made map component, made grid package show via tm_inset().","code":"g = function(text) grid::gList(   grid::rectGrob(gp=grid::gpar(fill = \"gold\")),    grid::circleGrob(r = .45),    grid::textGrob(text)) b = function(text) grid::gList(   grid::rectGrob(gp=grid::gpar(fill = \"steelblue\")),    grid::circleGrob(r = .45),    grid::textGrob(text))"},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"linking-components-via-group_id","dir":"Articles","previous_headings":"","what":"Linking components via group_id","title":"tmap advanced: grouping of components","text":"Note actual grouping done position alone: components position considered group therefore stacked instead drawn top . goal tm_comp_group() specify position group related arguments (discuss vignette) directly multiple components. example components B position therefore grouped:","code":"tm = tm_shape(NLD_muni) +     tm_polygons(\"grey95\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\") + tm_inset(g(\"A2\"), group_id = \"A\") + tm_inset(b(\"B1\"), group_id = \"B\", height = 3, width = 3) + tm_inset(g(\"A3\"), group_id = \"A\") + tm_inset(b(\"B2\"), group_id = \"B\", height = 3, width = 3) + tm_layout(asp = 1)  tm +    tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\")) +   tm_comp_group(\"B\", position = tm_pos_in(\"right\", \"bottom\")) tm +    tm_comp_group(\"A\", position = tm_pos_in(\"right\", \"bottom\")) +   tm_comp_group(\"B\", position = tm_pos_in(\"right\", \"bottom\")) #> [plot mode] legend/component: Some components or legends are too \"high\" and are #> therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"direction","dir":"Articles","previous_headings":"Stacking","what":"Direction","title":"tmap advanced: grouping of components","text":"stack argument either \"horizontal\" \"vertical\":","code":"tm +    tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\"), stack = \"horizontal\") +   tm_comp_group(\"B\", position = tm_pos_in(\"right\", \"bottom\"), stack = \"vertical\")"},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"order","dir":"Articles","previous_headings":"Stacking","what":"Order","title":"tmap advanced: grouping of components","text":"stacking order default components appear, can changed z argument component function:","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey95\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\", z = 1) + tm_inset(g(\"A2\"), group_id = \"A\", z = 3) + tm_inset(g(\"A3\"), group_id = \"A\", z = 2) + tm_layout(asp = 1) + tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\"))"},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"frame_combine","dir":"Articles","previous_headings":"Frame","what":"frame_combine","title":"tmap advanced: grouping of components","text":"default frame_combine = TRUE, means single frame drawn components group. can disabled frame_combine = FALSE","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey95\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\") + tm_inset(g(\"A2\"), group_id = \"A\", width = 3, height = 3) + tm_inset(g(\"A3\"), group_id = \"A\") + tm_layout(asp = 1) + tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\"), frame_combine = FALSE)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"equalize","dir":"Articles","previous_headings":"Frame","what":"equalize","title":"tmap advanced: grouping of components","text":"Equalize (default TRUE) means components made equal size, : widths case stacked vertically (example), heights case stacked horizontally.","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey95\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\") + tm_inset(g(\"A2\"), group_id = \"A\", width = 3, height = 3) + tm_inset(g(\"A3\"), group_id = \"A\") + tm_layout(asp = 1) + tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\"), frame_combine = FALSE, equalize = FALSE)"},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"general-offset-and-stack_margin","dir":"Articles","previous_headings":"Margins","what":"General offset and stack_margin","title":"tmap advanced: grouping of components","text":"offset specifies distance (line heights) frame components. default 0.75 case components drawn inside frame pos.h pos.v lower case, 0 otherwise. stack_margin specifies distance components. case frame_combine 0.5 default, otherwise 0.  Note: currently offset stack_margin applied components pos.h pos.v specified characters.","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey95\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\") + tm_inset(g(\"A2\"), group_id = \"A\", width = 3, height = 3) + tm_inset(g(\"A3\"), group_id = \"A\") + tm_layout(asp = 1) + tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\"), frame_combine = FALSE, equalize = FALSE, offset = 0, stack_margin = 1)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"component-specific-margins","dir":"Articles","previous_headings":"Margins","what":"Component specific margins","title":"tmap advanced: grouping of components","text":"component margins, margins frame. can specified vector four: bottom, left, top, right.","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey95\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\", margins = 0) + tm_inset(g(\"A2\"), group_id = \"A\", width = 3, height = 3, margins = 0) + tm_inset(g(\"A3\"), group_id = \"A\", margins = 0) + tm_layout(asp = 1) + tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\"), frame_combine = T, frame = TRUE, offset = 0, stack_margin = 0)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"alignment","dir":"Articles","previous_headings":"","what":"Alignment","title":"tmap advanced: grouping of components","text":"Recall align.h align.v arguments tm_pos() specify alignment components see vignette positions). can set component individually, , case components inside tm_comp_group().","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey95\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\") + tm_inset(g(\"A2\"), group_id = \"A\", width = 3, height = 3) + tm_inset(g(\"A3\"), group_id = \"A\") + tm_layout(asp = 1) + tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"top\", align.h = \"right\"), frame_combine = FALSE, equalize = FALSE, offset = 0, stack_margin = 0)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_comp_group.html","id":"frame-and-background-color-and-alpha","dir":"Articles","previous_headings":"","what":"Frame and background color and alpha","title":"tmap advanced: grouping of components","text":"","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey75\", col = \"grey90\") + tm_inset(g(\"A1\"), group_id = \"A\") + tm_inset(g(\"A2\"), group_id = \"A\", width = 3, height = 3) + tm_inset(g(\"A3\"), group_id = \"A\") + tm_layout(asp = 1) + tm_comp_group(\"A\", position = tm_pos_in(\"left\", \"bottom\"), frame = TRUE, bg.color = \"purple\", bg.alpha = 0.5)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_extensions.html","id":"extension-types","dir":"Articles","previous_headings":"","what":"Extension types","title":"tmap advanced: extensions","text":"three types tmap extensions: New map layer types New spatial data classes New output modes Rather explaining extend tmap three types (rather complex), easier demonstrate proof--concept extension packages:","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_extensions.html","id":"new-map-layer-types","dir":"Articles","previous_headings":"","what":"New map layer types","title":"tmap advanced: extensions","text":"type extension requires: Specification visual variables. new visual variable, options need added. Spatial transformation function needs specified: e.g. centroids used? mapping visual variables (standard) visual transformation parameters. See tmap.glyphs. layer function tm_donuts added. glyph types layer functions follow, e.g. tm_pies, tm_radars.","code":"library(tmap.glyphs) ZH_muni = NLD_muni[NLD_muni$province == \"Zuid-Holland\", ] ZH_muni$income_middle = 100 - ZH_muni$income_high - ZH_muni$income_low  tm_shape(ZH_muni) +   tm_polygons() +   tm_donuts(     parts = tm_vars(c(\"income_low\", \"income_middle\", \"income_high\"), multivariate = TRUE),     fill.scale = tm_scale_categorical(values = \"-pu_gn_div\"),                  size = \"population\",     size.scale = tm_scale_continuous(ticks = c(50000, 100000, 250000, 500000)))"},{"path":"https://r-tmap.github.io/tmap/articles/adv_extensions.html","id":"new-spatial-data-classes","dir":"Articles","previous_headings":"","what":"New spatial data classes","title":"tmap advanced: extensions","text":"type extension requires methods obtain: spatial geometries (cast either vectorized objects (sfc) stars object indices) data variables levels () See tmap.networks supports sfnetworks Besides new spatial data class \"sfnetwork\", package also features new map layers, albeit basic far:","code":"library(sfnetworks) library(tmap.networks)  (sfn = as_sfnetwork(roxel)) #> # A sfnetwork with 701 nodes and 851 edges #> # #> # CRS:  EPSG:4326  #> # #> # A directed multigraph with 14 components with spatially explicit edges #> # #> # Node data: 701 × 1 (active) #>              geometry #>           <POINT [°]> #> 1 (7.533722 51.95556) #> 2 (7.533461 51.95576) #> 3 (7.532442 51.95422) #> 4  (7.53209 51.95328) #> 5 (7.532709 51.95209) #> 6 (7.532869 51.95257) #> # ℹ 695 more rows #> # #> # Edge data: 851 × 5 #>    from    to name                  type                                geometry #>   <int> <int> <chr>                 <fct>                       <LINESTRING [°]> #> 1     1     2 Havixbecker Strasse   residential (7.533722 51.95556, 7.533461 51… #> 2     3     4 Pienersallee          secondary   (7.532442 51.95422, 7.53236 51.… #> 3     5     6 Schulte-Bernd-Strasse residential (7.532709 51.95209, 7.532823 51… #> # ℹ 848 more rows tm_shape(sfn) +     tm_network() tm_shape(sfn) +     tm_edges(col = \"type\", lwd = 4) +     tm_nodes()"},{"path":"https://r-tmap.github.io/tmap/articles/adv_extensions.html","id":"new-mode","dir":"Articles","previous_headings":"","what":"New mode","title":"tmap advanced: extensions","text":"type extension difficult one. requires: Initialization Loading used spatial object Plotting function map layer type function map component Functions preprocess show legends Run plot Shiny integration functions package development tmap.mapgl contains two new modes, \"mapbox\" \"maplibre\". shiny integration may work yet.","code":"library(tmap.mapgl) tmap_mode(\"maplibre\") #> ℹ tmap mode set to \"maplibre\".  tm_shape(NLD_dist) +   tm_polygons(     fill = \"employment_rate\",      fill.scale = tm_scale_intervals(values = \"scico.roma\"),     lwd = 0.1) + tm_shape(NLD_muni) +   tm_polygons(fill = NULL, lwd = 1) + tm_maplibre(pitch = 75)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_groups.html","id":"layer-groups","dir":"Articles","previous_headings":"","what":"Layer groups","title":"tmap advanced: layer groups (view mode only)","text":"Via group group.control argument map layer functions possible group layers (de)select leaflet layer control box.","code":"tmap_mode(\"view\") #> ℹ tmap mode set to \"view\". tm_shape(NLD_dist) +   tm_polygons(     fill = \"dwelling_value\",     col = NULL,     fill.scale = tm_scale_intervals(values = \"-brewer.rd_yl_bu\", breaks = c(75, 150, 250, 500, 750, 1000, 1600)),     fill.legend = tm_legend(\"Dwelling value (x 1000)\"),     group = \"District data\") + tm_shape(NLD_muni) +   tm_borders(lwd = 1, col = \"black\", group = \"Municipality borders\") + tm_title(\"Select and deselect groups\") + tm_shape(NLD_prov, name = \"Province borders\") +   tm_borders(lwd = 3) + tm_view(set_zoom_limits = c(8,14)) #> Registered S3 method overwritten by 'jsonify': #>   method     from     #>   print.json jsonlite"},{"path":"https://r-tmap.github.io/tmap/articles/adv_margins.html","id":"design-mode","dir":"Articles","previous_headings":"","what":"Design mode","title":"tmap advanced: margins and aspect ratio","text":"tmap offers special design mode, can enabled via tmap_design_mode. Bolow map, second time design mode enabled:","code":"(tm = tm_shape(NLD_muni) +   tm_polygons(fill = \"employment_rate\",      fill.legend = tm_legend(position = tm_pos_in(\"left\", \"top\"))) +    tm_compass(position = tm_pos_in(\"right\", \"bottom\")) +    tm_scalebar(position = tm_pos_in(\"left\", \"bottom\")))  tmap_design_mode() #> design.mode: ON  tm #> ----------------W (in)--H (in)--asp--- #> | device        7.290 8.000 0.911 | #> | plot area     6.502 7.680 0.847 | #> | facets area   6.502 7.680 0.847 | #> | map area      6.502 7.680 0.847 | #> -----------------------------------"},{"path":"https://r-tmap.github.io/tmap/articles/adv_margins.html","id":"tm_layout-and-tmap-options","dir":"Articles","previous_headings":"","what":"tm_layout() and tmap options","title":"tmap advanced: margins and aspect ratio","text":"options related layout map, background color margins, can set via tm_layout. options subset tmap options, can set via tmap_options (stand-alone function) tm_options, supposed stacked + operator.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_margins.html","id":"inner-and-outer-margins","dir":"Articles","previous_headings":"","what":"Inner and outer margins","title":"tmap advanced: margins and aspect ratio","text":"Inner outer margins can set options inner.margins outer.margins. inner margins margins shape (.e. spatial geometries) map frame. design mode, shape area inner margins shown yellow rectangle.  outer margins margins map frame device frame.","code":"tm_shape(NLD_muni) +   tm_polygons(fill = \"employment_rate\") +     tm_layout(         inner.margins = c(0.2, 0.2, 0.2, 0.2)) #> ----------------W (in)--H (in)--asp--- #> | device        7.290 5.000 1.458 | #> | plot area     5.171 4.800 1.077 | #> | facets area   4.139 4.800 0.862 | #> | map area      4.064 4.800 0.847 | #> ----------------------------------- tm_shape(NLD_muni) +   tm_polygons(fill = \"employment_rate\") +     tm_layout(         outer.margins = c(0.2, 0.2, 0.2, 0.2)) #> ----------------W (in)--H (in)--asp--- #> | device        7.290 5.000 1.458 | #> | plot area     3.648 3.000 1.216 | #> | facets area   2.615 3.000 0.872 | #> | map area      2.540 3.000 0.847 | #> -----------------------------------"},{"path":"https://r-tmap.github.io/tmap/articles/adv_margins.html","id":"aspect-ratio","dir":"Articles","previous_headings":"","what":"Aspect ratio","title":"tmap advanced: margins and aspect ratio","text":"aspect map frame can set via option asp. , inner margins adjusted automatically.  special value 0 means aspect ratio adjusted meet space left device substracting outer margins space occupied outside components (case just legends).","code":"tm_shape(NLD_muni) +   tm_polygons(fill = \"employment_rate\") +     tm_title(\"Square map\") +     tm_layout(asp = 1) #> ----------------W (in)--H (in)--asp--- #> | device        7.29 5.00 1.46 | #> | plot area     5.53 4.80 1.15 | #> | facets area   4.50 4.50 1.00 | #> | map area      4.43 4.43 1.00 | #> -------------------------------- tm_shape(NLD_muni) +   tm_polygons(fill = \"employment_rate\") +     tm_layout(outer.margins = c(0.2, 0.2, 0.2, 0.2),               asp = 0) #> ----------------W (in)--H (in)--asp--- #> | device        7.29 5.00 1.46 | #> | plot area     4.37 3.00 1.46 | #> | facets area   3.34 3.00 1.11 | #> | map area      3.27 3.00 1.09 | #> --------------------------------"},{"path":"https://r-tmap.github.io/tmap/articles/adv_multivariate.html","id":"multiple-visual-variables","dir":"Articles","previous_headings":"","what":"Multiple visual variables","title":"tmap advanced: multiple visual variables","text":"Usually specify data-driven visual variable one data variable (see vignette visual variables). However, several use cases, useful use data variables one visual variables. two ways use multiple data variables one visual variable: creating facets, multivariate mapping.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_multivariate.html","id":"creating-facets","dir":"Articles","previous_headings":"","what":"Creating facets","title":"tmap advanced: multiple visual variables","text":"Recall vigentte facets  facet create specified data variable. options select variables available via underlying function tm_vars(). instance, variables 12 18 (columns 12 18, disregarding geometry column)  first 3 variables:  creating facets. standard way. multivariate mapping. cases can divived two g going cases, one important two","code":"tm_shape(NLD_muni) +   tm_polygons(     fill = c(\"pop_0_14\", \"pop_25_44\", \"pop_65plus\"),     fill.legend = tm_legend(\"Percentage\"),     fill.free = FALSE) tm_shape(NLD_muni) +   tm_polygons(     fill = tm_vars(12:18)) tm_shape(NLD_muni, fig.height = 8) +   tm_polygons(     fill = tm_vars(n = 3)) #> Warning: Number of levels of the variable assigned to the aesthetic \"fill\" of #> the layer \"polygons\" is 345, which is larger than n.max (which is 30), so #> levels are combined. #> Warning: Number of levels of the variable assigned to the aesthetic \"fill\" of #> the layer \"polygons\" is 345, which is larger than n.max (which is 30), so #> levels are combined. #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."},{"path":"https://r-tmap.github.io/tmap/articles/adv_multivariate.html","id":"multivariate-mapping","dir":"Articles","previous_headings":"","what":"Multivariate mapping","title":"tmap advanced: multiple visual variables","text":"(least) two use cases:","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_multivariate.html","id":"rgb-image","dir":"Articles","previous_headings":"Multivariate mapping","what":"RGB image","title":"tmap advanced: multiple visual variables","text":"Note channels included dimenison \"band\". can use argument dimvalues select :  Alternatively, can split stars object: plot like :","code":"library(stars) #> Loading required package: abind #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE tif = system.file(\"tif/L7_ETMs.tif\", package = \"stars\") (L7 = read_stars(tif)) #> stars object with 3 dimensions and 1 attribute #> attribute(s): #>              Min. 1st Qu. Median     Mean 3rd Qu. Max. #> L7_ETMs.tif     1      54     69 68.91242      86  255 #> dimension(s): #>      from  to  offset delta                     refsys point x/y #> x       1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE [x] #> y       1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE [y] #> band    1   6      NA    NA                         NA    NA tm_shape(L7) +     tm_rgb(col = tm_vars(dimvalues = 3:1, multivariate = TRUE)) (L7split = split(L7)) #> stars object with 2 dimensions and 6 attributes #> attribute(s): #>     Min. 1st Qu. Median     Mean 3rd Qu. Max. #> X1    47      67     78 79.14772      89  255 #> X2    32      55     66 67.57465      79  255 #> X3    21      49     63 64.35886      77  255 #> X4     9      52     63 59.23541      75  255 #> X5     1      63     89 83.18266     112  255 #> X6     1      32     60 59.97521      88  255 #> dimension(s): #>   from  to  offset delta                     refsys point x/y #> x    1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE [x] #> y    1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE [y] tm_shape(L7split) +     tm_rgb(col = tm_vars(3:1, multivariate = TRUE))"},{"path":"https://r-tmap.github.io/tmap/articles/adv_multivariate.html","id":"glyphs","dir":"Articles","previous_headings":"Multivariate mapping","what":"Glyphs","title":"tmap advanced: multiple visual variables","text":"Glyph small charts plotted symbols. See [extention package tmap.glyphs.  visual variable parts (introduced tmap.glyphs) specified multivariate visual variable. specifies parts (slices) donut charts uses also fill color.","code":"library(tmap.glyphs)  ZH_muni = NLD_muni[NLD_muni$province == \"Zuid-Holland\", ] ZH_muni$income_middle = 100 - ZH_muni$income_high - ZH_muni$income_low  tm_shape(ZH_muni) +   tm_polygons() +   tm_donuts(     parts = tm_vars(c(\"income_low\", \"income_middle\", \"income_high\"), multivariate = TRUE),     fill.scale = tm_scale_categorical(values = \"-pu_gn_div\"),                  size = \"population\",     size.scale = tm_scale_continuous(ticks = c(50000, 100000, 250000, 500000)))"},{"path":"https://r-tmap.github.io/tmap/articles/adv_options.html","id":"tmap-options","dir":"Articles","previous_headings":"","what":"tmap options","title":"tmap advanced: options","text":"options tmap can retrieved via tmap_options() works similar base R options(): many options, need proper way print . Let’s use lobstr :","code":"opt = tmap_options() library(lobstr) tree(opt) #> <list> #> ├─modes: <list> #> │ ├─plot: <list> #> │ │ ├─name: \"Grid\" #> │ │ ├─use_gradient: FALSE #> │ │ ├─crs_basemap: 3857 #> │ │ └─limit_latitude_3857<dbl [2]>: -84, 84 #> │ └─view: <list> #> │   ├─name: \"Leaflet\" #> │   ├─use_browser: FALSE #> │   ├─use_WebGL: NA #> │   ├─legend.position: S3<tm_pos> #> │   │ ├─pos.h: \"right\" #> │   │ ├─pos.v: \"bottom\" #> │   │ ├─align.h: \"left\" #> │   │ ├─align.v: \"top\" #> │   │ ├─just.h: \"left\" #> │   │ ├─just.v: \"top\" #> │   │ └─type: \"in\" #> │   ├─crs_basemap: <list> #> │   │ ├─dimensions: 3857 #> │   │ └─4326 #> │   ├─facet.max: 16 #> │   ├─control.position<chr [2]>: \"left\", \"top\" #> │   ├─control.collapse: TRUE #> │   ├─basemap.show: TRUE #> │   ├─set_bounds: FALSE #> │   ├─set_view: NA #> │   ├─set_zoom_limits: NA #> │   ├─qtm.scalebar: TRUE #> │   ├─qtm.minimap: FALSE #> │   ├─qtm.mouse_coordinates: TRUE #> │   ├─use_circle_markers: TRUE #> │   └─leaflet.options: <list> #> ├─crs: NA #> ├─facet.max: 64 #> ├─facet.flip: FALSE #> ├─free.scales: <NULL> #> ├─raster.max_cells: 1e+07 #> ├─raster.warp: TRUE #> ├─show.messages: TRUE #> ├─show.warnings: TRUE #> ├─output.format: \"png\" #> ├─output.size: 49 #> ├─output.dpi: 300 #> ├─animation.dpi: 100 #> ├─value.const: <list> #> │ ├─fill.symbols: \"grey60\" #> │ ├─fill.dots: \"black\" #> │ ├─fill: \"grey85\" #> │ ├─col.polygons: \"grey25\" #> │ ├─col.symbols: \"grey25\" #> │ ├─col.raster: \"grey40\" #> │ ├─col.text: \"black\" #> │ ├─col: \"black\" #> │ ├─bgcol.labels_highlighted: \"white\" #> │ ├─bgcol: \"#00000000\" #> │ ├─lwd: 1 #> │ ├─lty: \"solid\" #> │ ├─text: \"Abc\" #> │ ├─text.labels: \"\" #> │ ├─fontface: <NULL> #> │ ├─shape.squares: 22 #> │ ├─shape.dots: 19 #> │ ├─shape.markers: S3<tmap_icons> #> │ │ ├─iconUrl: \"/home/runner/work/_temp/Library/...\" #> │ │ ├─iconWidth: 25 #> │ │ ├─iconHeight: 41 #> │ │ ├─iconAnchorX: 12 #> │ │ └─iconAnchorY: 41 #> │ ├─shape: 21 #> │ ├─size.bubbles: 1.3333 #> │ ├─size.squares: 1.3333 #> │ ├─size.dots: 0.3 #> │ ├─size: 1 #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─angle: 0 #> │ └─num: 1 #> ├─value.na: <list> #> │ ├─fill: \"grey75\" #> │ ├─col: \"grey75\" #> │ ├─col.raster: \"#00000000\" #> │ ├─bgcol: \"grey75\" #> │ ├─lty: \"solid\" #> │ ├─text: \"Unknown\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─col_alpha.raster: 0 #> │ └─angle: 0 #> ├─value.null: <list> #> │ ├─fill: \"grey95\" #> │ ├─col: \"grey95\" #> │ ├─col.polygons: \"grey40\" #> │ ├─bgcol: \"grey95\" #> │ ├─lty: \"solid\" #> │ ├─lwd: 0.2 #> │ ├─shape: 20 #> │ ├─text: \"\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─size: 0.2 #> │ ├─angle: 0 #> │ └─num: 0 #> ├─value.blank: <list> #> │ ├─fill: \"#00000000\" #> │ ├─col: \"#00000000\" #> │ ├─bgcol: \"#00000000\" #> │ ├─lty: \"blank\" #> │ ├─lwd: 0 #> │ ├─text: \"\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 0 #> │ ├─col_alpha: 0 #> │ ├─bgcol_alpha: 0 #> │ ├─angle: 0 #> │ └─num: 0 #> ├─values.var: <list> #> │ ├─fill: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.area7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─col: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.line7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─fill.dots: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.line7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─bgcol: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.area7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─size: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─size.bubbles: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─lwd<dbl [2]>: 0, 3 #> │ ├─lty<chr [5]>: \"dashed\", \"dotted\", \"dotdash\", \"longdash\", \"twodash\" #> │ ├─text<chr [26]>: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", ... #> │ ├─fontface<chr [3]>: \"plain\", \"italic\", \"bold\" #> │ ├─fill_alpha<dbl [2]>: 0.25, 1 #> │ ├─col_alpha<dbl [2]>: 0.25, 1 #> │ ├─bgcol_alpha<dbl [2]>: 0.25, 1 #> │ ├─shape<int [5]>: 21, 22, 23, 24, 25 #> │ ├─area<dbl [2]>: 0, 1 #> │ ├─xmod<dbl [2]>: 0, 1 #> │ ├─ymod<dbl [2]>: 0, 1 #> │ ├─angle<dbl [2]>: 0, 360 #> │ └─num<dbl [2]>: 0, 1 #> ├─values.range: <list> #> │ ├─fill: NA #> │ ├─col: NA #> │ ├─size<dbl [2]>: 0, 1 #> │ ├─lwd<dbl [2]>: 0, 1 #> │ ├─lty: NA #> │ ├─text: NA #> │ ├─fontface: NA #> │ ├─fill_alpha: NA #> │ ├─col_alpha: NA #> │ ├─shape: NA #> │ ├─angle: NA #> │ └─num<dbl [2]>: 0, 1 #> ├─value.neutral: <list> #> │ ├─size: 0.75 #> │ ├─lwd: 2 #> │ ├─lty: \"solid\" #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─text: \"Abc\" #> │ ├─fontface: \"plain\" #> │ ├─angle: 0 #> │ └─num: 1 #> ├─values.scale: <list> #> │ ├─1 #> │ ├─lwd.lines: 1 #> │ ├─size.symbols: 1 #> │ ├─size.bubbles: 1.3333 #> │ └─size.squares: 1.3333 #> ├─scales.var: <list> #> │ ├─fill: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─col: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─bgcol: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─lwd: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"continuous\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─lty: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─shape: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─size: <list> #> │ │ ├─fact: \"continuous\" #> │ │ ├─num: \"continuous\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─fill_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─col_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─bgcol_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─area: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"continuous\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─xmod: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─ymod: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─angle: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─text: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ └─fontface: <list> #> │   ├─fact: \"categorical\" #> │   ├─num: \"categorical\" #> │   ├─datetime: \"categorical\" #> │   └─date: \"categorical\" #> ├─scale.misc.args: <list> #> │ ├─continuous: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ ├─trans: \"identity\" #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─0 #> │ ├─continuous_log: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log2: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log10: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log1p: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_sqrt: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─0 #> │ ├─continuous_pseudo_log: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ └─rank: <list> #> │   ├─n: 5 #> │   └─unit: \"rank\" #> ├─continuous.nclass_per_legend_break: 50 #> ├─continuous.nclasses: 101 #> ├─label.format: <list> #> │ ├─fun: <NULL> #> │ ├─scientific: FALSE #> │ ├─digits: NA #> │ ├─big.num.abbr<dbl [2]>: 6, 9 #> │ ├─prefix: \"\" #> │ ├─suffix: \"\" #> │ ├─text.separator: \"to\" #> │ ├─text.less.than<chr [2]>: \"Less\", \"than\" #> │ ├─text.or.more<chr [2]>: \"or\", \"more\" #> │ ├─text.align: NA #> │ ├─text.to.columns: FALSE #> │ └─html.escape: TRUE #> ├─label.na: \"Missing\" #> ├─scale: 0.75 #> ├─asp: NA #> ├─bg: TRUE #> ├─bg.color: \"white\" #> ├─outer.bg: FALSE #> ├─outer.bg.color: \"white\" #> ├─frame: TRUE #> ├─frame.color: NA #> ├─frame.alpha: 1 #> ├─frame.lwd: 1 #> ├─frame.r: 2 #> ├─frame.double_line: FALSE #> ├─outer.margins<dbl [4]>: 0.02, 0.02, 0.02, 0.02 #> ├─inner.margins: <list> #> │ ├─stars<dbl [4]>: 0, 0, 0, 0 #> │ ├─SpatRaster<dbl [4]>: 0, 0, 0, 0 #> │ └─<dbl [4]>0.02, 0.02, 0.02, 0.02 #> ├─inner.margins.extra<dbl [4]>: 0, 0, 0, 0 #> ├─meta.margins: NA #> ├─meta.auto_margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> ├─between_margin: 0.5 #> ├─panel.margin<dbl [2]>: 0.4, 0 #> ├─grid.mark.height: 2 #> ├─xylab.height: 1.25 #> ├─coords.height: 1.25 #> ├─xlab.show: FALSE #> ├─xlab.text: \"\" #> ├─xlab.size: 1 #> ├─xlab.color: \"black\" #> ├─xlab.rotation: 0 #> ├─xlab.space: 0 #> ├─xlab.fontface: <NULL> #> ├─xlab.fontfamily: <NULL> #> ├─xlab.alpha: 1 #> ├─xlab.side: \"bottom\" #> ├─ylab.show: FALSE #> ├─ylab.text: \"\" #> ├─ylab.size: 1 #> ├─ylab.color: \"black\" #> ├─ylab.rotation: 0 #> ├─ylab.space: 0 #> ├─ylab.fontface: <NULL> #> ├─ylab.fontfamily: <NULL> #> ├─ylab.alpha: 1 #> ├─ylab.side: \"left\" #> ├─panel.type: NA #> ├─panel.wrap.pos: \"top\" #> ├─panel.xtab.pos<chr [2]>: \"left\", \"top\" #> ├─unit: \"metric\" #> ├─color.sepia_intensity: 0 #> ├─color.saturation: 1 #> ├─color_vision_deficiency_sim: \"none\" #> ├─text.fontface: \"plain\" #> ├─text.fontfamily: \"\" #> ├─text.alpha: 1 #> ├─component.position: <list> #> │ ├─in: S3<tm_pos> #> │ │ ├─pos.h: \"left\" #> │ │ ├─pos.v: \"top\" #> │ │ ├─align.h: \"left\" #> │ │ ├─align.v: \"top\" #> │ │ ├─just.h: \"left\" #> │ │ ├─just.v: \"top\" #> │ │ └─type: \"in\" #> │ └─out: S3<tm_pos> #> │   ├─cell.h: \"right\" #> │   ├─cell.v: \"center\" #> │   ├─pos.h: \"left\" #> │   ├─pos.v: \"top\" #> │   ├─align.h: \"left\" #> │   ├─align.v: \"top\" #> │   ├─just.h: \"left\" #> │   ├─just.v: \"top\" #> │   └─type: \"out\" #> ├─component.offset<dbl [4]>: 0.75, 0, 0, 0 #> ├─component.stack_margin<dbl [2]>: 0, 0.5 #> ├─component.autoscale: TRUE #> ├─component.resize_as_group: FALSE #> ├─component.frame_combine: TRUE #> ├─component.stack: \"vertical\" #> ├─legend.stack<chr [6]>: \"vertical\", \"horizontal\", \"horizontal\", \"vertical\", \"horizontal\", \"vertical\" #> ├─chart.stack<chr [6]>: \"vertical\", \"horizontal\", \"horizontal\", \"vertical\", \"horizontal\", \"vertical\" #> ├─component.equalize: TRUE #> ├─component.frame: FALSE #> ├─component.frame.color: NA #> ├─component.frame.alpha: 1 #> ├─component.frame.lwd: 1 #> ├─component.frame.r: 2 #> ├─component.bg: TRUE #> ├─component.bg.color: \"white\" #> ├─component.bg.alpha: 1 #> ├─legend.show: TRUE #> ├─legend.design: \"standard\" #> ├─legend.orientation: \"portrait\" #> ├─legend.position: S3<tm_pos> #> │ ├─cell.h: \"right\" #> │ ├─cell.v: \"bottom\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"autoout\" #> ├─legend.width: NA #> ├─legend.height: NA #> ├─legend.reverse: FALSE #> ├─legend.na.show: NA #> ├─legend.title.color: NA #> ├─legend.title.size: 0.9 #> ├─legend.title.fontface: <NULL> #> ├─legend.title.fontfamily: <NULL> #> ├─legend.title.alpha: 1 #> ├─legend.xlab.color: NA #> ├─legend.xlab.size: 0.9 #> ├─legend.xlab.fontface: <NULL> #> ├─legend.xlab.fontfamily: <NULL> #> ├─legend.xlab.alpha: 1 #> ├─legend.ylab.color: NA #> ├─legend.ylab.size: 0.9 #> ├─legend.ylab.fontface: <NULL> #> ├─legend.ylab.fontfamily: <NULL> #> ├─legend.ylab.alpha: 1 #> ├─legend.text.color: NA #> ├─legend.text.size: 0.7 #> ├─legend.text.fontface: <NULL> #> ├─legend.text.fontfamily: <NULL> #> ├─legend.text.alpha: 1 #> ├─legend.frame: TRUE #> ├─legend.frame.color: NA #> ├─legend.frame.alpha: 1 #> ├─legend.frame.lwd: 1 #> ├─legend.frame.r: 2 #> ├─legend.bg: TRUE #> ├─legend.bg.color: \"white\" #> ├─legend.bg.alpha: 1 #> ├─legend.only: FALSE #> ├─legend.absolute_fontsize: 14 #> ├─legend.settings.standard.portrait: <list> #> │ ├─item.height<dbl [6]>: 1.2, 1, 3, 1.2, 1.2, 1.2 #> │ ├─item.width<dbl [6]>: 1.2, 1, 1.2, 1.2, 3, 1.2 #> │ ├─item.r: 2 #> │ ├─item.space<dbl [6]>: 0.2, 0.2, 0, 0.2, 0.2, 0 #> │ ├─item.na.height<dbl [6]>: NA, NA, 1.2, NA, NA, NA #> │ ├─item.na.width<dbl [6]>: NA, NA, 1.2, NA, NA, NA #> │ ├─item.na.space<dbl [6]>: 0.2, 0.3, 1, 0.2, 0.2, 0.2 #> │ ├─item.shape: 107 #> │ ├─title.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─xlab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─ylab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─title.align<chr [2]>: \"right\", \"left\" #> │ ├─xlab.align: \"left\" #> │ ├─ylab.align: \"center\" #> │ ├─ticks: <list> #> │ │ ├─rect: <list> #> │ │ ├─symbols: <list> #> │ │ ├─gradient: <list> #> │ │ │ └─<dbl [2]>1, 1.5 #> │ │ ├─lines: <list> #> │ │ ├─text: <list> #> │ │ └─bivariate: <list> #> │ ├─ticks.disable.na<lgl [6]>: FALSE, FALSE, TRUE, FALSE, FALSE, TRUE #> │ ├─ticks.col: NA #> │ ├─ticks.lwd: 1.5 #> │ ├─margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> │ └─item_text.margin: 0.25 #> ├─legend.settings.standard.landscape: <list> #> │ ├─item.height<dbl [5]>: 1, 1, 1.2, 1, 1 #> │ ├─item.width<dbl [5]>: 6, 3, 6, 6, 6 #> │ ├─item.r: 2 #> │ ├─item.space<dbl [5]>: 0.2, 0.3, 0, 0.2, 0.2 #> │ ├─item.na.height<dbl [5]>: NA, NA, 2, NA, NA #> │ ├─item.na.width<dbl [5]>: NA, NA, 4, NA, NA #> │ ├─item.na.space<dbl [5]>: 0.2, 0.3, 0.3, 0.2, 0.2 #> │ ├─item.shape: 107 #> │ ├─title.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─xlab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─ylab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─title.align<chr [2]>: \"right\", \"left\" #> │ ├─xlab.align: \"left\" #> │ ├─ylab.align: \"center\" #> │ ├─ticks: <list> #> │ │ ├─rect: <list> #> │ │ ├─symbols: <list> #> │ │ ├─gradient: <list> #> │ │ │ └─<dbl [2]>1, 1.2 #> │ │ ├─lines: <list> #> │ │ └─text: <list> #> │ ├─ticks.disable.na<lgl [5]>: FALSE, FALSE, TRUE, FALSE, FALSE #> │ ├─ticks.col: NA #> │ ├─ticks.lwd: 1.5 #> │ ├─margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> │ └─item_text.margin: 0.25 #> ├─add_legend.position: <NULL> #> ├─chart.show: TRUE #> ├─chart.plot.axis.x: FALSE #> ├─chart.plot.axis.y: TRUE #> ├─chart.position: S3<tm_pos> #> │ ├─cell.h: \"right\" #> │ ├─cell.v: \"bottom\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"bottom\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"autoout\" #> ├─chart.width<dbl [8]>: 10, 20, 10, 20, 10, 10, 10, 15 #> ├─chart.height<dbl [8]>: 10, 10, 10, 10, 10, 10, 10, 10 #> ├─chart.reverse: FALSE #> ├─chart.na.show: NA #> ├─chart.title.color: NA #> ├─chart.title.size: 0.9 #> ├─chart.title.fontface: <NULL> #> ├─chart.title.fontfamily: <NULL> #> ├─chart.title.alpha: <NULL> #> ├─chart.xlab.color: NA #> ├─chart.xlab.size: 0.9 #> ├─chart.xlab.fontface: <NULL> #> ├─chart.xlab.fontfamily: <NULL> #> ├─chart.xlab.alpha: <NULL> #> ├─chart.ylab.color: NA #> ├─chart.ylab.size: 0.9 #> ├─chart.ylab.fontface: <NULL> #> ├─chart.ylab.fontfamily: <NULL> #> ├─chart.ylab.alpha: 1 #> ├─chart.text.color: NA #> ├─chart.text.size: 0.7 #> ├─chart.text.fontface: <NULL> #> ├─chart.text.fontfamily: <NULL> #> ├─chart.text.alpha: 1 #> ├─chart.frame: TRUE #> ├─chart.frame.color: NA #> ├─chart.frame.alpha: 1 #> ├─chart.frame.lwd: 1 #> ├─chart.frame.r: 2 #> ├─chart.bg: TRUE #> ├─chart.bg.color: \"white\" #> ├─chart.bg.alpha: 1 #> ├─chart.object.color: \"#DDDDDD\" #> ├─title.size: 1.3 #> ├─title.color: NA #> ├─title.fontface: <NULL> #> ├─title.fontfamily: <NULL> #> ├─title.alpha: 1 #> ├─title.padding<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─title.frame: FALSE #> ├─title.frame.color: NA #> ├─title.frame.alpha: 1 #> ├─title.frame.lwd: 1 #> ├─title.frame.r: 2 #> ├─title.position: S3<tm_pos> #> │ ├─cell.h: \"center\" #> │ ├─cell.v: \"top\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"out\" #> ├─title.width: NA #> ├─credits.size: 0.7 #> ├─credits.color: NA #> ├─credits.fontface: <NULL> #> ├─credits.fontfamily: <NULL> #> ├─credits.alpha: 1 #> ├─credits.padding<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─credits.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─credits.width: NA #> ├─credits.height: NA #> ├─compass.north: 0 #> ├─compass.type: \"arrow\" #> ├─compass.text.size: 0.8 #> ├─compass.size: NA #> ├─compass.show.labels: 1 #> ├─compass.cardinal.directions<chr [4]>: \"N\", \"E\", \"S\", \"W\" #> ├─compass.text.color: NA #> ├─compass.color.dark: NA #> ├─compass.color.light: NA #> ├─compass.lwd: 1 #> ├─compass.margins<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─compass.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"bottom\" #> │ └─type: \"in\" #> ├─inset.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─logo.height: 3 #> ├─logo.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─logo.between_margin: 0.2 #> ├─logo.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset_map.height: 7 #> ├─inset_map.width: 7 #> ├─inset_map.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─inset_map.between_margin: 0.2 #> ├─inset_map.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset_map.frame: TRUE #> ├─inset.height: 3 #> ├─inset.width: 3 #> ├─inset.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─inset.between_margin: 0.2 #> ├─inset.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset.frame: TRUE #> ├─inset.bg: TRUE #> ├─inset.bg.color: \"#ffffff\" #> ├─inset.bg.alpha: 1 #> ├─inset_grob.height: 7 #> ├─inset_grob.width: 7 #> ├─inset_gg.height: 7 #> ├─inset_gg.width: 7 #> ├─scalebar.breaks: <NULL> #> ├─scalebar.width: 12 #> ├─scalebar.text.size: 0.5 #> ├─scalebar.text.color: NA #> ├─scalebar.text.fontface: <NULL> #> ├─scalebar.text.fontfamily: <NULL> #> ├─scalebar.color.dark: \"black\" #> ├─scalebar.color.light: \"white\" #> ├─scalebar.lwd: 1 #> ├─scalebar.size: <NULL> #> ├─scalebar.margins<dbl [4]>: 0.01, 0.01, 0.01, 0.01 #> ├─scalebar.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─grid.show: FALSE #> ├─grid.labels.pos<chr [2]>: \"left\", \"bottom\" #> ├─grid.x: NA #> ├─grid.y: NA #> ├─grid.n.x: NA #> ├─grid.n.y: NA #> ├─grid.crs: NA #> ├─grid.col: NA #> ├─grid.lwd: 1 #> ├─grid.alpha: NA #> ├─grid.labels.show: TRUE #> ├─grid.labels.size: 0.6 #> ├─grid.labels.col: NA #> ├─grid.labels.fontface: <NULL> #> ├─grid.labels.fontfamily: <NULL> #> ├─grid.labels.rot<dbl [2]>: 0, 0 #> ├─grid.labels.format: <list> #> │ └─big.mark: \",\" #> ├─grid.labels.cardinal: FALSE #> ├─grid.labels.margin.x: 0 #> ├─grid.labels.margin.y: 0 #> ├─grid.labels.space.x: NA #> ├─grid.labels.space.y: NA #> ├─grid.labels.inside_frame: FALSE #> ├─grid.ticks: TRUE #> ├─grid.lines: TRUE #> ├─grid.ndiscr: 100 #> ├─mouse_coordinates.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─minimap.server: NA #> ├─minimap.toggle: TRUE #> ├─minimap.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─panel.show: NA #> ├─panel.labels: NA #> ├─panel.label.size: 1 #> ├─panel.label.color: \"black\" #> ├─panel.label.fontface: <NULL> #> ├─panel.label.fontfamily: <NULL> #> ├─panel.label.alpha: 1 #> ├─panel.label.bg: TRUE #> ├─panel.label.bg.color: \"grey80\" #> ├─panel.label.bg.alpha: 1 #> ├─panel.label.frame: TRUE #> ├─panel.label.frame.color: NA #> ├─panel.label.frame.alpha: 1 #> ├─panel.label.frame.lwd: 1 #> ├─panel.label.frame.r: 2 #> ├─panel.label.height: 1 #> ├─panel.label.rot<dbl [4]>: 90, 0, 270, 0 #> ├─qtm.scalebar: FALSE #> ├─qtm.minimap: FALSE #> ├─qtm.mouse_coordinates: FALSE #> ├─earth_boundary: FALSE #> ├─earth_boundary.color: NA #> ├─earth_boundary.lwd: 1 #> ├─earth_datum: \"OGC:CRS84\" #> ├─space.color: NA #> ├─check_and_fix: FALSE #> ├─basemap.show: FALSE #> ├─basemap.server<chr [3]>: \"Esri.WorldGr...\", \"OpenStreetMap\", \"Esri.WorldTo...\" #> ├─basemap.alpha: 1 #> ├─basemap.zoom: NA #> ├─tiles.show: FALSE #> ├─tiles.server: \"\" #> ├─tiles.alpha: 1 #> ├─tiles.zoom: NA #> ├─attr.color: \"black\" #> ├─crs_extra: \"\" #> └─crs_global: \"+proj=eqearth\""},{"path":"https://r-tmap.github.io/tmap/articles/adv_options.html","id":"mode-specific-options","dir":"Articles","previous_headings":"","what":"Mode specific options","title":"tmap advanced: options","text":"Note first option, called \"modes\" really option, rather list mode-specific options, first subitem item name mode. , technical rather user interface mode names used: \"Grid\" \"plot\" mode \"Leaflet\" \"view\" mode. subitems either totally new options, standard options (also listed ) different defaults. list options specific mode can obtained follows: last method used internally throughout tmap. takes mode style account.","code":"# only the mode-specific options: tree(tmap_options_mode(\"view\")) #> <list> #> ├─use_browser: FALSE #> ├─use_WebGL: NA #> ├─legend.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─crs_basemap: <list> #> │ ├─dimensions: 3857 #> │ └─4326 #> ├─facet.max: 16 #> ├─control.position<chr [2]>: \"left\", \"top\" #> ├─control.collapse: TRUE #> ├─basemap.show: TRUE #> ├─set_bounds: FALSE #> ├─set_view: NA #> ├─set_zoom_limits: NA #> ├─qtm.scalebar: TRUE #> ├─qtm.minimap: FALSE #> ├─qtm.mouse_coordinates: TRUE #> ├─use_circle_markers: TRUE #> └─leaflet.options: <list>  # all options tree(tmap_options_mode(\"view\", mode.specific = FALSE)) #> <list> #> ├─crs: NA #> ├─facet.max: 16 #> ├─facet.flip: FALSE #> ├─free.scales: <NULL> #> ├─raster.max_cells: 1e+07 #> ├─raster.warp: TRUE #> ├─show.messages: TRUE #> ├─show.warnings: TRUE #> ├─output.format: \"png\" #> ├─output.size: 49 #> ├─output.dpi: 300 #> ├─animation.dpi: 100 #> ├─value.const: <list> #> │ ├─fill.symbols: \"grey60\" #> │ ├─fill.dots: \"black\" #> │ ├─fill: \"grey85\" #> │ ├─col.polygons: \"grey25\" #> │ ├─col.symbols: \"grey25\" #> │ ├─col.raster: \"grey40\" #> │ ├─col.text: \"black\" #> │ ├─col: \"black\" #> │ ├─bgcol.labels_highlighted: \"white\" #> │ ├─bgcol: \"#00000000\" #> │ ├─lwd: 1 #> │ ├─lty: \"solid\" #> │ ├─text: \"Abc\" #> │ ├─text.labels: \"\" #> │ ├─fontface: <NULL> #> │ ├─shape.squares: 22 #> │ ├─shape.dots: 19 #> │ ├─shape.markers: S3<tmap_icons> #> │ │ ├─iconUrl: \"/home/runner/work/_temp/Library/...\" #> │ │ ├─iconWidth: 25 #> │ │ ├─iconHeight: 41 #> │ │ ├─iconAnchorX: 12 #> │ │ └─iconAnchorY: 41 #> │ ├─shape: 21 #> │ ├─size.bubbles: 1.3333 #> │ ├─size.squares: 1.3333 #> │ ├─size.dots: 0.3 #> │ ├─size: 1 #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─angle: 0 #> │ └─num: 1 #> ├─value.na: <list> #> │ ├─fill: \"grey75\" #> │ ├─col: \"grey75\" #> │ ├─col.raster: \"#00000000\" #> │ ├─bgcol: \"grey75\" #> │ ├─lty: \"solid\" #> │ ├─text: \"Unknown\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─col_alpha.raster: 0 #> │ └─angle: 0 #> ├─value.null: <list> #> │ ├─fill: \"grey95\" #> │ ├─col: \"grey95\" #> │ ├─col.polygons: \"grey40\" #> │ ├─bgcol: \"grey95\" #> │ ├─lty: \"solid\" #> │ ├─lwd: 0.2 #> │ ├─shape: 20 #> │ ├─text: \"\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─size: 0.2 #> │ ├─angle: 0 #> │ └─num: 0 #> ├─value.blank: <list> #> │ ├─fill: \"#00000000\" #> │ ├─col: \"#00000000\" #> │ ├─bgcol: \"#00000000\" #> │ ├─lty: \"blank\" #> │ ├─lwd: 0 #> │ ├─text: \"\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 0 #> │ ├─col_alpha: 0 #> │ ├─bgcol_alpha: 0 #> │ ├─angle: 0 #> │ └─num: 0 #> ├─values.var: <list> #> │ ├─fill: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.area7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─col: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.line7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─fill.dots: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.line7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─bgcol: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.area7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─size: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─size.bubbles: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─lwd<dbl [2]>: 0, 3 #> │ ├─lty<chr [5]>: \"dashed\", \"dotted\", \"dotdash\", \"longdash\", \"twodash\" #> │ ├─text<chr [26]>: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", ... #> │ ├─fontface<chr [3]>: \"plain\", \"italic\", \"bold\" #> │ ├─fill_alpha<dbl [2]>: 0.25, 1 #> │ ├─col_alpha<dbl [2]>: 0.25, 1 #> │ ├─bgcol_alpha<dbl [2]>: 0.25, 1 #> │ ├─shape<int [5]>: 21, 22, 23, 24, 25 #> │ ├─area<dbl [2]>: 0, 1 #> │ ├─xmod<dbl [2]>: 0, 1 #> │ ├─ymod<dbl [2]>: 0, 1 #> │ ├─angle<dbl [2]>: 0, 360 #> │ └─num<dbl [2]>: 0, 1 #> ├─values.range: <list> #> │ ├─fill: NA #> │ ├─col: NA #> │ ├─size<dbl [2]>: 0, 1 #> │ ├─lwd<dbl [2]>: 0, 1 #> │ ├─lty: NA #> │ ├─text: NA #> │ ├─fontface: NA #> │ ├─fill_alpha: NA #> │ ├─col_alpha: NA #> │ ├─shape: NA #> │ ├─angle: NA #> │ └─num<dbl [2]>: 0, 1 #> ├─value.neutral: <list> #> │ ├─size: 0.75 #> │ ├─lwd: 2 #> │ ├─lty: \"solid\" #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─text: \"Abc\" #> │ ├─fontface: \"plain\" #> │ ├─angle: 0 #> │ └─num: 1 #> ├─values.scale: <list> #> │ ├─1 #> │ ├─lwd.lines: 1 #> │ ├─size.symbols: 1 #> │ ├─size.bubbles: 1.3333 #> │ └─size.squares: 1.3333 #> ├─scales.var: <list> #> │ ├─fill: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─col: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─bgcol: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─lwd: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"continuous\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─lty: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─shape: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─size: <list> #> │ │ ├─fact: \"continuous\" #> │ │ ├─num: \"continuous\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─fill_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─col_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─bgcol_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─area: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"continuous\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─xmod: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─ymod: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─angle: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─text: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ └─fontface: <list> #> │   ├─fact: \"categorical\" #> │   ├─num: \"categorical\" #> │   ├─datetime: \"categorical\" #> │   └─date: \"categorical\" #> ├─scale.misc.args: <list> #> │ ├─continuous: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ ├─trans: \"identity\" #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─0 #> │ ├─continuous_log: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log2: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log10: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log1p: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_sqrt: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─0 #> │ ├─continuous_pseudo_log: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ └─rank: <list> #> │   ├─n: 5 #> │   └─unit: \"rank\" #> ├─continuous.nclass_per_legend_break: 50 #> ├─continuous.nclasses: 101 #> ├─label.format: <list> #> │ ├─fun: <NULL> #> │ ├─scientific: FALSE #> │ ├─digits: NA #> │ ├─big.num.abbr<dbl [2]>: 6, 9 #> │ ├─prefix: \"\" #> │ ├─suffix: \"\" #> │ ├─text.separator: \"to\" #> │ ├─text.less.than<chr [2]>: \"Less\", \"than\" #> │ ├─text.or.more<chr [2]>: \"or\", \"more\" #> │ ├─text.align: NA #> │ ├─text.to.columns: FALSE #> │ └─html.escape: TRUE #> ├─label.na: \"Missing\" #> ├─scale: 0.75 #> ├─asp: NA #> ├─bg: TRUE #> ├─bg.color: \"white\" #> ├─outer.bg: FALSE #> ├─outer.bg.color: \"white\" #> ├─frame: TRUE #> ├─frame.color: NA #> ├─frame.alpha: 1 #> ├─frame.lwd: 1 #> ├─frame.r: 2 #> ├─frame.double_line: FALSE #> ├─outer.margins<dbl [4]>: 0.02, 0.02, 0.02, 0.02 #> ├─inner.margins: <list> #> │ ├─stars<dbl [4]>: 0, 0, 0, 0 #> │ ├─SpatRaster<dbl [4]>: 0, 0, 0, 0 #> │ └─<dbl [4]>0.02, 0.02, 0.02, 0.02 #> ├─inner.margins.extra<dbl [4]>: 0, 0, 0, 0 #> ├─meta.margins: NA #> ├─meta.auto_margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> ├─between_margin: 0.5 #> ├─panel.margin<dbl [2]>: 0.4, 0 #> ├─grid.mark.height: 2 #> ├─xylab.height: 1.25 #> ├─coords.height: 1.25 #> ├─xlab.show: FALSE #> ├─xlab.text: \"\" #> ├─xlab.size: 1 #> ├─xlab.color: \"black\" #> ├─xlab.rotation: 0 #> ├─xlab.space: 0 #> ├─xlab.fontface: <NULL> #> ├─xlab.fontfamily: <NULL> #> ├─xlab.alpha: 1 #> ├─xlab.side: \"bottom\" #> ├─ylab.show: FALSE #> ├─ylab.text: \"\" #> ├─ylab.size: 1 #> ├─ylab.color: \"black\" #> ├─ylab.rotation: 0 #> ├─ylab.space: 0 #> ├─ylab.fontface: <NULL> #> ├─ylab.fontfamily: <NULL> #> ├─ylab.alpha: 1 #> ├─ylab.side: \"left\" #> ├─panel.type: NA #> ├─panel.wrap.pos: \"top\" #> ├─panel.xtab.pos<chr [2]>: \"left\", \"top\" #> ├─unit: \"metric\" #> ├─color.sepia_intensity: 0 #> ├─color.saturation: 1 #> ├─color_vision_deficiency_sim: \"none\" #> ├─text.fontface: \"plain\" #> ├─text.fontfamily: \"\" #> ├─text.alpha: 1 #> ├─component.position: <list> #> │ ├─in: S3<tm_pos> #> │ │ ├─pos.h: \"left\" #> │ │ ├─pos.v: \"top\" #> │ │ ├─align.h: \"left\" #> │ │ ├─align.v: \"top\" #> │ │ ├─just.h: \"left\" #> │ │ ├─just.v: \"top\" #> │ │ └─type: \"in\" #> │ └─out: S3<tm_pos> #> │   ├─cell.h: \"right\" #> │   ├─cell.v: \"center\" #> │   ├─pos.h: \"left\" #> │   ├─pos.v: \"top\" #> │   ├─align.h: \"left\" #> │   ├─align.v: \"top\" #> │   ├─just.h: \"left\" #> │   ├─just.v: \"top\" #> │   └─type: \"out\" #> ├─component.offset<dbl [4]>: 0.75, 0, 0, 0 #> ├─component.stack_margin<dbl [2]>: 0, 0.5 #> ├─component.autoscale: TRUE #> ├─component.resize_as_group: FALSE #> ├─component.frame_combine: TRUE #> ├─component.stack: \"vertical\" #> ├─legend.stack<chr [6]>: \"vertical\", \"horizontal\", \"horizontal\", \"vertical\", \"horizontal\", \"vertical\" #> ├─chart.stack<chr [6]>: \"vertical\", \"horizontal\", \"horizontal\", \"vertical\", \"horizontal\", \"vertical\" #> ├─component.equalize: TRUE #> ├─component.frame: FALSE #> ├─component.frame.color: NA #> ├─component.frame.alpha: 1 #> ├─component.frame.lwd: 1 #> ├─component.frame.r: 2 #> ├─component.bg: TRUE #> ├─component.bg.color: \"white\" #> ├─component.bg.alpha: 1 #> ├─legend.show: TRUE #> ├─legend.design: \"standard\" #> ├─legend.orientation: \"portrait\" #> ├─legend.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─legend.width: NA #> ├─legend.height: NA #> ├─legend.reverse: FALSE #> ├─legend.na.show: NA #> ├─legend.title.color: NA #> ├─legend.title.size: 0.9 #> ├─legend.title.fontface: <NULL> #> ├─legend.title.fontfamily: <NULL> #> ├─legend.title.alpha: 1 #> ├─legend.xlab.color: NA #> ├─legend.xlab.size: 0.9 #> ├─legend.xlab.fontface: <NULL> #> ├─legend.xlab.fontfamily: <NULL> #> ├─legend.xlab.alpha: 1 #> ├─legend.ylab.color: NA #> ├─legend.ylab.size: 0.9 #> ├─legend.ylab.fontface: <NULL> #> ├─legend.ylab.fontfamily: <NULL> #> ├─legend.ylab.alpha: 1 #> ├─legend.text.color: NA #> ├─legend.text.size: 0.7 #> ├─legend.text.fontface: <NULL> #> ├─legend.text.fontfamily: <NULL> #> ├─legend.text.alpha: 1 #> ├─legend.frame: TRUE #> ├─legend.frame.color: NA #> ├─legend.frame.alpha: 1 #> ├─legend.frame.lwd: 1 #> ├─legend.frame.r: 2 #> ├─legend.bg: TRUE #> ├─legend.bg.color: \"white\" #> ├─legend.bg.alpha: 1 #> ├─legend.only: FALSE #> ├─legend.absolute_fontsize: 14 #> ├─legend.settings.standard.portrait: <list> #> │ ├─item.height<dbl [6]>: 1.2, 1, 3, 1.2, 1.2, 1.2 #> │ ├─item.width<dbl [6]>: 1.2, 1, 1.2, 1.2, 3, 1.2 #> │ ├─item.r: 2 #> │ ├─item.space<dbl [6]>: 0.2, 0.2, 0, 0.2, 0.2, 0 #> │ ├─item.na.height<dbl [6]>: NA, NA, 1.2, NA, NA, NA #> │ ├─item.na.width<dbl [6]>: NA, NA, 1.2, NA, NA, NA #> │ ├─item.na.space<dbl [6]>: 0.2, 0.3, 1, 0.2, 0.2, 0.2 #> │ ├─item.shape: 107 #> │ ├─title.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─xlab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─ylab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─title.align<chr [2]>: \"right\", \"left\" #> │ ├─xlab.align: \"left\" #> │ ├─ylab.align: \"center\" #> │ ├─ticks: <list> #> │ │ ├─rect: <list> #> │ │ ├─symbols: <list> #> │ │ ├─gradient: <list> #> │ │ │ └─<dbl [2]>1, 1.5 #> │ │ ├─lines: <list> #> │ │ ├─text: <list> #> │ │ └─bivariate: <list> #> │ ├─ticks.disable.na<lgl [6]>: FALSE, FALSE, TRUE, FALSE, FALSE, TRUE #> │ ├─ticks.col: NA #> │ ├─ticks.lwd: 1.5 #> │ ├─margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> │ └─item_text.margin: 0.25 #> ├─legend.settings.standard.landscape: <list> #> │ ├─item.height<dbl [5]>: 1, 1, 1.2, 1, 1 #> │ ├─item.width<dbl [5]>: 6, 3, 6, 6, 6 #> │ ├─item.r: 2 #> │ ├─item.space<dbl [5]>: 0.2, 0.3, 0, 0.2, 0.2 #> │ ├─item.na.height<dbl [5]>: NA, NA, 2, NA, NA #> │ ├─item.na.width<dbl [5]>: NA, NA, 4, NA, NA #> │ ├─item.na.space<dbl [5]>: 0.2, 0.3, 0.3, 0.2, 0.2 #> │ ├─item.shape: 107 #> │ ├─title.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─xlab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─ylab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─title.align<chr [2]>: \"right\", \"left\" #> │ ├─xlab.align: \"left\" #> │ ├─ylab.align: \"center\" #> │ ├─ticks: <list> #> │ │ ├─rect: <list> #> │ │ ├─symbols: <list> #> │ │ ├─gradient: <list> #> │ │ │ └─<dbl [2]>1, 1.2 #> │ │ ├─lines: <list> #> │ │ └─text: <list> #> │ ├─ticks.disable.na<lgl [5]>: FALSE, FALSE, TRUE, FALSE, FALSE #> │ ├─ticks.col: NA #> │ ├─ticks.lwd: 1.5 #> │ ├─margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> │ └─item_text.margin: 0.25 #> ├─add_legend.position: <NULL> #> ├─chart.show: TRUE #> ├─chart.plot.axis.x: FALSE #> ├─chart.plot.axis.y: TRUE #> ├─chart.position: S3<tm_pos> #> │ ├─cell.h: \"right\" #> │ ├─cell.v: \"bottom\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"bottom\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"autoout\" #> ├─chart.width<dbl [8]>: 10, 20, 10, 20, 10, 10, 10, 15 #> ├─chart.height<dbl [8]>: 10, 10, 10, 10, 10, 10, 10, 10 #> ├─chart.reverse: FALSE #> ├─chart.na.show: NA #> ├─chart.title.color: NA #> ├─chart.title.size: 0.9 #> ├─chart.title.fontface: <NULL> #> ├─chart.title.fontfamily: <NULL> #> ├─chart.title.alpha: <NULL> #> ├─chart.xlab.color: NA #> ├─chart.xlab.size: 0.9 #> ├─chart.xlab.fontface: <NULL> #> ├─chart.xlab.fontfamily: <NULL> #> ├─chart.xlab.alpha: <NULL> #> ├─chart.ylab.color: NA #> ├─chart.ylab.size: 0.9 #> ├─chart.ylab.fontface: <NULL> #> ├─chart.ylab.fontfamily: <NULL> #> ├─chart.ylab.alpha: 1 #> ├─chart.text.color: NA #> ├─chart.text.size: 0.7 #> ├─chart.text.fontface: <NULL> #> ├─chart.text.fontfamily: <NULL> #> ├─chart.text.alpha: 1 #> ├─chart.frame: TRUE #> ├─chart.frame.color: NA #> ├─chart.frame.alpha: 1 #> ├─chart.frame.lwd: 1 #> ├─chart.frame.r: 2 #> ├─chart.bg: TRUE #> ├─chart.bg.color: \"white\" #> ├─chart.bg.alpha: 1 #> ├─chart.object.color: \"#DDDDDD\" #> ├─title.size: 1.3 #> ├─title.color: NA #> ├─title.fontface: <NULL> #> ├─title.fontfamily: <NULL> #> ├─title.alpha: 1 #> ├─title.padding<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─title.frame: FALSE #> ├─title.frame.color: NA #> ├─title.frame.alpha: 1 #> ├─title.frame.lwd: 1 #> ├─title.frame.r: 2 #> ├─title.position: S3<tm_pos> #> │ ├─cell.h: \"center\" #> │ ├─cell.v: \"top\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"out\" #> ├─title.width: NA #> ├─credits.size: 0.7 #> ├─credits.color: NA #> ├─credits.fontface: <NULL> #> ├─credits.fontfamily: <NULL> #> ├─credits.alpha: 1 #> ├─credits.padding<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─credits.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─credits.width: NA #> ├─credits.height: NA #> ├─compass.north: 0 #> ├─compass.type: \"arrow\" #> ├─compass.text.size: 0.8 #> ├─compass.size: NA #> ├─compass.show.labels: 1 #> ├─compass.cardinal.directions<chr [4]>: \"N\", \"E\", \"S\", \"W\" #> ├─compass.text.color: NA #> ├─compass.color.dark: NA #> ├─compass.color.light: NA #> ├─compass.lwd: 1 #> ├─compass.margins<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─compass.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"bottom\" #> │ └─type: \"in\" #> ├─inset.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─logo.height: 3 #> ├─logo.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─logo.between_margin: 0.2 #> ├─logo.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset_map.height: 7 #> ├─inset_map.width: 7 #> ├─inset_map.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─inset_map.between_margin: 0.2 #> ├─inset_map.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset_map.frame: TRUE #> ├─inset.height: 3 #> ├─inset.width: 3 #> ├─inset.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─inset.between_margin: 0.2 #> ├─inset.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset.frame: TRUE #> ├─inset.bg: TRUE #> ├─inset.bg.color: \"#ffffff\" #> ├─inset.bg.alpha: 1 #> ├─inset_grob.height: 7 #> ├─inset_grob.width: 7 #> ├─inset_gg.height: 7 #> ├─inset_gg.width: 7 #> ├─scalebar.breaks: <NULL> #> ├─scalebar.width: 12 #> ├─scalebar.text.size: 0.5 #> ├─scalebar.text.color: NA #> ├─scalebar.text.fontface: <NULL> #> ├─scalebar.text.fontfamily: <NULL> #> ├─scalebar.color.dark: \"black\" #> ├─scalebar.color.light: \"white\" #> ├─scalebar.lwd: 1 #> ├─scalebar.size: <NULL> #> ├─scalebar.margins<dbl [4]>: 0.01, 0.01, 0.01, 0.01 #> ├─scalebar.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─grid.show: FALSE #> ├─grid.labels.pos<chr [2]>: \"left\", \"bottom\" #> ├─grid.x: NA #> ├─grid.y: NA #> ├─grid.n.x: NA #> ├─grid.n.y: NA #> ├─grid.crs: NA #> ├─grid.col: NA #> ├─grid.lwd: 1 #> ├─grid.alpha: NA #> ├─grid.labels.show: TRUE #> ├─grid.labels.size: 0.6 #> ├─grid.labels.col: NA #> ├─grid.labels.fontface: <NULL> #> ├─grid.labels.fontfamily: <NULL> #> ├─grid.labels.rot<dbl [2]>: 0, 0 #> ├─grid.labels.format: <list> #> │ └─big.mark: \",\" #> ├─grid.labels.cardinal: FALSE #> ├─grid.labels.margin.x: 0 #> ├─grid.labels.margin.y: 0 #> ├─grid.labels.space.x: NA #> ├─grid.labels.space.y: NA #> ├─grid.labels.inside_frame: FALSE #> ├─grid.ticks: TRUE #> ├─grid.lines: TRUE #> ├─grid.ndiscr: 100 #> ├─mouse_coordinates.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─minimap.server: NA #> ├─minimap.toggle: TRUE #> ├─minimap.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─panel.show: NA #> ├─panel.labels: NA #> ├─panel.label.size: 1 #> ├─panel.label.color: \"black\" #> ├─panel.label.fontface: <NULL> #> ├─panel.label.fontfamily: <NULL> #> ├─panel.label.alpha: 1 #> ├─panel.label.bg: TRUE #> ├─panel.label.bg.color: \"grey80\" #> ├─panel.label.bg.alpha: 1 #> ├─panel.label.frame: TRUE #> ├─panel.label.frame.color: NA #> ├─panel.label.frame.alpha: 1 #> ├─panel.label.frame.lwd: 1 #> ├─panel.label.frame.r: 2 #> ├─panel.label.height: 1 #> ├─panel.label.rot<dbl [4]>: 90, 0, 270, 0 #> ├─qtm.scalebar: TRUE #> ├─qtm.minimap: FALSE #> ├─qtm.mouse_coordinates: TRUE #> ├─earth_boundary: FALSE #> ├─earth_boundary.color: NA #> ├─earth_boundary.lwd: 1 #> ├─earth_datum: \"OGC:CRS84\" #> ├─space.color: NA #> ├─check_and_fix: FALSE #> ├─basemap.show: TRUE #> ├─basemap.server<chr [3]>: \"Esri.WorldGr...\", \"OpenStreetMap\", \"Esri.WorldTo...\" #> ├─basemap.alpha: 1 #> ├─basemap.zoom: NA #> ├─tiles.show: FALSE #> ├─tiles.server: \"\" #> ├─tiles.alpha: 1 #> ├─tiles.zoom: NA #> ├─attr.color: \"black\" #> ├─crs_extra: \"\" #> ├─crs_global: \"+proj=eqearth\" #> ├─name: \"Leaflet\" #> ├─use_browser: FALSE #> ├─use_WebGL: NA #> ├─crs_basemap: <list> #> │ ├─dimensions: 3857 #> │ └─4326 #> ├─control.position<chr [2]>: \"left\", \"top\" #> ├─control.collapse: TRUE #> ├─set_bounds: FALSE #> ├─set_view: NA #> ├─set_zoom_limits: NA #> ├─use_circle_markers: TRUE #> └─leaflet.options: <list>"},{"path":"https://r-tmap.github.io/tmap/articles/adv_options.html","id":"style-specific-options","dir":"Articles","previous_headings":"","what":"Style specific options","title":"tmap advanced: options","text":"Let’s enable certain style, say \"cobalt\" total changed list options can retrieved via tmap_options(). also possible obtain changed options:","code":"tmap_style(\"cobalt\") #> style set to \"cobalt\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\" tree(tmap_options_diff()) #> current tmap options (style \"cobalt\") that are different from default tmap options (style \"white\"): #> <list> #> ├─value.const: <list> #> │ ├─fill.polygons: \"#0088FF\" #> │ ├─fill: \"#FF9D00\" #> │ ├─col.lines: \"#FFEE80\" #> │ ├─col.text: \"white\" #> │ ├─col: \"#002240\" #> │ ├─bgcol.labels_highlighted: \"#002240\" #> │ ├─bgcol: \"#00000000\" #> │ ├─lwd: 1 #> │ ├─lty: \"solid\" #> │ ├─text: \"Abc\" #> │ ├─text.labels: \"\" #> │ ├─fontface: <NULL> #> │ ├─shape.squares: 22 #> │ ├─shape.dots: 19 #> │ ├─shape.markers: S3<tmap_icons> #> │ │ ├─iconUrl: \"/home/runner/work/_temp/Library/...\" #> │ │ ├─iconWidth: 25 #> │ │ ├─iconHeight: 41 #> │ │ ├─iconAnchorX: 12 #> │ │ └─iconAnchorY: 41 #> │ ├─shape: 21 #> │ ├─size.bubbles: 1.3333 #> │ ├─size.squares: 1.3333 #> │ ├─size.dots: 0.3 #> │ ├─size: 1 #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─angle: 0 #> │ └─num: 1 #> ├─value.na: <list> #> │ ├─fill: \"grey60\" #> │ ├─col: \"grey60\" #> │ ├─col.raster: \"grey60\" #> │ ├─bgcol: \"grey75\" #> │ ├─lty: \"solid\" #> │ ├─text: \"Unknown\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─col_alpha.raster: 0 #> │ └─angle: 0 #> ├─value.null: <list> #> │ ├─fill: \"grey40\" #> │ ├─col: \"grey40\" #> │ ├─col.polygons: \"grey40\" #> │ ├─bgcol: \"grey95\" #> │ ├─lty: \"solid\" #> │ ├─lwd: 0.2 #> │ ├─shape: 20 #> │ ├─text: \"\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─size: 0.2 #> │ ├─angle: 0 #> │ └─num: 0 #> ├─values.var: <list> #> │ ├─fill: <list> #> │ │ ├─seq: \"brewer.yl_gn\" #> │ │ ├─div: \"brewer.rd_yl_gn\" #> │ │ ├─unord: \"brewer.set3\" #> │ │ └─ord: \"brewer.yl_gn\" #> │ ├─col: <list> #> │ │ ├─seq: \"brewer.yl_gn\" #> │ │ ├─div: \"brewer.rd_yl_gn\" #> │ │ ├─unord: \"brewer.set3\" #> │ │ └─ord: \"brewer.yl_gn\" #> │ ├─bgcol: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.area7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─size: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─size.bubbles: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─lwd<dbl [2]>: 0, 3 #> │ ├─lty<chr [5]>: \"dashed\", \"dotted\", \"dotdash\", \"longdash\", \"twodash\" #> │ ├─text<chr [26]>: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", ... #> │ ├─fontface<chr [3]>: \"plain\", \"italic\", \"bold\" #> │ ├─fill_alpha<dbl [2]>: 0.25, 1 #> │ ├─col_alpha<dbl [2]>: 0.25, 1 #> │ ├─bgcol_alpha<dbl [2]>: 0.25, 1 #> │ ├─shape<int [5]>: 21, 22, 23, 24, 25 #> │ ├─area<dbl [2]>: 0, 1 #> │ ├─xmod<dbl [2]>: 0, 1 #> │ ├─ymod<dbl [2]>: 0, 1 #> │ ├─angle<dbl [2]>: 0, 360 #> │ └─num<dbl [2]>: 0, 1 #> ├─bg.color: \"#002240\" #> ├─outer.bg: TRUE #> ├─outer.bg.color: \"#002240\" #> ├─chart.title.color: \"white\" #> ├─chart.text.color: \"white\" #> ├─basemap.server: \"CartoDB.DarkMatter\" #> ├─basemap.alpha: 0.5 #> └─attr.color: \"white\""},{"path":"https://r-tmap.github.io/tmap/articles/adv_options.html","id":"what-are-the-options-for","dir":"Articles","previous_headings":"","what":"What are the options for?","title":"tmap advanced: options","text":"options name prefix value(s) refer default values visual variables/values. E.g. value.const subitem fill.polygons default polygon fill color. options scales.var specifies scale used default map data variables visual variables. depends visual variable data type. E.g. numeric data (“num”) visual variable size, continuous scale used, tm_scale_continuous(). visual variable text (tm_text()) scale asis used, tm_scale_asis(). several options deal margins aspect ratio. explained another vigette. options default values arguments component functions. E.g., compass.type specifies default compass type. options prefix qtm specify components shown default (view mode).","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_options.html","id":"setting-options-and-styles","dir":"Articles","previous_headings":"","what":"Setting options and styles","title":"tmap advanced: options","text":"Let’s reset options, set couple options: check differences: Note position argument completed default settings (found option component.position). illustrate effect:  Let’s save mode \"fancy\".: default style can obtained via tmap_style(\"white\") (name default style):","code":"tmap_options_reset() #> tmap options successfully reset  tmap_options(   bg.color = \"steelblue\",   outer.bg.color = \"salmon\",   frame.color = \"purple3\",   frame.lwd = 5,   compass.type = \"8star\",   legend.bg.color = \"gold\",   legend.position = tm_pos_in(pos.h = \"left\", pos.v = \"top\")  ) tree(tmap_options_diff()) #> current tmap options (style \"white (modified)\") that are different from default tmap options (style \"white\"): #> <list> #> ├─bg.color: \"steelblue\" #> ├─outer.bg.color: \"salmon\" #> ├─frame.color: \"purple3\" #> ├─frame.lwd: 5 #> ├─legend.position: S3<tm_pos> #> │ ├─cell.h: \"right\" #> │ ├─cell.v: \"bottom\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─legend.bg.color: \"gold\" #> └─compass.type: \"8star\" tm_shape(World) +     tm_polygons(\"footprint\") #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> This message is displayed once per session. tmap_options_save(\"fancy\") #> current tmap options saved as style \"fancy\" tmap_style(\"white\") #> style set to \"white\" (tmap default) #> other available styles are: \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\", \"fancy\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) +     tm_polygons(\"footprint\")"},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"note-this-is-written-for-the-upcoming-version-4-1","dir":"Articles","previous_headings":"","what":"Note: this is written for the upcoming version 4.1","title":"tmap advanced: positioning of components","text":"Recall vignette components position argument map components specifies position. can specified two ways: object tm_pos(), one wrappers, tm_pos_in() tm_pos_out(). vector length two, shortcut placement inside map frame, shortcut tm_pos_in() use self-made map component, made grid package show via tm_inset().","code":"g = function(text) grid::gList(   grid::rectGrob(gp=grid::gpar(fill = \"gold\")),    grid::circleGrob(r = .45),    grid::textGrob(text)) b = function(text) grid::gList(   grid::rectGrob(gp=grid::gpar(fill = \"steelblue\")),    grid::circleGrob(r = .45),    grid::textGrob(text))"},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"shortcut-method-inside-the-map-frame","dir":"Articles","previous_headings":"","what":"Shortcut method (inside the map frame)","title":"tmap advanced: positioning of components","text":"position can vector two values, first horizontal position second vertical position. shortcut tm_pos_in(), explained next sections. two options:","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"character-vector-of-two","dir":"Articles","previous_headings":"Shortcut method (inside the map frame)","what":"Character vector of two","title":"tmap advanced: positioning of components","text":"first value specifies horizontal position (\"left\", \"center\", \"right\"), second one vertical position (\"top\", \"center\", \"bottom\"). Upper case means tight frame. Otherwise offset margin applied (can specified offset, see ).","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"numeric-vector-of-two","dir":"Articles","previous_headings":"Shortcut method (inside the map frame)","what":"Numeric vector of two","title":"tmap advanced: positioning of components","text":"can seen ‘manual’ mode, provides freedom. first value specifies horizontal position, 0 corresponds left 1 right. second value specifies vertical position 0 bottom 1 top. default, values specify position left top corner component. justification point can changed using just.h just.v arguments [tm_pos()], see .","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"example","dir":"Articles","previous_headings":"Shortcut method (inside the map frame)","what":"Example","title":"tmap advanced: positioning of components","text":"character positioned components gold numeric positioned components blue.","code":"tm_shape(NLD_muni) +     tm_polygons(\"grey85\", col = \"grey60\") +     tm_inset(g(\"left, top\"), position = c(\"left\", \"top\")) +     tm_inset(g(\"right, bottom\"), position = c(\"right\", \"bottom\")) +     tm_inset(g(\"LEFT, BOTTOM\"), position = c(\"LEFT\", \"BOTTOM\")) +     tm_inset(b(\"0.3, 0.3\"), position = c(0.2, 0.2)) +     tm_inset(b(\"0.5, 0.5\"), position = c(0.5, 0.5)) +            tm_inset(b(\"0.9, 1\"), position = c(0.9, 1))"},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"the-3-x-3-grid","dir":"Articles","previous_headings":"Advanced method with tm_pos()","what":"The 3 x 3 grid","title":"tmap advanced: positioning of components","text":"whole plot area 3 x 3 grid, map (facets) drawn center grid cell. three variants (wrappers) main function tm_pos(): tm_pos_out() draws component outside map frame (one 3 x 3 grid cells) tm_pos_in() tm_pos_on_top() draw component middle grid cell. difference former takes frame (offset ) account latter doesn’t.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"cell-h-and-cell-v","dir":"Articles","previous_headings":"Advanced method with tm_pos()","what":"cell.h and cell.v","title":"tmap advanced: positioning of components","text":"arguments cell.h cell.v determine grid cell. used tm_pos_out(). position function, already set \"center\" (center grid cell map drawn).  Note used pos.h pos.v. explained next section.","code":"tm_shape(NLD_muni) +     tm_polygons(\"grey85\", col = \"grey60\") + tm_inset(g(\"center, center\"), position = tm_pos_on_top(pos.h = \"center\", pos.v = \"center\")) + tm_inset(g(\"left, center\"), position = tm_pos_out(\"left\", \"center\", pos.v = \"center\")) + tm_inset(g(\"right, center\"), position = tm_pos_out(\"right\", \"center\", pos.v = \"center\")) + tm_inset(g(\"left, top\"), position = tm_pos_out(\"left\", \"top\")) + tm_inset(g(\"center, top\"), position = tm_pos_out(\"center\", \"top\", pos.h = \"center\")) + tm_inset(g(\"right, top\"), position = tm_pos_out(\"right\", \"top\")) + tm_inset(g(\"left, bottom\"), position = tm_pos_out(\"left\", \"bottom\")) + tm_inset(g(\"center, bottom\"), position = tm_pos_out(\"center\", \"bottom\", pos.h = \"center\")) + tm_inset(g(\"right, bottom\"), position = tm_pos_out(\"right\", \"bottom\")) + tm_layout(asp = 1, frame.color = \"blue\", frame.lwd = 2)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"pos-h-and-pos-v","dir":"Articles","previous_headings":"Advanced method with tm_pos()","what":"pos.h and pos.v","title":"tmap advanced: positioning of components","text":"position component within cell. values similar shortcut values described : Character values: \"left\", \"center\", \"right\" (upper case) pos.h \"top\", \"center\", \"bottom\" pos.v. Numeric values: 0 (left) 1 (right) pos.h, 0 (bottom) 1 (top) pos.v  Recall justification point numeric specifications top left corner component. can adjusted via just.h just.v explained next.","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey85\", col = \"grey60\") + tm_inset(g(\"pos.v = \\\"top\\\" in\\ncell (left, center)\"),    position = tm_pos_out(\"left\", \"center\", pos.v = \"top\")) + tm_inset(g(\"pos.v = \\\"bottom\\\" in\\ncell (right, center)\"),    position = tm_pos_out(\"right\", \"center\", pos.v = \"bottom\")) + tm_inset(b(\"pos.h = 0.0\\npos.v = 0.0\\nin center cell\"),   position = tm_pos_in(pos.h = 0.0, pos.v = 0.0)) + tm_inset(b(\"pos.h = 0.5\\npos.v = 0.5\\nin center cell\"),   position = tm_pos_in(pos.h = 0.5, pos.v = 0.5)) + tm_inset(b(\"pos.h = 1\\npos.v = 1\\nin center cell\"),   position = tm_pos_in(pos.h = 1, pos.v = 1)) + tm_layout(asp = 1, frame.color = \"blue\", frame.lwd = 2)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"just-h-and-just-v","dir":"Articles","previous_headings":"Advanced method with tm_pos()","what":"just.h and just.v","title":"tmap advanced: positioning of components","text":"case pos.h pos.v numbers, justification can set just.h: \"left\", \"center\", \"right\" just.v: \"top\", \"center\", \"bottom\"","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey85\", col = \"grey60\") + tm_inset(b(\"center, center\"),    position = tm_pos_in(0.5, 0.5, just.h = \"center\", just.v = \"center\")) + tm_inset(b(\"left, top\"),    position = tm_pos_in(0.5, 0.5, just.h = \"left\", just.v = \"top\")) + tm_inset(b(\"right, bottom\"),    position = tm_pos_in(0.5, 0.5, just.h = \"right\", just.v = \"bottom\")) + tm_layout(asp = 1, frame.color = \"blue\", frame.lwd = 2)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"align-h-and-align-v","dir":"Articles","previous_headings":"Advanced method with tm_pos()","what":"align.h and align.v","title":"tmap advanced: positioning of components","text":"case multiple components position (see next section), alignment determines component aligned. alignment components within cell:","code":"tm_shape(NLD_muni) +   tm_polygons(\"grey85\", col = \"grey60\") + tm_inset(g(\"\"),    width = 4, height = 4,   position = tm_pos_in(\"left\", \"top\")) + tm_inset(b(\"left\"),   width = 3, height = 3,   position = tm_pos_in(\"left\", \"top\", align.h = \"left\")) + tm_inset(b(\"right\"),   width = 3, height = 3,   position = tm_pos_in(\"left\", \"top\", align.h = \"right\")) + tm_inset(g(\"\"),    width = 4, height = 4,   position = tm_pos_in(\"left\", \"top\")) + tm_layout(asp = 1, frame.color = \"blue\", frame.lwd = 2)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"automatic-positioning","dir":"Articles","previous_headings":"Advanced method with tm_pos()","what":"Automatic positioning","title":"tmap advanced: positioning of components","text":"default position legends map components cases done automatically. Automatic positioning can achieved setting position argument tm_pos_auto_in() tm_pos_auto_out(). former checks map corner space available (bases pos.h pos.v ). latter calculates grid cell (cell.h cell.v) map components can positioned, based aspect ratio margins.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_positions.html","id":"grouping-components","dir":"Articles","previous_headings":"","what":"Grouping components","title":"tmap advanced: positioning of components","text":"happens components share position? See next vignette","code":""},{"path":"https://r-tmap.github.io/tmap/articles/adv_shiny.html","id":"shiny-integration","dir":"Articles","previous_headings":"","what":"Shiny integration","title":"tmap advanced: options","text":"Three functions take care integrating tmap maps shiny: tmapOutput(), renderTmap(), tmapProxy()","code":"library(shiny)"},{"path":"https://r-tmap.github.io/tmap/articles/adv_shiny.html","id":"plot-mode","dir":"Articles","previous_headings":"","what":"Plot mode","title":"tmap advanced: options","text":"(almost) minimal example choropleth data variable selected via select input widget: Note setting meta.margins last tmap line needed make sure map stays position rendering. Without line (default) horizontal position map depends legend width, turn depends legend title /item labels. Also note map redrawn every time inputs change, proxy objects via tmapProxy() used. used \"view\" mode well see next.","code":"NLD_vars <- setdiff(names(NLD_dist), c(\"code\", \"name\")) tmap_mode(\"plot\") shinyApp(   ui = fluidPage(     tmapOutput(\"map\", height = \"1000px\"),     selectInput(\"var\", \"Variable\", NLD_vars)   ),   server <- function(input, output, session) {     output$map <- renderTmap({       tm_shape(NLD_dist) +         tm_polygons(input$var, zindex = 401, lwd = 0.5) +       tm_shape(NLD_muni) +         tm_borders(lwd = 1, col = \"black\") +       tm_shape(NLD_prov) +         tm_borders(lwd = 2, col = \"black\") +       tm_layout(meta.margins = c(0, 0, 0, 0.15)) # fixed margin for the legend     })   },    options = list(launch.browser = TRUE) )"},{"path":"https://r-tmap.github.io/tmap/articles/adv_shiny.html","id":"view-mode","dir":"Articles","previous_headings":"","what":"View mode","title":"tmap advanced: options","text":"inputs changed \"view\" mode, preferable focus (zoom panning location) change. tmapProxy() comes play. updates mape. Old layer removed via tm_remove_layer() new layer can added. recommended : Set zindex map layer, determines plotting order (necessarily order call anymore, removals additions). use basemaps, transform spatial vector data sf objects crs (EPSG) 4326 spatial raster data stars objects crs (EPSG) 3857. ? operations take time, albeit less second. let tmap job, happens every time map updated. interactive session, every millisecond counts. Therefore advisable one-time operation using tmap. Note improved scale applied variable. data variables numeric, skewed (e.g. dwelling value), ’ve used general purpose function tm_scale() set class interval kmeans color palette \"matplotlib.plasma\". Run cols4all::c4a_gui() explore color palettes.","code":"tmap_mode(\"view\") #> ℹ tmap mode set to \"view\". library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE NLD_dist_4326 = st_transform(NLD_dist, 4326) NLD_muni_4326 = st_transform(NLD_muni, 4326) NLD_prov_4326 = st_transform(NLD_prov, 4326) shinyApp(   ui = fluidPage(     tmapOutput(\"map\", height = \"1000px\"),     selectInput(\"var\", \"Variable\", NLD_vars) ), server <- function(input, output, session) {   output$map <- renderTmap({     tm = tm_shape(NLD_dist_4326) +       tm_polygons(         fill = NLD_vars[1],          fill.scale = tm_scale(style = \"kmeans\", values = \"matplotlib.plasma\"),         id = \"code\", zindex = 401, lwd = 0.5) +       tm_shape(NLD_muni_4326) +         tm_borders(lwd = 1, col = \"black\", zindex = 402) +       tm_shape(NLD_prov_4326) +         tm_borders(lwd = 2.5, col = \"black\", zindex = 403) +       tm_layout(meta.margins = c(0, 0, 0, 0.3))  # fixed margin for the legend   })   observe({     var <- input$var     tmapProxy(\"map\", session, {       tm_remove_layer(401) +        tm_shape(NLD_dist_4326) +         tm_polygons(input$var,            fill.scale = tm_scale(style = \"kmeans\", values = \"matplotlib.plasma\"),           id = \"code\", zindex = 401, lwd = 1)     })   }) },  options = list(launch.browser = TRUE) )"},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/basics_basemaps.html","id":"basemaps","dir":"Articles","previous_headings":"","what":"Basemaps","title":"tmap basics: basemaps","text":"default, basemaps shown \"view\" mode, \"plot\" mode. Basemaps can enabled disabled via tm_basemap().","code":""},{"path":"https://r-tmap.github.io/tmap/articles/basics_basemaps.html","id":"plot-mode","dir":"Articles","previous_headings":"","what":"Plot mode","title":"tmap basics: basemaps","text":"enable basemap plot mode, package maptiles required. specified without arguments, default basemap server “Esri.WorldGrayCanvas”. can changed, e.g. \"OpenTopoMap\".  options : Tip: .tmap_providers contains information, stored environment, convenient auto-completion (e.g. RStudio); type .tmap_providers$ list options appear. Note: Thunderforest Stadia, (free personal use) API key required. See previews","code":"tm_shape(metro) +     tm_bubbles(size = \"pop2020\") +     tm_basemap(\"OpenTopoMap\") tmap_providers() #>  [1] \"OpenStreetMap\"                  \"OpenStreetMap.DE\"               #>  [3] \"OpenStreetMap.France\"           \"OpenStreetMap.HOT\"              #>  [5] \"OpenTopoMap\"                    \"Stadia.AlidadeSmooth\"           #>  [7] \"Stadia.AlidadeSmoothDark\"       \"Stadia.OSMBright\"               #>  [9] \"Stadia.Outdoors\"                \"Stadia.StamenToner\"             #> [11] \"Stadia.StamenTonerBackground\"   \"Stadia.StamenTonerLines\"        #> [13] \"Stadia.StamenTonerLabels\"       \"Stadia.StamenTonerLite\"         #> [15] \"Stadia.StamenWatercolor\"        \"Stadia.StamenTerrain\"           #> [17] \"Stadia.StamenTerrainBackground\" \"Stadia.StamenTerrainLabels\"     #> [19] \"Esri.WorldStreetMap\"            \"Esri.WorldTopoMap\"              #> [21] \"Esri.WorldImagery\"              \"Esri.WorldTerrain\"              #> [23] \"Esri.WorldShadedRelief\"         \"Esri.OceanBasemap\"              #> [25] \"Esri.NatGeoWorldMap\"            \"Esri.WorldGrayCanvas\"           #> [27] \"CartoDB.Positron\"               \"CartoDB.PositronNoLabels\"       #> [29] \"CartoDB.PositronOnlyLabels\"     \"CartoDB.DarkMatter\"             #> [31] \"CartoDB.DarkMatterNoLabels\"     \"CartoDB.DarkMatterOnlyLabels\"   #> [33] \"CartoDB.Voyager\"                \"CartoDB.VoyagerNoLabels\"        #> [35] \"CartoDB.VoyagerOnlyLabels\"      \"Thunderforest.OpenCycleMap\"     #> [37] \"Thunderforest.Transport\"        \"Thunderforest.TransportDark\"    #> [39] \"Thunderforest.SpinalMap\"        \"Thunderforest.Landscape\"        #> [41] \"Thunderforest.Outdoors\"         \"Thunderforest.Pioneer\"          #> [43] \"Thunderforest.MobileAtlas\"      \"Thunderforest.Neighbourhood\" tm_shape(metro) +     tm_bubbles(size = \"pop2020\") +     tm_basemap(\"CartoDB.PositronNoLabels\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_basemaps.html","id":"view-mode","dir":"Articles","previous_headings":"","what":"View mode","title":"tmap basics: basemaps","text":"view mode, even options. can obtained via names(leaflet::providers). Disabling basemaps: Now also possible use different map projections (see vignette):","code":"tmap_mode(\"view\") #> ℹ tmap mode set to \"view\". tm_shape(metro) +     tm_bubbles(size = \"pop2020\") +     tm_basemap(\"Esri.OceanBasemap\") tmap_mode(\"view\") #> ℹ tmap mode set to \"view\". tm_shape(World) +   tm_polygons(     fill = \"grey80\",      col = \"grey60\") + tm_shape(metro) +     tm_bubbles(size = \"pop2020\") +     tm_basemap(NULL) #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> [view mode] WebGL does not work (yet) with projected map projections, so it has #> been disabled. #> This message is displayed once per session. tmap_mode(\"view\") #> ℹ tmap mode set to \"view\". tm_shape(World, crs = \"+proj=robin\") +   tm_polygons(     fill = \"grey80\",      col = \"grey60\") + tm_shape(metro) +     tm_bubbles(size = \"pop2020\") +     tm_basemap(NULL)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_basemaps.html","id":"defaults","dir":"Articles","previous_headings":"","what":"Defaults","title":"tmap basics: basemaps","text":"(run tmap_options(\"basemap.server\") see option)","code":""},{"path":"https://r-tmap.github.io/tmap/articles/basics_charts.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"tmap basics: charts","text":"visual variable (e.g. fill tm_polygons()) additional .chart argument via charts can shown:","code":"tm_shape(World) +   tm_polygons(     fill = \"press\",     fill.scale = tm_scale_intervals(n=10, values = \"scico.hawaii\"),     fill.legend = tm_legend(\"World Press\\nFreedom Index\"),     fill.chart = tm_chart_bar()) + tm_crs(\"auto\")"},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/basics_charts.html","id":"numeric-variables","dir":"Articles","previous_headings":"Chart types","what":"Numeric variables","title":"tmap basics: charts","text":"","code":"tm_shape(World) +   tm_polygons(\"HPI\",     fill.scale = tm_scale_intervals(),     fill.chart = tm_chart_donut()) #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> This message is displayed once per session. tm_shape(World) +   tm_polygons(\"HPI\",     fill.scale = tm_scale_intervals(),     fill.chart = tm_chart_box()) tm_shape(World) +   tm_polygons(\"HPI\",     fill.scale = tm_scale_intervals(),     fill.chart = tm_chart_violin())"},{"path":"https://r-tmap.github.io/tmap/articles/basics_charts.html","id":"categorical-variable","dir":"Articles","previous_headings":"Chart types","what":"Categorical variable","title":"tmap basics: charts","text":"","code":"tm_shape(World) +   tm_polygons(\"economy\",     fill.scale = tm_scale_categorical(),     fill.chart = tm_chart_bar()) tm_shape(World) +   tm_polygons(\"economy\",     fill.scale = tm_scale_categorical(),     fill.chart = tm_chart_donut())"},{"path":"https://r-tmap.github.io/tmap/articles/basics_charts.html","id":"bivariate-charts","dir":"Articles","previous_headings":"Chart types","what":"Bivariate charts","title":"tmap basics: charts","text":"","code":"tm_shape(World) +   tm_polygons(tm_vars(c(\"HPI\", \"well_being\"), multivariate = TRUE),     fill.chart = tm_chart_heatmap()) #> Labels abbreviated by the first letters, e.g.: \"2 to 3\" => \"2\""},{"path":"https://r-tmap.github.io/tmap/articles/basics_charts.html","id":"position","dir":"Articles","previous_headings":"","what":"Position","title":"tmap basics: charts","text":"can update position chart bottom right (separate frame). See vignette positioning.  , case like chart next legend, different frame:","code":"tm_shape(World) +   tm_polygons(     fill = \"press\",     fill.scale = tm_scale_intervals(n=10, values = \"scico.hawaii\"),     fill.legend = tm_legend(\"World Press\\nFreedom Index\"),     fill.chart = tm_chart_bar(position = tm_pos_out(\"center\", \"bottom\", pos.h = \"right\"))) + tm_crs(\"auto\") tm_shape(World) +   tm_polygons(     fill = \"press\",     fill.scale = tm_scale_intervals(n=10, values = \"scico.hawaii\"),     fill.legend = tm_legend(\"World Press\\nFreedom Index\", group.frame = FALSE),     fill.chart = tm_chart_bar(position = tm_pos_out(\"center\", \"bottom\", align.v = \"top\"))) +     tm_layout(component.stack_margin = .5) + tm_crs(\"auto\") #> Warning: Component group arguments, such as `group.frame`, are deprecated as of 4.1. #> Please use `group_id = \"ID\"` in combination with `tm_comp_group(frame_combine = #> FALSE)` instead."},{"path":"https://r-tmap.github.io/tmap/articles/basics_charts.html","id":"additional-ggplot2-code","dir":"Articles","previous_headings":"","what":"Additional ggplot2 code","title":"tmap basics: charts","text":"","code":"require(ggplot2) #> Loading required package: ggplot2 tm_shape(World) +   tm_polygons(\"HPI\",     fill.scale = tm_scale_intervals(),     fill.chart = tm_chart_bar(       extra.ggplot2 = theme(         panel.grid.major.y = element_line(colour = \"red\")       ))     )"},{"path":"https://r-tmap.github.io/tmap/articles/basics_components.html","id":"what-are-components-in-tmap","dir":"Articles","previous_headings":"","what":"What are ‘components’ in tmap?","title":"tmap basics: components","text":"Components non-spatial parts plots: titles credits: [tm_title()] [tm_credits()] scale bars compasses: [tm_scalebar()] [tm_compass()] legends: specified .legend compoments data layer functions (e.g. [tm_polygons()]).","code":""},{"path":"https://r-tmap.github.io/tmap/articles/basics_components.html","id":"title-and-credits","dir":"Articles","previous_headings":"","what":"Title and credits","title":"tmap basics: components","text":"tm_title() tm_credits() add text map form title credits/attribution text respectively. underlying function options , default value differ: titles default larger placed map (outside frame), credits place inside frame bottom right.","code":"tm_shape(NLD_muni) +   tm_polygons(     fill = \"edu_appl_sci\") + tm_title(\"Population share with (applied) university degree in 2022\") + tm_credits(\"Statistics Netherlands (CBS)\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_components.html","id":"scale-bar-and-compass","dir":"Articles","previous_headings":"","what":"Scale bar and compass","title":"tmap basics: components","text":"","code":"tm_shape(NLD_muni) +   tm_polygons() +     tm_compass(type = \"8star\") +     tm_scalebar()"},{"path":"https://r-tmap.github.io/tmap/articles/basics_components.html","id":"positioning-of-components-basics","dir":"Articles","previous_headings":"","what":"Positioning of components (basics)","title":"tmap basics: components","text":"position map component can specified general argument position. takes vector two, first horizontal position (\"left\", \"center\", \"right\"), second one vertical position (\"top\", \"center\", \"bottom\")  components placed tighter frame, use capital case instead; e.g. c(\"LEFT\", \"BOTTOM\") stead ofc(“left”, “bottom”)`. much options position map componets via tm_pos(), see vignette positions","code":"tm_shape(NLD_muni) +   tm_polygons(     fill = \"edu_appl_sci\",     fill.legend = tm_legend(position = c(\"left\", \"top\"))) + tm_credits(\"Statistics Netherlands (CBS)\", position = c(\"left\", \"bottom\")) + tm_compass(type = \"8star\", position = c(\"right\", \"bottom\")) + tm_scalebar(position = c(\"right\", \"bottom\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_exporting.html","id":"static-maps-plot-mode","dir":"Articles","previous_headings":"","what":"Static maps (plot mode)","title":"tmap basics: exporting","text":"Maps plot mode van exported many formats including: pixel based png, jpg, bmp, tiff. vectorized pdf, eps, svg, width height specified either pixels inches (can don’t need specify units). pixel based formats, relation pixels inches specified via argument dpi (dots-per-inch). Let’s create standard country level choropleth:","code":"tm = tm_shape(World, crs = \"+proj=robin\") +    tm_polygons(     fill = \"gender\",      fill.scale = tm_scale_continuous(values = \"pu_gn\"),     fill.legend = tm_legend(\"Gender Inequality Index\", orientation = \"landscape\")) +     tm_credits(\"Human Development Report (2024)\", position = c(\"RIGHT\", \"BOTTOM\")) +  tm_layout(inner.margins = c(0, 0, 0.05, 0.05))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_exporting.html","id":"pixel-based-format","dir":"Articles","previous_headings":"Static maps (plot mode)","what":"Pixel based format","title":"tmap basics: exporting","text":"Exporting maps done via tmap_save(). Values width height less 50 considered inches, whereas greater 50 pixels considered pixels: Therefore, examples result exactly file:  Vector based formats preferred pixel based, scalability. case pixel formats used, please make use sufficient number pixels. web publications least 144 dpi required. may seem overkill, required retina (high point-per-inch) displaces. printing 300 even 600 dpi required.","code":"tmap_save(tm, filename = \"world.png\", width = 7, height = 4, dpi = 300) #> Map saved to world.png #> Resolution: 2100 by 1200 pixels #> Size: 7 by 4 inches (300 dpi) tmap_save(tm, filename = \"world.png\", width = 2100, height = 1200, dpi = 300) #> Map saved to /home/runner/work/tmap/tmap/vignettes/world.png #> Resolution: 2100 by 1200 pixels #> Size: 7 by 4 inches (300 dpi)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_exporting.html","id":"aspect-ratio","dir":"Articles","previous_headings":"Static maps (plot mode)","what":"Aspect ratio","title":"tmap basics: exporting","text":"case one dimension provided, dimension calculated using aspect ratio map.","code":"tmap_save(tm, filename = \"world.png\", width = 2100, dpi = 300) #> Map saved to /home/runner/work/tmap/tmap/vignettes/world.png #> Resolution: 2100 by 1059.87 pixels #> Size: 7 by 3.5329 inches (300 dpi)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_exporting.html","id":"vector-based-format","dir":"Articles","previous_headings":"Static maps (plot mode)","what":"Vector based format","title":"tmap basics: exporting","text":"Vector based formats look (almost) . Small differences font sizes, margins, symbol sizes formats may occur.","code":"tmap_save(tm, filename = \"world.pdf\", width = 7, height = 4, dpi = 300)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_exporting.html","id":"scaling","dir":"Articles","previous_headings":"Static maps (plot mode)","what":"Scaling","title":"tmap basics: exporting","text":"important argument tmap_save() scale. option overall scale map, normally set via tm_layout(). determines font sizes, line widths, symbol sizes. Much smaller (0.5):  bit smaller (0.8):  bit larger (1.2):  Much larger (1.5):","code":"tmap_save(tm, filename = \"world.png\", width = 7, height = 4, dpi = 300, scale = 0.5) tmap_save(tm, filename = \"world.png\", width = 7, height = 4, dpi = 300, scale = 0.8) tmap_save(tm, filename = \"world.png\", width = 7, height = 4, dpi = 300, scale = 1.2) tmap_save(tm, filename = \"world.png\", width = 7, height = 4, dpi = 300, scale = 1.5) #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."},{"path":"https://r-tmap.github.io/tmap/articles/basics_exporting.html","id":"view-mode","dir":"Articles","previous_headings":"","what":"View mode","title":"tmap basics: exporting","text":"Maps can also exported stand-alone HTML files. selfcontained = FALSE, required JavaScripts CSS files stored folder called index_files.","code":"tmap_save(tm, filename = \"index.html\", selfcontained = FALSE)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_facets.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap basics: facets","text":"Three spatial data objects Netherlands contained tmap: NLD_prov, NLD_muni, NLD_dist, respectively province, municipality district level. columns following data variables plus additional geometry column contains geometries (see sf package):","code":"names(NLD_muni) #>  [1] \"code\"               \"name\"               \"province\"           #>  [4] \"area\"               \"urbanity\"           \"population\"         #>  [7] \"pop_0_14\"           \"pop_15_24\"          \"pop_25_44\"          #> [10] \"pop_45_64\"          \"pop_65plus\"         \"dwelling_total\"     #> [13] \"dwelling_value\"     \"dwelling_ownership\" \"employment_rate\"    #> [16] \"income_low\"         \"income_high\"        \"edu_appl_sci\"       #> [19] \"geometry\""},{"path":"https://r-tmap.github.io/tmap/articles/basics_facets.html","id":"facets-one-dimensional","dir":"Articles","previous_headings":"","what":"Facets: one dimensional","title":"tmap basics: facets","text":"Facets small multiples small visualizations (maps), one group. groups can defined using categorical data variable. following plot, facet created province (data variable NLD_muni):  example, one facet variable. kind plots, facets either wrapped stacked, tm_facets_wrap() tm_facets_stack(). general purpose function tm_facets() determines faceting type, example wrap. Groups can also defined specifying multiple data variable names one visual variable:  different data variables used, tmap uses (default) multiple scales, one variable. can changed putting tm_scale() functions list, shown . case scale used, fill.free set FALSE:","code":"tm_shape(NLD_muni) +   tm_polygons(\"employment_rate\") + tm_facets(\"province\") tm_shape(NLD_muni) +   tm_polygons(     fill = c(\"employment_rate\", \"dwelling_value\", \"income_high\"),     fill.scale =        list(tm_scale_intervals(values = \"-brewer.reds\"),          tm_scale_intervals(values = \"brewer.purples\"),          tm_scale_intervals(values = \"brewer.blues\"))) tm_shape(NLD_muni) +   tm_polygons(     fill = c(\"pop_0_14\", \"pop_25_44\", \"pop_65plus\"),     fill.legend = tm_legend(\"Percentage\"),     fill.free = FALSE)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_facets.html","id":"facets-two-or-three-dimensions","dir":"Articles","previous_headings":"","what":"Facets: two or three dimensions","title":"tmap basics: facets","text":"Facets can also defined two three dimensions, obtained via tm_facets_grid() three dimensions correspond rows, columns, pages respectively. common use case two just dimensions, rows columns. case, tm_facets_grid() used.","code":"tm_shape(NLD_muni) +   tm_polygons(     fill = c(\"employment_rate\", \"dwelling_value\", \"income_high\"),     fill.scale =        list(tm_scale_intervals(values = \"-brewer.reds\"),          tm_scale_intervals(values = \"brewer.purples\"),          tm_scale_intervals(values = \"brewer.blues\"))) + tm_facets_grid(columns = \"province\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_facets.html","id":"facets-as-pages-use-case-animations","dir":"Articles","previous_headings":"","what":"Facets as ‘pages’ (use case: animations)","title":"tmap basics: facets","text":"produce 5 plots, one age class (defined using fill argument). plot can exported animation via tmap_animation.","code":"(tm = tm_shape(NLD_muni) +   tm_polygons(     fill = c(\"pop_0_14\", \"pop_15_24\", \"pop_25_44\", \"pop_45_64\", \"pop_65plus\"),     fill.legend = tm_legend(\"Percentage\"),     fill.free = FALSE) + tm_facets_pagewise()) tmap_animation(tm, filename = \"NLD_pop_age_class.gif\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_layout.html","id":"what-is-layout","dir":"Articles","previous_headings":"","what":"What is layout?","title":"tmap basics: layout","text":"layout mean aspects plot looks like, except specifications data-driven visual variables. layout legends layout ovf map components left? Background colors, frames, panels, fonts, margins, etc. layout options can changed via tm_layout(). large number arguments can overwhelming. also include default settings legends map components. See -depth vignette tmap options. vignette, ’ll cover important layout settings. First, let’s create map:","code":"tm = tm_shape(World, crs = \"+proj=eqearth\") + tm_polygons(\"HPI\", fill.scale = tm_scale_intervals(values = \"pu_gn\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_layout.html","id":"background-colors","dir":"Articles","previous_headings":"","what":"Background colors","title":"tmap basics: layout","text":"background colors inside outside map frame specified follows:","code":"tm + tm_layout(   bg.color = \"skyblue\",   outer.bg.color = \"gold\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_layout.html","id":"frame","dir":"Articles","previous_headings":"","what":"Frame","title":"tmap basics: layout","text":"map frame can disabled setting frame = FALSE:  case, background color whole area determined bg.color outer.bg.color anymore.","code":"tm + tm_layout(   bg.color = \"grey90\",   frame = FALSE) tm + tm_layout(   bg.color = \"skyblue\",   earth_boundary = TRUE,   outer.bg.color = \"gold\",   space.color = \"darkblue\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_layout.html","id":"earth-boundaries","dir":"Articles","previous_headings":"","what":"Earth boundaries","title":"tmap basics: layout","text":"certain map projections, including used one, can infer ‘earth boundaries’. can enable option earth_boundary. background color outside earth boundaries (inside map frame specified) determined space.color. type map, makes sense disable map frame, place legend corner map, perhaps even bit overlap.","code":"tm_shape(World, crs = \"+proj=eqearth\") +    tm_polygons(     fill = \"HPI\",      fill.scale = tm_scale_intervals(values = \"pu_gn\"),     fill.legend = tm_legend(position = c(\"left\", \"bottom\"))) + tm_layout(bg.color = \"skyblue\",   earth_boundary = TRUE,   frame = FALSE,   space.color = \"white\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_layout.html","id":"panels","dir":"Articles","previous_headings":"","what":"Panels","title":"tmap basics: layout","text":"change appearance panels options prefix panel. usd:  Panels can disabled using panel.show = FALSE:","code":"tm_shape(World, crs = \"+proj=eqearth\") +   tm_polygons(c(\"well_being\", \"footprint\")) + tm_layout(panel.label.bg.color = \"gold\",           panel.label.size = 2,           panel.label.height = 3) tm_shape(World, crs = \"+proj=eqearth\") +   tm_polygons(c(\"well_being\", \"footprint\")) + tm_layout(panel.show = FALSE)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_layout.html","id":"margins","dir":"Articles","previous_headings":"","what":"Margins","title":"tmap basics: layout","text":"Margins can set inner.margins, outer.margins, meta.margins.  four numbers margins bottom, left, top, right respectively. units relative map frame, 0.02 means () 2 percent frame height. Setting margins quite complex depends aspect ratios (width/height) spatial object graphics device. See -depth vignette.","code":"tm +   tm_layout(inner.margins = c(0, 0, 0.02, 0.02))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_legends.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap basics: legends","text":"spatial data object contained tmap called World. data frame row country. columns following data variables plus additional geometry column contains geometries (see sf package): specify object tm_shape (see vignette) convenience assign s:","code":"names(World) #>  [1] \"iso_a3\"       \"name\"         \"sovereignt\"   \"continent\"    \"area\"         #>  [6] \"pop_est\"      \"pop_est_dens\" \"economy\"      \"income_grp\"   \"gdp_cap_est\"  #> [11] \"life_exp\"     \"well_being\"   \"footprint\"    \"HPI\"          \"inequality\"   #> [16] \"gender\"       \"press\"        \"geometry\" s = tm_shape(World, crs = \"+proj=eqearth\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_legends.html","id":"legend","dir":"Articles","previous_headings":"","what":"Legend","title":"tmap basics: legends","text":"visual variable, e.g. fill tm_polygons, also .legend argument. popular properties illustrated next example:  legend width set number text line heights, corresponds number characters. words, resulting width depends fontsize, can set tm_legend, also via general scale option, determines overall ‘scale’ map (line widths, point sizes font sizes):","code":"s + tm_polygons(   fill = \"HPI\",   fill.scale = tm_scale_continuous(values = \"pu_gn\"),   fill.legend =      tm_legend(       title = \"Happy Planex Index\",        orientation = \"landscape\",        width = 60)) #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling. s + tm_polygons(   fill = \"HPI\",   fill.scale = tm_scale_continuous(values = \"pu_gn\"),   fill.legend =      tm_legend(       title = \"Happy Planex Index\",        orientation = \"landscape\",        width = 60)) + tm_layout(scale = 0.25)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_legends.html","id":"combine-legends","dir":"Articles","previous_headings":"","what":"Combine legends","title":"tmap basics: legends","text":"Suppose want use fill shape show \"economy\". can combine legends follows:","code":"s +    tm_polygons() +   tm_symbols(     fill = \"economy\",     shape = \"economy\",     shape.legend = tm_legend_combine(\"fill\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_legends.html","id":"custom-visual-values","dir":"Articles","previous_headings":"","what":"Custom visual values","title":"tmap basics: legends","text":"Suppose, whatever reason, like change visual values used legend symbols. instance, instead solid circle lines, thick dotted lines. case, can simply pass corresponding visual values lwd lty tm_legend():","code":"s +    tm_polygons() +   tm_symbols(     fill = \"economy\",     fill.legend = tm_legend(\"Economy\", lwd = 2, lty = \"dotted\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_legends.html","id":"manual-legends","dir":"Articles","previous_headings":"","what":"Manual legends","title":"tmap basics: legends","text":"","code":"s +    tm_polygons() +   tm_add_legend(     title = \"Countries\",      fill = \"grey80\",      shape = 22,      size = c(1, 2, 4),      labels = c(\"Small\", \"Medium\", \"Large\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_legends.html","id":"layout","dir":"Articles","previous_headings":"","what":"Layout","title":"tmap basics: legends","text":"layout (standard) legends can changed via arguments tm_legend().","code":"s +   tm_polygons(     fill = \"HPI\",     fill.legend =        tm_legend(         title = \"Happy Planet Index\",         item.height = 1.5,         item.width = 3,         item.r = 0,          item.space = 0.5,          item.na.space = 1,          title.align = \"center\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_modes.html","id":"modes","dir":"Articles","previous_headings":"","what":"Modes","title":"tmap basics: modes","text":"tmap facilitates two output modes: \"plot\", produces static maps, \"view\" produces (using tmap code) interactive maps (using JavaScript library Leaflet backend). Via extension package, tmap.mapgl, two new modes available: \"mapbox\" \"maplibre\", demonstrated .","code":""},{"path":"https://r-tmap.github.io/tmap/articles/basics_modes.html","id":"switching-between-modes","dir":"Articles","previous_headings":"","what":"Switching between modes","title":"tmap basics: modes","text":"handy function ttm() used toggle modes. two modes loaded, rtm() can used rotate modes.","code":"## current mode tmap_mode() #> ℹ Current tmap mode is \"plot\". #> ℹ Call `tmap::ttm()` to switch to mode \"view\".  ## to view mode tmap_mode(\"view\") #> ℹ tmap mode set to \"view\".  ## back to plot mode tmap_mode(\"plot\") #> ℹ tmap mode set to \"plot\"."},{"path":"https://r-tmap.github.io/tmap/articles/basics_modes.html","id":"mode-plot","dir":"Articles","previous_headings":"","what":"Mode \"plot\"","title":"tmap basics: modes","text":"start creating plot assign variable called tm. \"plot\" mode. Now can plot map printing tm object:","code":"tm = tm_shape(World, crs = 8857) +   tm_polygons(     fill = \"press\",     fill.scale = tm_scale_intervals(values = \"pu_gn\")) + tm_shape(metro) +   tm_bubbles(     size = \"pop2020\",     fill = \"gold\",     size.scale = tm_scale_continuous(values.scale = 0.8, n = 8)) tm"},{"path":"https://r-tmap.github.io/tmap/articles/basics_modes.html","id":"mode-view","dir":"Articles","previous_headings":"","what":"Mode \"view\"","title":"tmap basics: modes","text":"map view mode: Note big difference: \"view\" mode basemaps, \"plot\" mode none. caused different default option. Basemaps can enabled disabled via tm_basemap(): See vignette basemaps.","code":"ttm() #> ℹ tmap mode set to \"view\". #> ℹ switch back to \"plot\" mode with `tmap::ttm()` tm tm + tm_basemap(NULL) #> [view mode] WebGL does not work (yet) with projected map projections, so it has #> been disabled. #> This message is displayed once per session."},{"path":"https://r-tmap.github.io/tmap/articles/basics_modes.html","id":"mode-specific-options","dir":"Articles","previous_headings":"","what":"Mode specific options","title":"tmap basics: modes","text":"Mode specific layout options can set via tm_plot() tm_view(). number options tm_plot() limited just one, uses general purpose options. contrast, tm_view() contains options, e.g. position control box default zoom level : detailed description options, see vignette options.","code":"tm +     tm_view(control.position = c(\"left\", \"bottom\"),             set_view = 2)"},{"path":"https://r-tmap.github.io/tmap/articles/basics_modes.html","id":"mapgl-modes-mapbox-andmaplibre-","dir":"Articles","previous_headings":"","what":"mapgl modes: \"mapbox\" and“maplibre”`.","title":"tmap basics: modes","text":"new package mapgl offers two new modes. first \"mapbox\" API key required, free personal use. second maplibre API key requires.","code":"library(tmap.mapgl) tmap_mode(\"maplibre\") #> ℹ tmap mode set to \"maplibre\".  tm #> No legends available in mode \"maplibre\" for map variables #> \"size\""},{"path":"https://r-tmap.github.io/tmap/articles/basics_scales.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap basics: scales","text":"spatial data object contained tmap called World. data frame row country. columns following data variables plus additional geometry column contains geometries (see sf package): specify object tm_shape (see vignette) convenience assign s:","code":"names(World) #>  [1] \"iso_a3\"       \"name\"         \"sovereignt\"   \"continent\"    \"area\"         #>  [6] \"pop_est\"      \"pop_est_dens\" \"economy\"      \"income_grp\"   \"gdp_cap_est\"  #> [11] \"life_exp\"     \"well_being\"   \"footprint\"    \"HPI\"          \"inequality\"   #> [16] \"gender\"       \"press\"        \"geometry\" s = tm_shape(World, crs = \"+proj=eqearth\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_scales.html","id":"scales-numeric-data","dir":"Articles","previous_headings":"","what":"Scales: numeric data","title":"tmap basics: scales","text":"visual variable, e.g. fill tm_polygons can represent data variable:  scale defines map data values visual values. Numeric data variables (e.g. \"HPI\" stands Happy Planet Index) default mapped class interval scale polygon fill. can set explicitly tm_scale_intervals, via intervals can specified, well visual values (case polygon fill colors):  style parameter within tm_scale_intervals variety options, including: fixed sd equal pretty quantile fisher jenks specify classification breaks manually, use style = \"fixed\" specify breaks using breaks = c(0,10,20,30,40,50,60):  alternative numeric data variables continuous scale:","code":"s + tm_polygons(fill = \"HPI\") s + tm_polygons(   fill = \"HPI\",   fill.scale = tm_scale_intervals(     style = \"fisher\",      # a method to specify the classes     n = 7,                 # number of classes     midpoint = 38,         # data value mapped to the middle palette color     values = \"pu_gn_div\"   # color palette;                             # run cols4all::c4a_gui() to explore color palettes   )) s + tm_polygons(   fill = \"HPI\",   fill.scale = tm_scale_intervals(     n = 6, # for n classes      style = \"fixed\",         breaks = c(0,10,20,30,40,50,60), # you need n+1 number of breaks     values = \"pu_gn_div\"   )) s +    tm_polygons(     fill = \"HPI\",     fill.scale = tm_scale_continuous(       limits = c(10, 60),       values = \"scico.hawaii\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_scales.html","id":"scales-categorical-data","dir":"Articles","previous_headings":"","what":"Scales: categorical data","title":"tmap basics: scales","text":"","code":"s +    tm_polygons(     fill = \"economy\",     fill.scale = tm_scale_categorical()) s +    tm_polygons(     fill = \"income_grp\",     fill.scale = tm_scale_ordinal(values = \"matplotlib.summer\"))"},{"path":"https://r-tmap.github.io/tmap/articles/basics_vv.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"tmap basics: visual variables","text":"tmap R package spatial data visualization.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/basics_vv.html","id":"map-layers","dir":"Articles","previous_headings":"Introduction","what":"Map layers","title":"tmap basics: visual variables","text":"(thematic) map consists one map layers. map layer specific set variables determine objects layer drawn. visual variable changes appearance spatial object, e.g. fill color line width. following table shows visual variables used standard map layers.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/basics_vv.html","id":"about-the-example-data","dir":"Articles","previous_headings":"","what":"About the example data","title":"tmap basics: visual variables","text":"spatial data object contained tmap called World. data frame row country. columns following data variables plus additional geometry column contains geometries (see sf package): specify object tm_shape  convenience assign s:","code":"names(World) #>  [1] \"iso_a3\"       \"name\"         \"sovereignt\"   \"continent\"    \"area\"         #>  [6] \"pop_est\"      \"pop_est_dens\" \"economy\"      \"income_grp\"   \"gdp_cap_est\"  #> [11] \"life_exp\"     \"well_being\"   \"footprint\"    \"HPI\"          \"inequality\"   #> [16] \"gender\"       \"press\"        \"geometry\" s <- tm_shape(World, crs = \"+proj=eqearth\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_vv.html","id":"constant-visual-values","dir":"Articles","previous_headings":"","what":"Constant visual values","title":"tmap basics: visual variables","text":"visual variable can assigned contant value. E.g. fill = \"red\" size = 2. example several visual variables specified constant values:  advanced users: default constant values specified combinations visual variables layer type. See tmap_options(\"value.const\")","code":"s +    tm_polygons(     fill = \"#ffce00\", # fill color     col = \"black\",    # line color     lwd = 0.5,        # line width     lty = \"dashed\")   # line type"},{"path":"https://r-tmap.github.io/tmap/articles/basics_vv.html","id":"data-driven-visual-variables","dir":"Articles","previous_headings":"","what":"Data-driven visual variables","title":"tmap basics: visual variables","text":"visual variable argument can also specified data variable (e.g., column name):  Another example, data-driven symbol layer drawn top polygon layer  following example data-driven text layer plotted.","code":"s + tm_polygons(fill = \"press\")    # a column in World s +    tm_polygons(fill = \"grey90\") +   # constant fill color    tm_symbols(size = \"pop_est\",     # data variable, mapped to symbol size              fill = \"well_being\",  # data variable, mapped to symbol fill color              shape = \"income_grp\") # data variable, mapped to symbol shape #> [plot mode] legend/component: Some components or legends are too \"high\" and are #> therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling. s +    tm_polygons(fill = \"economy\") +   tm_text(text = \"name\", size = \"area\")"},{"path":"https://r-tmap.github.io/tmap/articles/basics_vv.html","id":"scales-and-legend","dir":"Articles","previous_headings":"Data-driven visual variables","what":"Scales and legend","title":"tmap basics: visual variables","text":"data-driven visual variable, scale legend can specified. See vignettes.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/basics_vv.html","id":"facets","dir":"Articles","previous_headings":"","what":"Facets","title":"tmap basics: visual variables","text":"facet map created specifying two data variables (columns World) visual variable fill:  Improve titles remove (duplicate) legend titles","code":"s + tm_polygons(fill = c(\"well_being\", \"life_exp\")) s +    tm_polygons(     fill = c(\"well_being\", \"life_exp\"),     fill.legend = tm_legend(\"\")) + tm_layout(panel.labels = c(\"Well Being\", \"Life Expectancy\"))"},{"path":"https://r-tmap.github.io/tmap/articles/examples_bubble.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap example: bubble map","text":"tmap, two example data sets Netherlands: one districts, NLD_dist (3340 total), one municipalities: NLD_muni (345 total), one provinces: NLD_prov (12 total). first two datasets contain demographic data Netherlands 2022. third dataset contains metadata (names codes) used plot province borders.  variables NLD_dist NLD_muni : create choropleth variable \"edu_appl_sci\", contains percentage 15-75 year old people university degree (Dutch: WO) applied sciences degree (Dutch: HBO), per district 1st October 2022.","code":"tmap_arrange(     qtm(NLD_dist, title = \"NLD_dist: 3340 districts\"),     qtm(NLD_muni, title = \"NLD_mini: 345 municipalities\"),     qtm(NLD_prov, title = \"NLD_prov: 12 provinces\"),     ncol = 3 ) names(NLD_dist) #>  [1] \"code\"               \"name\"               \"province\"           #>  [4] \"area\"               \"urbanity\"           \"population\"         #>  [7] \"pop_0_14\"           \"pop_15_24\"          \"pop_25_44\"          #> [10] \"pop_45_64\"          \"pop_65plus\"         \"dwelling_total\"     #> [13] \"dwelling_value\"     \"dwelling_ownership\" \"employment_rate\"    #> [16] \"income_low\"         \"income_high\"        \"edu_appl_sci\"       #> [19] \"geometry\""},{"path":"https://r-tmap.github.io/tmap/articles/examples_bubble.html","id":"population-of-dutch-municipalities","dir":"Articles","previous_headings":"","what":"Population of Dutch municipalities","title":"tmap example: bubble map","text":"following code creates bubble map population per  Note scale function tm_scale() general purpose. data categorical, forward arguments tm_scale_categorical().","code":"tm_shape(NLD_muni) +   tm_polygons(fill = \"grey95\", col = \"grey60\") +   tm_symbols(     size = \"population\",     fill = \"steelblue\",     col = \"black\",     lwd = 1,     size.scale = tm_scale(values.scale = 2)   )"},{"path":"https://r-tmap.github.io/tmap/articles/examples_bubble.html","id":"higher-income-class-in-dutch-districts","dir":"Articles","previous_headings":"","what":"Higher income class in Dutch districts","title":"tmap example: bubble map","text":"following map shows percentage people higher income per Dutch district. encoded via interval ‘rainbow’ color scale. Bubble sizes proportional population size.  order find suitable color palette example, used selected sequential ‘rainbow’ like color scale color blind friendly, colors bright dark, like sufficient contrast black borders white background (see working paper cols4all). - symbol indicates reverse palette. Note set n number class intervals 5. However, standard interval method, called pretty, parameter n preferred number classes. case resulting number classes 5 (just like pretty(c(0,60), 5)).","code":"tm_shape(NLD_dist) +   tm_symbols(     size = \"population\",     fill = \"income_high\",     col = \"black\",     size.scale = tm_scale_continuous(values.scale = 2),     fill.scale = tm_scale_intervals(n = 5, values = \"-tol.rainbow_wh_br\")) cols4all::c4a_gui()"},{"path":"https://r-tmap.github.io/tmap/articles/examples_choro_NLD.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap example: choropleth (Netherlands)","text":"tmap, two example data sets Netherlands: one districts, NLD_dist (3340 total), one municipalities: NLD_muni (345 total), one provinces: NLD_prov (12 total). first two datasets contain demographic data Netherlands 2022. third dataset contains metadata (names codes) used plot province borders.  variables NLD_dist NLD_muni : create choropleth variable \"edu_appl_sci\", contains percentage 15-75 year old people university degree (Dutch: WO) applied sciences degree (Dutch: HBO), per district 1st October 2022.","code":"tmap_arrange(     qtm(NLD_dist, title = \"NLD_dist: 3340 districts\"),     qtm(NLD_muni, title = \"NLD_mini: 345 municipalities\"),     qtm(NLD_prov, title = \"NLD_prov: 12 provinces\"),     ncol = 3 ) names(NLD_dist) #>  [1] \"code\"               \"name\"               \"province\"           #>  [4] \"area\"               \"urbanity\"           \"population\"         #>  [7] \"pop_0_14\"           \"pop_15_24\"          \"pop_25_44\"          #> [10] \"pop_45_64\"          \"pop_65plus\"         \"dwelling_total\"     #> [13] \"dwelling_value\"     \"dwelling_ownership\" \"employment_rate\"    #> [16] \"income_low\"         \"income_high\"        \"edu_appl_sci\"       #> [19] \"geometry\""},{"path":"https://r-tmap.github.io/tmap/articles/examples_choro_NLD.html","id":"choropleth-step-1","dir":"Articles","previous_headings":"","what":"Choropleth: step 1","title":"tmap example: choropleth (Netherlands)","text":"","code":"tm_shape(NLD_dist) +     tm_polygons(fill = \"edu_appl_sci\") # data variable -> fill color"},{"path":"https://r-tmap.github.io/tmap/articles/examples_choro_NLD.html","id":"choropleth-step-2","dir":"Articles","previous_headings":"","what":"Choropleth: step 2","title":"tmap example: choropleth (Netherlands)","text":"remove district borders, dense urban areas. Instead, add borders municipalities provinces op top:","code":"tm_shape(NLD_dist) +     tm_polygons(         fill = \"edu_appl_sci\",         col = NULL) +           # disable border lines tm_shape(NLD_muni) +     tm_borders(lwd = 1) +       # municipality border line width 1 tm_shape(NLD_prov) +     tm_borders(lwd = 3)         # province border line width 3"},{"path":"https://r-tmap.github.io/tmap/articles/examples_choro_NLD.html","id":"choropleth-step-3","dir":"Articles","previous_headings":"","what":"Choropleth: step 3","title":"tmap example: choropleth (Netherlands)","text":"improvements embellishments: different color scheme. Run cols4all::c4a_gui() explore . application, looking : diverging, color-blind friendly palette sufficient contrast black (see border lines) Legend: position top left, title removed (use tm_title instead) Title added tm_title. Note z = 0 makes sure title top Map components added: compass, scalebar, credits text","code":"tm_shape(NLD_dist) +     tm_polygons(         fill = \"edu_appl_sci\",         fill.scale = tm_scale_continuous(values = \"-orange_blue_diverging\"),         fill.legend = tm_legend(\"\", position = tm_pos_in(\"left\", \"top\")),         col = NULL     ) +  tm_shape(NLD_muni) +     tm_borders(lwd = 1) + tm_shape(NLD_prov) +     tm_borders(lwd = 3) +  tm_title(\"Proportion of Population Aged 15–75 with a University or Applied Sciences Degree by District (as of October 1, 2022)\",      width = 15,      position = tm_pos_in(\"left\", \"top\"),      z = 0) + tm_compass(position = tm_pos_in(\"left\", \"bottom\")) + tm_scalebar(position = tm_pos_in(\"left\", \"bottom\")) + tm_credits(\"© Data: Statistics Netherlands, Software: R-tmap\",     position = tm_pos_in(\"left\", \"bottom\"))"},{"path":"https://r-tmap.github.io/tmap/articles/examples_choro_World.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap example: choropleth (World)","text":"spatial data object contained tmap called World. data frame row country. columns following data variables plus additional geometry column contains geometries (see sf package): create choropleth Gender Inequality Index (GII) per country.","code":"names(World) #>  [1] \"iso_a3\"       \"name\"         \"sovereignt\"   \"continent\"    \"area\"         #>  [6] \"pop_est\"      \"pop_est_dens\" \"economy\"      \"income_grp\"   \"gdp_cap_est\"  #> [11] \"life_exp\"     \"well_being\"   \"footprint\"    \"HPI\"          \"inequality\"   #> [16] \"gender\"       \"press\"        \"geometry\""},{"path":"https://r-tmap.github.io/tmap/articles/examples_choro_World.html","id":"the-choropleth-step-1","dir":"Articles","previous_headings":"","what":"The choropleth: step 1","title":"tmap example: choropleth (World)","text":"","code":"tm_shape(World) +     tm_polygons(fill = \"gender\") #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> This message is displayed once per session."},{"path":"https://r-tmap.github.io/tmap/articles/examples_choro_World.html","id":"the-choropleth-step-2","dir":"Articles","previous_headings":"","what":"The choropleth: step 2","title":"tmap example: choropleth (World)","text":"improvements: suitable map projection. one ‘Equal Earth’ equal-area, .e. polygon area sizes proportianal real-world country area sizes. different color scheme. Run cols4all::c4a_gui() explore . application, looking : diverging, color-blind friendly palette sufficient contrast black (see border lines) custom legend title option earth_boundary enabled, shows earth boundaries. Note feature available certain map projections (advanced users: families pseudo-cylindrical orthographic projections). legend box placed top map, left bottom.","code":"tm_shape(World, crs = \"+proj=eqearth\") +   tm_polygons(     fill = \"gender\",     fill.scale = tm_scale_intervals(values = \"-tableau.classic_orange_blue\"),     fill.legend = tm_legend(      \"Gender Inequality Index (GII)\",      position = tm_pos_on_top(pos.h = \"left\", pos.v = \"bottom\"),      bg.color = \"white\")) + tm_options(earth_boundary = TRUE, frame = FALSE)"},{"path":"https://r-tmap.github.io/tmap/articles/examples_gridmaps.html","id":"get-grid-layout-of-dutch-provinces","dir":"Articles","previous_headings":"","what":"Get grid layout of Dutch provinces","title":"tmap example: gridmaps","text":"","code":"nl_prov_grid1 = geofacet::nl_prov_grid1 class(nl_prov_grid1) = \"data.frame\"  nl_prov_grid1 = nl_prov_grid1 |>     mutate(name = ifelse(name == \"Friesland\", \"Fryslan\", name)) |>     select(-code)"},{"path":"https://r-tmap.github.io/tmap/articles/examples_gridmaps.html","id":"join-with-nld-datasets-in-tmap","dir":"Articles","previous_headings":"","what":"Join with NLD datasets in tmap","title":"tmap example: gridmaps","text":"","code":"NLD_prov2 = NLD_prov |>     left_join(nl_prov_grid1,               by = \"name\")  NLD_muni2 = NLD_muni |>     left_join(NLD_prov2 |>                 st_drop_geometry() |>                 select(name, row, col), by = c(\"province\" = \"name\"))  NLD_dist2 = NLD_dist |>     left_join(NLD_prov2 |>                 st_drop_geometry() |>                 select(name, row, col), by = c(\"province\" = \"name\"))"},{"path":"https://r-tmap.github.io/tmap/articles/examples_gridmaps.html","id":"the-map","dir":"Articles","previous_headings":"","what":"The map","title":"tmap example: gridmaps","text":"","code":"tm_shape(NLD_dist2) +     tm_fill(\"dwelling_value\",              fill.scale = tm_scale_intervals(breaks = c(50, 250, 350, 500, 750, 1600), as.count = FALSE),             fill.legend = tm_legend(\"\", position = tm_pos_on_top(\"left\", \"top\"), frame = FALSE)) +     tm_facets_grid(rows = \"row\", columns = \"col\") + tm_shape(NLD_muni2) +     tm_borders(lwd = 1) +     tm_facets_grid(rows = \"row\", columns = \"col\") + tm_shape(NLD_prov2) +     tm_borders(lwd = 2) +     tm_facets_grid(rows = \"row\", columns = \"col\") + tm_layout(panel.show = FALSE) +     tm_title(\"Average dwelling value (in thousand Euros)\")"},{"path":"https://r-tmap.github.io/tmap/articles/examples_raster.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap example: rasters","text":"Reading terra package Reading stars package","code":"ndvi_image = system.file(\"extdata/raster/mod13q1/TERRA_MODIS_012010_NDVI_2014-01-17.jp2\", package = \"sits\") (ndvi_terra = terra::rast(ndvi_image)) #> class       : SpatRaster  #> dimensions  : 147, 255, 1  (nrow, ncol, nlyr) #> resolution  : 231.6564, 231.6564  (x, y) #> extent      : -6073798, -6014726, -1312333, -1278280  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs  #> source      : TERRA_MODIS_012010_NDVI_2014-01-17.jp2  #> name        : TERRA_MODIS_012010_NDVI_2014-01-17 (ndvi_stars = stars::read_stars(ndvi_image)) #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>                                  Min. 1st Qu. Median    Mean 3rd Qu.  Max. #> TERRA_MODIS_012010_NDVI_201...  -3056    6937   8174 7601.51    8823 10076 #> dimension(s): #>   from  to   offset  delta  refsys x/y #> x    1 255 -6073798  231.7 unnamed [x] #> y    1 147 -1278280 -231.7 unnamed [y]"},{"path":"https://r-tmap.github.io/tmap/articles/examples_raster.html","id":"example-1","dir":"Articles","previous_headings":"","what":"Example 1","title":"tmap example: rasters","text":"first plot - NDVI image false color brewer pallete","code":"ndvi = ndvi_terra # or ndivi_stars  # scale the data to get image in [-1..1] range ndvi = ndvi * 0.0001  # plot using brewer \"RdYlGn\" pallete tmap::tm_shape(ndvi) +     tmap::tm_raster(         col.scale = tmap::tm_scale_continuous(             values = \"brewer.rd_yl_gn\",             midpoint = NA),         col.legend = tmap::tm_legend(             title = \"NDVI\",             title.size = 0.7,             text.size = 0.7,             bg.color = \"white\",             bg.alpha = 0.7,             position = tmap::tm_pos_in(\"left\", \"bottom\"),             frame = TRUE         )     ) +     tmap::tm_graticules(         labels.size = 0.7     ) +     tmap::tm_compass() +     tmap::tm_layout(         scale = 1.0     )"},{"path":"https://r-tmap.github.io/tmap/articles/examples_raster.html","id":"example-2","dir":"Articles","previous_headings":"","what":"Example 2","title":"tmap example: rasters","text":"","code":"sent_image = system.file(\"extdata/raster/classif/SENTINEL2_MSI_20LNR_2020-06-04_2021-08-26_class_v1.tif\", package = \"sits\") sent = terra::rast(sent_image) tm_shape(sent) + tm_raster(col.scale = tm_scale_discrete())"},{"path":"https://r-tmap.github.io/tmap/articles/examples_raster.html","id":"example-3-categorical-raster","dir":"Articles","previous_headings":"","what":"Example 3 (categorical raster)","title":"tmap example: rasters","text":"","code":"clc2018_poznan = rast(\"https://github.com/Nowosad/comparing-spatial-patterns-2024/raw/refs/heads/main/data/clc2018_poznan.tif\") tm_shape(clc2018_poznan) +      tm_raster() tm_shape(clc2018_poznan) +      tm_raster(col.legend = tm_legend(title = \"Land cover\"))"},{"path":"https://r-tmap.github.io/tmap/articles/examples_terrain.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap example: terrain map","text":"use couple spatial data objects contained tmap: World_rivers, land metro.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/examples_terrain.html","id":"terrain-map","dir":"Articles","previous_headings":"","what":"Terrain map","title":"tmap example: terrain map","text":"Note: upper case position spefications (last line) means tight right bottom corner","code":"tm_shape(land) +     tm_raster(col = \"cover\") + #tm_shape(World) + #   tm_borders() + tm_shape(World_rivers) +     tm_lines(lwd = \"strokelwd\",               lwd.scale = tm_scale_asis(values.scale = 0.2)) + tm_shape(metro) +     tm_symbols(shape = 20, size = 0.6, fill = \"white\") +     tm_symbols(shape = 20, size = 0.5, fill = \"red\") + tm_crs(\"+proj=eck4\") +  tm_layout(earth_boundary = TRUE,           earth_boundary.lwd = 2,           legend.show = FALSE,     # option to disable all legends           frame = FALSE,           space.color = \"white\") + tm_title(\"Map of the World\",    position = tm_pos_out(cell.h = \"center\", cell.v = \"top\", pos.h = \"center\")) + tm_credits(\"Eckert IV projection\", position = c(\"RIGHT\", \"BOTTOM\")) #> Warning: ! Unable to warp stars. Stars will be transformed now (which will take some #>   time)."},{"path":"https://r-tmap.github.io/tmap/articles/examples_terrain.html","id":"classic-style","dir":"Articles","previous_headings":"","what":"Classic style","title":"tmap example: terrain map","text":"","code":"tmap_style(\"classic\") #> style set to \"classic\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\" tmap_last() #> Warning: ! Unable to warp stars. Stars will be transformed now (which will take some #>   time)."},{"path":"https://r-tmap.github.io/tmap/articles/examples_topo_Africa.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap example: topographic map (Africa)","text":"use several spatial data object contained tmap. first called World, use country borders. ’ll select African countries: second land stars object contains land cover. third object metro sf object metropolitan areas. fourth final ovject World_rivers.","code":"metroAfrica = sf::st_intersection(metro, World[World$continent == \"Africa\", ]) #> Warning: attribute variables are assumed to be spatially constant throughout #> all geometries Africa = World[World$continent == \"Africa\", ]"},{"path":"https://r-tmap.github.io/tmap/articles/examples_topo_Africa.html","id":"topographic-map","dir":"Articles","previous_headings":"","what":"Topographic map","title":"tmap example: topographic map (Africa)","text":"","code":"tm_shape(land) +   tm_raster(\"cover_cls\",     col.legend = tm_legend(\"Land use\")) + tm_shape(World_rivers) +   tm_lines(     lwd = \"strokelwd\",      lwd.scale = tm_scale_asis(values.scale = .5),     col = \"#A6CEE3\") + tm_shape(Africa, is.main = TRUE) +   tm_borders() + tm_shape(metroAfrica) +   tm_symbols(fill = \"red\", shape = \"pop2020\", size = \"pop2020\",     size.scale = tm_scale_intervals(       breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,       values.range = c(0.2,2)     ),     size.legend = tm_legend(\"Population in 2020\"),     shape.scale = tm_scale_intervals(       breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,       values = c(21, 23, 22, 21, 23, 22)     ),     shape.legend = tm_legend_combine(\"size\")) +   tm_labels(\"name\") + tm_credits(\"United Nations, Department of Economic and Social Affairs, Population Division (2014). World Urbanization Prospects.\\nProduction of Global Land Cover Data - GLCNMO2008.\", position = tm_pos_out(\"center\", \"bottom\"))"},{"path":"https://r-tmap.github.io/tmap/articles/examples_topo_Africa.html","id":"breaking-down-in-layers","dir":"Articles","previous_headings":"","what":"Breaking down in layers","title":"tmap example: topographic map (Africa)","text":"code chunk overwhelming, let’s look layer groups:","code":""},{"path":"https://r-tmap.github.io/tmap/articles/examples_topo_Africa.html","id":"land-use-layer","dir":"Articles","previous_headings":"Breaking down in layers","what":"Land use layer","title":"tmap example: topographic map (Africa)","text":"","code":"tm =  tm_shape(land) +   tm_raster(\"cover_cls\",     col.legend = tm_legend(\"Land use\")) tm"},{"path":"https://r-tmap.github.io/tmap/articles/examples_topo_Africa.html","id":"adding-rivers","dir":"Articles","previous_headings":"Breaking down in layers","what":"Adding rivers","title":"tmap example: topographic map (Africa)","text":"","code":"tm = tm +  tm_shape(World_rivers) +   tm_lines(     lwd = \"strokelwd\",      lwd.scale = tm_scale_asis(values.scale = .5),     col = \"#A6CEE3\") tm"},{"path":"https://r-tmap.github.io/tmap/articles/examples_topo_Africa.html","id":"african-countries","dir":"Articles","previous_headings":"Breaking down in layers","what":"African countries","title":"tmap example: topographic map (Africa)","text":"Note first two layers global data set (just Africa). Note final plot raster cropped bounding box Africa. ’ll use .main spatial object Africa actual cropping.","code":"tm = tm + tm_shape(Africa, is.main = TRUE) +   tm_borders() tm"},{"path":"https://r-tmap.github.io/tmap/articles/examples_topo_Africa.html","id":"african-cities","dir":"Articles","previous_headings":"Breaking down in layers","what":"African cities","title":"tmap example: topographic map (Africa)","text":"See vigette scale legends.","code":"tm = tm + tm_shape(metroAfrica) +   tm_symbols(fill = \"red\", shape = \"pop2020\", size = \"pop2020\",     size.scale = tm_scale_intervals(       breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,       values.range = c(0.2,2)     ),     size.legend = tm_legend(\"Population in 2020\"),     shape.scale = tm_scale_intervals(       breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,       values = c(21, 23, 22, 21, 23, 22)     ),     shape.legend = tm_legend_combine(\"size\")) +   tm_labels(\"name\") tm"},{"path":"https://r-tmap.github.io/tmap/articles/ext_cartogram.html","id":"cartograms","dir":"Articles","previous_headings":"","what":"Cartograms","title":"tmap extensions: tmap.mapgl","text":"cartograms, areal regions distorted obtained area sizes proportional quantitative variable. three types: contiguous, non-contiguous dorling cartogram. strongly recommended use equal area crs (see instructions).","code":""},{"path":"https://r-tmap.github.io/tmap/articles/ext_cartogram.html","id":"contiguous-cartogram","dir":"Articles","previous_headings":"","what":"Contiguous cartogram","title":"tmap extensions: tmap.mapgl","text":"shapes polygons distorted, neighborhood relationships preserved much possible.","code":"Africa = World[World$continent == \"Africa\", ]  tm_shape(Africa, crs = \"+proj=robin\") +     tm_cartogram(size = \"pop_est\",                   fill = \"life_exp\",                  fill.scale = tm_scale_intervals(values = \"-cols4all.bu_br_div\"),                  fill.legend = tm_legend(\"Age\"),                  options = opt_tm_cartogram(itermax = 15)) + tm_title(\"Life Expectancy\") #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap/articles/ext_cartogram.html","id":"non-contiguous-cartograms","dir":"Articles","previous_headings":"","what":"Non-contiguous cartograms","title":"tmap extensions: tmap.mapgl","text":", polygons resized keep shape.","code":"tm_shape(Africa, crs = \"+proj=robin\") +     tm_cartogram_ncont(size = \"pop_est\",                         fill = \"inequality\",                        fill.scale = tm_scale_continuous(values = \"cols4all.pu_gn_div\", values.range = c(0, 0.5)),                        fill.legend = tm_legend(\"\"),                        options = opt_tm_cartogram_ncont()) +     tm_text(\"name\", options = opt_tm_text(point.label = TRUE)) + tm_title(\"Income inequality (Gini coefficient)\") #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap/articles/ext_cartogram.html","id":"dorling-cartogram","dir":"Articles","previous_headings":"","what":"Dorling cartogram","title":"tmap extensions: tmap.mapgl","text":"Polygons replaced non-overlapping bubbles.","code":"tm_shape(World, crs = \"+proj=robin\") +     tm_cartogram_dorling(size = \"pop_est\",                           fill = \"press\",                          fill.scale = tm_scale_continuous(values = \"cols4all.pu_gn_div\", midpoint = 50),                          fill.legend = tm_legend(\"\", height = 30)) + tm_title(\"World Press Freedom Index\") #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap/articles/ext_glyphs.html","id":"donut-maps","dir":"Articles","previous_headings":"","what":"Donut maps","title":"tmap extensions: tmap.mapgl","text":"","code":"ZH_muni = NLD_muni[NLD_muni$province == \"Zuid-Holland\", ]  ZH_muni$income_middle = 100 - ZH_muni$income_high - ZH_muni$income_low  which.max(ZH_muni$population) #> [1] 26  ZH_muni$population[c(10,26)] = 500000  ZH_muni$income_high[1:15] = NA  tm_shape(ZH_muni) +   tm_polygons() +   tm_donuts(parts = tm_vars(c(\"income_low\", \"income_middle\", \"income_high\"), multivariate = TRUE),     fill.scale = tm_scale_categorical(values = \"-pu_gn_div\"),                  size = \"population\",     lwd = 1,     size.scale = tm_scale_continuous(ticks = c(50000, 100000, 250000, 500000)),     options = opt_tm_donuts(fill_hole = FALSE))"},{"path":"https://r-tmap.github.io/tmap/articles/ext_glyphs.html","id":"flower-maps","dir":"Articles","previous_headings":"","what":"Flower maps","title":"tmap extensions: tmap.mapgl","text":"","code":"library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE  q = function(x) {     r = rank(x)     r[is.na(x)] = NA     r = r / max(r, na.rm = TRUE)     r }  World$norm_well_being = q((World$well_being / 8)) World$norm_footprint = q(((50 - World$footprint) / 50)) World$norm_inequality = q(((65 - World$inequality) / 65)) World$norm_press = q(1 - ((100 - World$press) / 100)) World$norm_gender = q(1 - World$gender)   tm_shape(World) +     tm_polygons(fill = \"white\", popup.vars = FALSE) + tm_shape(World) +        tm_flowers(parts = tm_vars(c(\"norm_gender\", \"norm_press\", \"norm_footprint\", \"norm_well_being\", \"norm_inequality\"), multivariate = TRUE),                fill.scale = tm_scale(values = \"friendly5\"),                size = 1, popup.vars = c(\"norm_gender\", \"norm_press\", \"norm_footprint\", \"norm_well_being\",\"norm_inequality\"), id = \"name\") +     tm_basemap(NULL) +     tm_layout(bg.color = \"grey90\") #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> This message is displayed once per session."},{"path":"https://r-tmap.github.io/tmap/articles/ext_mapgl.html","id":"mapbox","dir":"Articles","previous_headings":"","what":"mapbox","title":"tmap extensions: tmap.mapgl","text":"\"mapbox\" API key required, free personal use. See instructions.","code":"library(tmap.mapgl) tmap_mode(\"mapbox\") map"},{"path":"https://r-tmap.github.io/tmap/articles/ext_mapgl.html","id":"maplibre","dir":"Articles","previous_headings":"","what":"maplibre","title":"tmap extensions: tmap.mapgl","text":"","code":"tmap_mode(\"maplibre\") #> ℹ tmap mode set to \"maplibre\". map"},{"path":"https://r-tmap.github.io/tmap/articles/ext_mapgl.html","id":"d-polygons","dir":"Articles","previous_headings":"","what":"3d polygons","title":"tmap extensions: tmap.mapgl","text":"tmap.mapgl also features new layer type, tm_polygons_3d, available \"mapbox\" \"maplibre\". map layer tm_polygons, one addition: polygons can extruded 3d shape. visual variable control called height.","code":"tmap_mode(\"maplibre\") #> ℹ tmap mode set to \"maplibre\".  NLD_dist$pop_dens = NLD_dist$population / NLD_dist$area  tm_shape(NLD_dist) +   tm_polygons_3d(height = \"pop_dens\",     fill = \"edu_appl_sci\",     fill.scale = tm_scale_intervals(style = \"kmeans\", values = \"-pu_gn\"),     fill.legend = tm_legend(\"Univeristy degree\")) + tm_maplibre(pitch = 45) #> No legends available in mode \"maplibre\" for map variables #> \"height\""},{"path":"https://r-tmap.github.io/tmap/articles/foundations_crs.html","id":"latitude-longitude-coordinates","dir":"Articles","previous_headings":"","what":"Latitude longitude coordinates","title":"tmap foundations: map projections (CRS)","text":"spatial data object contained tmap called World. sf data frame row country. geometry column contains multipolygons: used coordinates latitudes longitudes. Latitudes define north/south (perpendicular equator), whereas longitudes define east/west.  latitude longitude coordinates specified using WGS84 geodetic datum, ellipsoid model earth. standards, WGS84 far popular also used GPS. Besides using latitude longitude coordinates references real locations earth, can obviously also used draw maps:  However, good map areas near poles large (therefore overemphasized).  Therefore, mathematicians thought ways ‘flatten earth’. Bring CRS…","code":"World$geometry #> Geometry set for 177 features  #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.645 #> Geodetic CRS:  WGS 84 #> First 5 geometries: #> MULTIPOLYGON (((66.217 37.394, 66.519 37.363, 6... #> MULTIPOLYGON (((20.605 41.086, 21.02 40.843, 21... #> MULTIPOLYGON (((-4.923 24.975, -8.684 27.396, -... #> MULTIPOLYGON (((12.322 -6.1, 12.735 -5.966, 13.... #> MULTIPOLYGON (((-61.883 -80.393, -61.139 -79.98... tm_shape(World,      bbox = \"FULL\",     crs = \"+proj=ortho +lat_0=30 +lon_0=0\") +   tm_polygons() + tm_style(\"natural\") +  tm_graticules(n.x = 20, n.y = 10, col = \"black\", lwd = 2, labels.show = FALSE) + tm_xlab(\"Longitudes\", size = 1.1) +tm_ylab(\"Latitudes\", size = 1.1) tm_shape(World) +   tm_polygons(\"gold\") + tm_crs(4326) + tm_grid(n.x = 16, n.y = 8) + tm_title(\"Latitude/longitude (4326) coordinates\") #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> This message is displayed once per session. library(tmap.cartogram)  # split multi-polygon countries (otherwise Alaska is still too large) World_polygons = sf::st_cast(World, \"POLYGON\") #> Warning in st_cast.sf(World, \"POLYGON\"): repeating attributes for all #> sub-geometries for which they may not be constant World_polygons$area = sf::st_area(World_polygons)  tm_shape(World_polygons) +   tm_cartogram_ncont(size = \"area\", fill = \"gold\", options = opt_tm_cartogram_ncont(expansion = 0.4)) + tm_title(\"Polygons shrinked to real area sizes\") #> Warning: tm_cartogram requires projected coordinates, not longlat degrees. A #> projected CRS can be specified in tm_shape (argument crs) #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap/articles/foundations_crs.html","id":"crs-map-projection","dir":"Articles","previous_headings":"","what":"CRS (map projection)","title":"tmap foundations: map projections (CRS)","text":"abbreviation CRS stands Coordinate Reference System. defines real locations earth projected two-dimensional surface (plotting device paper). Latitudes longitudes (WGS84) can also seen CRS, unprojected one. tmap spatial data packages R (sf, stars, terra) CRS named many functions function arguments crs (small case). important function sf::st_crs(), via CRS can set retrieved. Even though definition CRS complex, common CRSs can created shortcuts. EPSG library projections indexed numbers. instance, WGS84 latitude longitude coordinate system EPSG 4326. corresponding CRS can obtained via sf::st_crs(4326). Several map projections useful world maps. Useful sense plotted areas (almost) proportional real areas, polygon shapes distorted much. projections, belong family “pseudo-cylindrical” projections (see https://r-tmap.github.io/tmap-book/geodata.html#crs ). widely used cartography decades, e.g. Times Atlas World.  panel names abbreviations : Winkel Tripel, Robinson, Eckert VI, Mollweide, Wagner VII Equal Earth. can used follows:","code":"# vector of world map projections world_projs = c(\"wintri\", \"robin\", paste0(\"eck\", 1:6),    \"moll\", paste0(\"wag\", 1:7), \"eqearth\")  # create a tmap for each of them tms = lapply(world_projs, function(p) {   tm_shape(World, crs = paste0(\"+proj=\", p)) + tm_polygons() + tm_style(\"natural\") + tm_layout(panel.labels = p) })  # use tmap_arrange tmap_arrange(tms, ncol= 3) tm_shape(World) +   tm_polygons(\"HPI\") + tm_crs(\"+proj=eck4\") + tm_title(\"Happy Planet Index\") + tm_layout(earth_boundary = TRUE, frame = FALSE)"},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/foundations_crs.html","id":"geometric-transformations-use-tm_shape","dir":"Articles","previous_headings":"Use","what":"Geometric transformations: use tm_shape","title":"tmap foundations: map projections (CRS)","text":"crs can defined tm_shape(). useful thematic maps geometry changed. instance cartograms:","code":"tm_shape(World, crs = \"+proj=robin\") +   tm_cartogram(size = \"pop_est\") #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap/articles/foundations_crs.html","id":"otherwise-use-tm_crs","dir":"Articles","previous_headings":"Use","what":"Otherwise: use tm_crs","title":"tmap foundations: map projections (CRS)","text":"majority use cases, e.g. regular choropleths, recommended define CRS function tm_crs():","code":"tm_shape(World) +   tm_polygons(fill = \"life_exp\") + tm_crs(crs = \"+proj=robin\")"},{"path":"https://r-tmap.github.io/tmap/articles/foundations_gg.html","id":"components","dir":"Articles","previous_headings":"","what":"Components:","title":"tmap foundations: Grammar of Graphics","text":"Data: dataset visualized. Aesthetic Mappings: data maps visual properties (e.g., position, color, size). Geometric Objects: Shapes representing data (e.g., points, lines, bars). Scales: Rules linking data values aesthetic values. Transformations: Adjustments data coordinates (e.g., log scales). Statistical Summaries: Computed data representations (e.g., means, trends). Facets: Layouts splitting data subsets comparison. applied ggplot2 [2] also tmap, slightly differently.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/foundations_gg.html","id":"ggplot2","dir":"Articles","previous_headings":"","what":"ggplot2","title":"tmap foundations: Grammar of Graphics","text":"ggplot2, visual variables defined plot level (default), tmap layer level. makes sense, since non-spatial visualizations x y variables, important ones, shared among plot layers. However, spatial visualizations x y variables considered data-driven rather geometry-driven. visual variables, fill border color, line width, symbol shape. also applies scale funtions: e.g. ggplot2, scale_fill_continuous() defined visual variable fill whole plot. tmap, scale functions mapped 1 1 visual variables per layer: tm_polygons(fill = \"my_var\", fill.scale = tm_scale_continuous()) See vignette (: link) compares tmap ggplot2 series examples","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_ggplot2.html","id":"choropleth-map-comparision","dir":"Articles","previous_headings":"","what":"Choropleth Map comparision","title":"tmap versus: ggplot2","text":"example default output tmap compares ggplot2. default output ggplot2:  default output tmap:  Note different line width values: linewidth = .4 ggplot2 lwd = 1 tmap unit line width different. tmap follows lwd parameter (see graphics::par) whereas ggplot2 linewidth = 1 equals roughly 0.75 due historical error.","code":"library(ggplot2) library(cols4all)  ggplot(World) +     geom_sf(aes(fill = HPI), color = \"grey20\", linewidth = .4) +     scale_fill_continuous_c4a_div(\"pu_gn\", mid = 35) +     coord_sf(crs = \"+proj=eqearth\") +     theme_void() tm_shape(World, crs = \"+proj=eqearth\") +     tm_polygons(fill = \"HPI\",                 col = \"grey20\",                 lwd = 1,                 fill.scale = tm_scale_continuous(values = \"pu_gn\", midpoint = 35)) #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."},{"path":"https://r-tmap.github.io/tmap/articles/versus_ggplot2.html","id":"mimicking-ggplot2-layout","dir":"Articles","previous_headings":"","what":"Mimicking ggplot2 layout","title":"tmap versus: ggplot2","text":"can use tmap match style ggplot2:","code":"tm_shape(World, crs = \"+proj=eqearth\") +   tm_polygons(     fill = \"HPI\",     col = \"grey20\",     lwd = 1,     fill.scale = tm_scale_continuous(values = \"pu_gn\", midpoint = 35),     fill.legend = tm_legend(reverse = TRUE,        frame = FALSE,        item.height = 2.25,        item.width = 1.8,        position = tm_pos_out(pos.v = \"center\"),        na.show = FALSE,        ticks = list(c(0, 0.1), c(0.9, 1)),        ticks.col = \"white\",        col = \"white\")) + tm_layout(frame = FALSE, outer.margins = 0)"},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"mapsf","dir":"Articles","previous_headings":"","what":"mapsf","title":"tmap versus: mapsf","text":"R package mapsf excellent package static thematic maps. similar tmaps “plot” mode.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"map-layers","dir":"Articles","previous_headings":"mapsf","what":"Map layers","title":"tmap versus: mapsf","text":"mapsf also offers different map layers, contrast tmap generated different functions (e.g. [tm_polygons()] [tm_symbols()]), mapsf uses one function mf_map, map layer type specified via argument type.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"components","dir":"Articles","previous_headings":"mapsf","what":"Components","title":"tmap versus: mapsf","text":"Map components, title, compass, scale bar, credits text, can added packages. mapsf mf_title, mf_arrow, mf_scale, mf_credits respectively.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"different-legends","dir":"Articles","previous_headings":"mapsf","what":"Different legends","title":"tmap versus: mapsf","text":"legends mapsf tmap different: tmap proportional symbols always drawn next whereas mapsf drawn top . Also color legend class intervals different. shown .","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"shadow-layer","dir":"Articles","previous_headings":"mapsf","what":"Shadow layer","title":"tmap versus: mapsf","text":"mapsf awesome layer type tmap (yet): mf_shadow, draws shadow polygons. See last example ","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"inset-mini-map","dir":"Articles","previous_headings":"mapsf","what":"Inset (‘mini’) map","title":"tmap versus: mapsf","text":"mapsf inset map can added via mf_inset_on. tmap, inset maps can added via argument vp print function. special handy use case mf_inset_on(x = \"worldmap\") globe plotted red arrow location main map. tmap feature still available via “view” mode function tm_minimap.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"styling-and-themes","dir":"Articles","previous_headings":"mapsf","what":"Styling and themes","title":"tmap versus: mapsf","text":"packages offer styling options themes. packages styles can created. However, tmap much styling options available. See mf_theme() [tm_layout()].","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"base-vs-grid-graphics","dir":"Articles","previous_headings":"mapsf","what":"Base vs grid graphics","title":"tmap versus: mapsf","text":"key difference “plot” mode tmap mapsf “plot” mode tmap makes use grid package (just like ggplot2) whereas mapsf uses base R graphics. implications combining plots.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"dependencies","dir":"Articles","previous_headings":"mapsf","what":"Dependencies","title":"tmap versus: mapsf","text":"mapsf much less dependencies tmap, installation faster.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"bubble-map","dir":"Articles","previous_headings":"","what":"Bubble map","title":"tmap versus: mapsf","text":"example mapsf applied tmap dataset [NLD_muni].  tmap (using colors):  Increase overall size bubbles:","code":"library(mapsf) mf_map(NLD_muni) mf_map(NLD_muni, var = \"population\", type = \"prop\", leg_pos = \"topright\", add = TRUE) mf_layout(   title = \"Population in Dutch municipalities in 2022\",   credits = \"Statistics Netherlands (CBS)\") tm_shape(NLD_muni) +   tm_polygons( \"gray80\") +   tm_bubbles(fill = \"tomato4\", size = \"population\") + tm_title(\"Population in Dutch municipalities in 2022\") + tm_credits(\"Statistics Netherlands (CBS)\", position = c(\"left\", \"bottom\")) tm_shape(NLD_muni) +   tm_polygons( \"gray80\") + tm_bubbles(   fill = \"tomato4\",    size = \"population\",   size.scale = tm_scale(values.scale = 5)) + tm_title(\"Population in Dutch municipalities in 2022\") + tm_credits(\"Statistics Netherlands (CBS)\", position = c(\"left\", \"bottom\")) + tm_compass() + tm_scalebar()"},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"choropleth","dir":"Articles","previous_headings":"","what":"Choropleth","title":"tmap versus: mapsf","text":"tmap, using similar specifications:","code":"mf_map(NLD_muni, var = \"edu_appl_sci\", type = \"choro\", leg_pos = \"topright\") mf_layout(   title = \"Population share with (applied) university degree in 2022\",   credits = \"Statistics Netherlands (CBS)\") tm_shape(NLD_muni) +   tm_polygons(     fill = \"edu_appl_sci\",     fill.scale = tm_scale_intervals(values = \"carto.mint\", style = \"quantile\", n = 9),     fill.legend = tm_legend(reverse = TRUE)) + tm_title(\"Population share with (applied) university degree in 2022\") + tm_credits(\"Statistics Netherlands (CBS)\", position = c(\"left\", \"bottom\")) + tm_scalebar() #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapsf.html","id":"shadow-layer-1","dir":"Articles","previous_headings":"","what":"Shadow layer","title":"tmap versus: mapsf","text":"tmap similar layer function (yet), can done geometric manipulation sf:","code":"mf_shadow(NLD_muni) mf_map(NLD_muni, var = \"edu_appl_sci\", type = \"choro\", leg_pos = \"topright\", add = TRUE) library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE shadows = st_set_crs(st_geometry(NLD_muni) + c(2000, -2000), st_crs(NLD_muni))  tm_shape(shadows) +   tm_fill(\"grey50\") + tm_shape(NLD_muni) +   tm_polygons(     fill = \"edu_appl_sci\",     fill.scale = tm_scale_intervals(values = \"carto.mint\", style = \"quantile\", n = 9),     fill.legend = tm_legend(reverse = TRUE))"},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapview.html","id":"mapview","dir":"Articles","previous_headings":"","what":"Mapview","title":"tmap versus: mapview","text":"Mapview excellent R package interactive maps. Although packages lot common, focus different: tmap focusses thematic mapping syntax based grammar graphics therefore popular education purposes; mapview focuses fast exploration spatial data interactive features.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapview.html","id":"modes-platforms","dir":"Articles","previous_headings":"","what":"Modes / platforms","title":"tmap versus: mapview","text":"tmap offers two modes: “plot” “view” (extendable, see https://github.com/r-tmap/tmap.deckgl). mapview supports three modes, call platforms: “leaflet”, “leafgl”, “mapdeck”. tmap “view” (tm_view(use_WebGL = FALSE)) similar mapview “leaflet” tmap “view” (tm_view(use_WebGL = TRUE)) similar mapview “leafgl” tmap offer mode using Mapbox yet.","code":""},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapview.html","id":"default-maps","dir":"Articles","previous_headings":"","what":"Default maps","title":"tmap versus: mapview","text":"default output mapview: default output tmap:","code":"library(mapview) mapview(World) tmap_mode(\"view\") #> ℹ tmap mode set to \"view\". qtm(World) # qtm stands for 'quick thematic map'"},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapview.html","id":"choropleth","dir":"Articles","previous_headings":"","what":"Choropleth","title":"tmap versus: mapview","text":"","code":"mapview(World, zcol = \"HPI\") tm_shape(World) +   tm_polygons(fill = \"HPI\")"},{"path":"https://r-tmap.github.io/tmap/articles/versus_mapview.html","id":"mimicking-mapview-layout","dir":"Articles","previous_headings":"","what":"Mimicking mapview layout","title":"tmap versus: mapview","text":"can use tmap match style mapview:","code":"tm_shape(World) +   tm_polygons(     fill = \"HPI\",     fill_alpha = 0.6,     col_alpha = 0.9,     fill.legend = tm_legend(       title = \"World - HPI\",       position = c(\"right\", \"top\"),        fill_alpha = 1),     fill.scale = tm_scale_continuous(values = \"viridis\", n = 7, value.na = \"#BEBEBE\")   ) +  tm_basemap(c(\"CartoDB.Positron\", \"CartoDB.DarkMatter\",    \"OpenStreetMap\", \"Esri.WorldImagery\", \"OpenTopoMap\"))"},{"path":"https://r-tmap.github.io/tmap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martijn Tennekes. Author, maintainer. Jakub Nowosad. Contributor. Joel Gombin. Contributor. Sebastian Jeworutzki. Contributor. Kent Russell. Contributor. Richard Zijdeman. Contributor. John Clouse. Contributor. Robin Lovelace. Contributor. Jannes Muenchow. Contributor. Olivier Roy. Contributor. Edzer Pebesma. Contributor. Hugh Graham. Contributor. Michael D. Sumner. Contributor. Tim Appelhans. Contributor. Nick Bearman. Contributor.","code":""},{"path":"https://r-tmap.github.io/tmap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tennekes M (2018). “tmap: Thematic Maps R.” Journal Statistical Software, 84(6), 1–39. doi:10.18637/jss.v084.i06.","code":"@Article{,   title = {{tmap}: Thematic Maps in {R}},   author = {Martijn Tennekes},   journal = {Journal of Statistical Software},   year = {2018},   volume = {84},   number = {6},   pages = {1--39},   doi = {10.18637/jss.v084.i06}, }"},{"path":"https://r-tmap.github.io/tmap/index.html","id":"tmap-thematic-maps-in-r-","dir":"","previous_headings":"","what":"Thematic Maps","title":"Thematic Maps","text":"tmap R package drawing thematic maps. API based Layered Grammar Graphics resembles syntax ggplot2, popular R-library drawing charts.","code":""},{"path":"https://r-tmap.github.io/tmap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Thematic Maps","text":"Installation tmap (version 4) straightforward: old version tmap (version 3) available CRAN archive, recommend moving new version 4.","code":"install.packages(\"tmap\")"},{"path":"https://r-tmap.github.io/tmap/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Thematic Maps","text":"development version can installed GitHub repository using remotes pak packages R-universe repository. Linux macOS users new working spatial data R, may fail since additional (non-R) libraries required (automatically installed Windows users). Windows additional installation required. Linux (Ubuntu) See https://geocompx.org/post/2020/installing-r-spatial-packages-linux/. Please address installation issues issue. macOS See https://www.kyngchaos.com/. Please address installation issues issue.","code":"# install.packages(\"remotes\") remotes::install_github(\"r-tmap/tmap\")  # install.packages(\"pak\") pak::pak(\"r-tmap/tmap\")  # Or from r-universe install.packages(\"tmap\", repos = c(\"https://r-tmap.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://r-tmap.github.io/tmap/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Thematic Maps","text":"Plot World map happy planet index (HPI) per country. object World example spatial data (sf) object contained tmap:  map can enhanced several ways. instance:","code":"tm_shape(World) +     tm_polygons(fill = \"HPI\") tm_shape(World, crs = \"+proj=robin\") +     tm_polygons(fill = \"HPI\",                 fill.scale = tm_scale_continuous(values = \"matplotlib.rd_yl_bu\"),                 fill.legend = tm_legend(title = \"Happy Planet Index\",                                         orientation = \"landscape\",                                          frame = FALSE)                 )"},{"path":"https://r-tmap.github.io/tmap/index.html","id":"additional-resources-for-learning-tmap","dir":"","previous_headings":"","what":"Additional Resources for Learning tmap","title":"Thematic Maps","text":"-depth learning tmap package, refer following resources: Book Chapter: Geocomputation R includes chapter Making Maps R, covers tmap. Official Vignettes: collection vignettes r-tmap.github.io covers basic advanced topics examples. Work--Progress Book: Elegant Informative Maps tmap upcoming book available tmap.geocompx.org. resources provide solid foundation working tmap R.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":null,"dir":"Reference","previous_headings":"","what":"Netherlands datasets — NLD_prov","title":"Netherlands datasets — NLD_prov","text":"Datasets Netherlands 2022 three levels: NLD_prov (12) provinces, NLD_muni (345) municipalities NLD_dist (3340) districts , class sf","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Netherlands datasets — NLD_prov","text":"","code":"NLD_prov  NLD_muni  NLD_dist"},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Netherlands datasets — NLD_prov","text":"https://www.cbs.nl/nl-nl/maatwerk/2024/11/kerncijfers-wijken-en-buurten-2022","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Netherlands datasets — NLD_prov","text":"data variables NLD_muni NLD_dist identical: See source detailed information variables. dataset, created Noveber 2024, update datasets NLD_muni NLD_prov used tmap <= 3, created around 2016. Note number municipalities reduced (due mergings). old variables included, except variables related ethnicity. Many new variable added, moreover, district (Dutch: wijk) level data added: NLD_dist. CRS (coordinate reference system) used Rijksdriekhoekstelsel New, EPSG 28992. Coordinates rounded meters reduce file size.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Netherlands datasets — NLD_prov","text":"Statistics Netherlands (2024), Hague/Heerlen, Netherlands, https://www.cbs.nl/.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":null,"dir":"Reference","previous_headings":"","what":"World dataset — World","title":"World dataset — World","text":"World dataset, class sf","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World dataset — World","text":"","code":"World"},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World dataset — World","text":"NED: Natural Earth Data https://www.naturalearthdata.com/ HPI: Happy Planet Index https://happyplanetindex.org/ UNDP: Human Development Report (2024) https://hdr.undp.org/content/human-development-report-2023-24 WB: World Bank https://data.worldbank.org OWiD: World Data https://ourworldindata.org RSF: Reporters Without Borders https://rsf.org/en/index","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"World dataset — World","text":"See sources detailed information variables. dataset, created Noveber 2024, update old version, created around 2016. variables old version included, updated. Furthermore, gender ineuqlity press freedom added. ISO country-code: two countries user-assigned codes, namely: XKX used Kosovo (conform European Union World Bank) (UNK old version); XNC used Northern Cyprus (CYN old version). variables data available multiple years, availability different across countries. cases, recent values taken.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World_rivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial data of rivers — World_rivers","title":"Spatial data of rivers — World_rivers","text":"Spatial data rivers","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World_rivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial data of rivers — World_rivers","text":"","code":"World_rivers"},{"path":"https://r-tmap.github.io/tmap/reference/World_rivers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial data of rivers — World_rivers","text":"object class sf (inherits data.frame) 1632 rows 5 columns.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World_rivers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial data of rivers — World_rivers","text":"https://www.naturalearthdata.com","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World_rivers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Spatial data of rivers — World_rivers","text":"tmap <= 3, dataset called rivers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_fact_levels_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","title":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","text":"Internal tmap function gets factor levels NA's","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_fact_levels_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","text":"","code":"get_fact_levels_na(x, o)"},{"path":"https://r-tmap.github.io/tmap/reference/get_fact_levels_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","text":"x vector o options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_scale_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function get scale values — get_scale_defaults","title":"Internal tmap function get scale values — get_scale_defaults","text":"Internal tmap function get scale values","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_scale_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function get scale values — get_scale_defaults","text":"","code":"get_scale_defaults(scale, o, aes, layer, cls, ct = NULL)"},{"path":"https://r-tmap.github.io/tmap/reference/get_scale_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function get scale values — get_scale_defaults","text":"scale scale o o aes aes layer layer cls cls ct ct","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial data of global land cover — land","title":"Spatial data of global land cover — land","text":"Spatial data global land cover, percent tree cover, elevation class stars. Two attributes object relates global land cover. cover layer classifies status land cover whole globe 20 categories, cover_cls layer uses 8 simplified categories. Percent Tree Cover (trees) represents density trees ground, last attribute represents elevation.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial data of global land cover — land","text":"","code":"land"},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial data of global land cover — land","text":"object class stars 1080 rows 540 columns.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial data of global land cover — land","text":"Important: publication maps allowed cited Tateishi et al. (2014), \"Geospatial Information Authority Japan, Chiba University collaborating organizations.\" shown.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial data of global land cover — land","text":"Production Global Land Cover Data - GLCNMO2008, Tateishi, R., Thanh Hoan, N., Kobayashi, T., Alsaaideh, B., Tana, G., Xuan Phong, D. (2014), Journal Geography Geology, 6 (3).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/make_by_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function to create by variables (used for faceting) — make_by_vars","title":"Internal tmap function to create by variables (used for faceting) — make_by_vars","text":"Internal tmap function create variables (used faceting)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/make_by_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function to create by variables (used for faceting) — make_by_vars","text":"","code":"make_by_vars(dt, tmf, smeta)"},{"path":"https://r-tmap.github.io/tmap/reference/make_by_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function to create by variables (used for faceting) — make_by_vars","text":"dt data.table tmf tmf object smeta smeta object","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial data of metropolitan areas — metro","title":"Spatial data of metropolitan areas — metro","text":"metro includes population time series 1950 (forecasted) 2030. metro areas 1 million inhabitants 2010 included.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial data of metropolitan areas — metro","text":"","code":"metro"},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial data of metropolitan areas — metro","text":"object class sf (inherits data.frame) 436 rows 13 columns.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial data of metropolitan areas — metro","text":"https://population.un.org/wup/","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial data of metropolitan areas — metro","text":"United Nations, Department Economic Social Affairs, Population Division (2014). World Urbanization Prospects: 2014 Revision, CD-ROM Edition.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tm_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Print tm_element — print.tm_element","title":"Print tm_element — print.tm_element","text":"Print tm_element","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tm_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print tm_element — print.tm_element","text":"","code":"# S3 method for class 'tm_element' print(x, ...)  # S3 method for class 'tm_shape' print(x, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/print.tm_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print tm_element — print.tm_element","text":"x x ... passed ","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw thematic map — print.tmap","title":"Draw thematic map — print.tmap","text":"Draw thematic map","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw thematic map — print.tmap","text":"","code":"# S3 method for class 'tmap' print(   x,   return.asp = FALSE,   show = TRUE,   vp = NULL,   knit = FALSE,   options = NULL,   in.shiny = FALSE,   proxy = FALSE,   ... )  # S3 method for class 'tmap' knit_print(x, ..., options = NULL)"},{"path":"https://r-tmap.github.io/tmap/reference/print.tmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw thematic map — print.tmap","text":"x tmap object. return.asp aspect ratio returned? show show map vp viewport (\"plot\" mode) knit logical, knit? options vector options .shiny logical, map drawn shiny? proxy logical, .shiny, tmapProxy() used? ... passed internally (developers: \"view\" mode, proxy leaflet object passed tmapLeafletInit).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick thematic map plot — qtm","title":"Quick thematic map plot — qtm","text":"Draw thematic map quickly. function convenient wrapper main plotting method stacking tmap-elements. Without arguments search term, functions draws interactive map.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick thematic map plot — qtm","text":"","code":"qtm(   shp = NULL,   fill = tm_const(),   col = tm_const(),   size = tm_const(),   shape = tm_const(),   lwd = tm_const(),   lty = tm_const(),   fill_alpha = tm_const(),   col_alpha = tm_const(),   text = tm_const(),   text_col = tm_const(),   text_size = tm_const(),   by = NULL,   scale = NULL,   title = NULL,   crs = NULL,   bbox = NULL,   basemaps = NA,   overlays = NA,   zindex = NA,   group = NA,   group.control = \"check\",   style = NULL,   format = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick thematic map plot — qtm","text":"shp One : shape object, object class defined sf stars package. Objects packages sp raster also supported, discouraged. specified, .e. qtm() executed. case plain interactive map shown. OpenStreetMap search string, e.g. qtm(\"Amsterdam\"). case plain interactive map shown positioned according results search query (OpenStreetMap nominatim) fill, col, size, shape, lwd, lty, fill_alpha, col_alpha Visual variables. text, text_col, text_size Visual variables. data variable name data split, vector two variable names split data two variables (first used rows second columns). See also tm_facets(). scale numeric value serves global scale parameter. font sizes, symbol sizes, border widths, line widths controlled value. parameters symbols.size, text.size, lines.lwd can scaled separately respectively symbols.scale, text.scale, lines.scale. See also .... title main title. legend titles, use X.legend, X layer name (see ...). crs Either crs object character value (PROJ.4 character string). default, projection used defined shp object . bbox bounding box. Argument passed tm_shape() basemaps name(s) provider URL tiled basemap. shortcut tm_basemap(). Set NULL disable basemaps. default, set tmap option basemaps. overlays name(s) provider URL tiled overlay map. shortcut tm_tiles(). zindex zindex group group group.control group.control style Layout options (see tm_layout()) define style. See tmap_style() details. format Deprecated, see tm_format() alternatives ... arguments associated visual variables passed layer functions tm_polygons(), tm_lines(), tm_symbols(), tm_text(). instance, fill.scale scale specifications fill color polygons (see tm_polygons()).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick thematic map plot — qtm","text":"tmap-element","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quick thematic map plot — qtm","text":"first argument shape object (normally specified tm_shape()). next arguments, fill raster, aesthetics main layers. remaining arguments related map layout. argument main layer function, tm_polygons(), can specified (see ...). also possible stack tmap-elements qtm plot. See examples. default, scale bar shown. option can set tmap_options() (argument qtm.scalebar). minimap shown default qtm called without arguments search term. option can set tmap_options() (argument qtm.minimap).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quick thematic map plot — qtm","text":"Tennekes, M., 2018, tmap: Thematic Maps R, Journal Statistical Software, 84(6), 1-39, doi:10.18637/jss.v084.i06","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick thematic map plot — qtm","text":"","code":"data(World, World_rivers, metro)  # just the map qtm(World) #> [tip] Consider a suitable map projection, e.g. by adding `+ tm_crs(\"auto\")`. #> This message is displayed once per session.   # choropleth qtm(World, fill = \"economy\", style = \"cobalt\", crs = \"+proj=eck4\")   qtm(World, col = NULL) + qtm(metro, size = \"pop2010\",   size.legend = tm_legend(\"Metropolitan Areas\"))   # dot map if (FALSE) { # \\dontrun{ current.mode <- tmap_mode(\"view\") qtm(metro, bbox = \"China\") tmap_mode(current.mode) # restore mode } # }  if (FALSE) { # \\dontrun{ # without arguments, a plain interactive map is shown (the mode is set to view) qtm()  # search query for OpenStreetMap nominatim qtm(\"Amsterdam\") } # }"},{"path":"https://r-tmap.github.io/tmap/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. leaflet providers","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper functions for using tmap in shiny — renderTmap","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"tmapOutput() creates UI element renderTmap() renders tmap map tmapProxy() updates tmap map view mode Adding layers usual via map layer functions like tm_polygons(). Removing layers can done, removing tm_remove_layer().","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"","code":"renderTmap(   expr,   env = parent.frame(),   quoted = FALSE,   execOnResize = TRUE,   mode = NA )  tmapOutput(outputId, width = \"100%\", height = 400, mode = NA)  tmapProxy(mapId, session = shiny::getDefaultReactiveDomain(), x, mode = NA)  tm_remove_layer(zindex)"},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"expr tmap object. tmap object created qtm() stacking tmap-elements. env environment evaluate expr quoted expr quoted expression (quote())? useful want save expression variable execOnResize TRUE (default), plot resized, map regenerated. set FALSE map rescaled: aspect ratio kept, layout less desirable. mode tmap mode, see tmap_mode() defined, current mode used outputId Output variable read width, height width height map mapId single-element character vector indicating output ID map modify (invoked Shiny module, namespace added automatically) session Shiny session object map belongs; usually default value suffice x tmap object specifies added removed layers. zindex z index pane layer contained going removed. recommended specify zindex layer creating map (inside renderTmap()).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"Two features tmap (yet) supported Shiny: small multiples (facets) colored backgrounds (argument bg.color tm_layout()). Workarounds small multiples: create multiple independent maps specify .layers = TRUE tm_facets().","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"","code":"if (interactive() && require(\"shiny\")) {    data(World)   world_vars <- setdiff(names(World), c(\"iso_a3\", \"name\", \"sovereignt\", \"geometry\"))    current.mode <- tmap_mode(\"plot\")    shinyApp(     ui = fluidPage(       tmapOutput(\"map\", height = \"600px\"),       selectInput(\"var\", \"Variable\", world_vars)     ),     server <- function(input, output, session) {       output$map <- renderTmap({         tm_shape(World) +           tm_polygons(input$var, zindex = 401)       })     }   )    tmap_mode(\"view\")    shinyApp(     ui = fluidPage(       tmapOutput(\"map\", height = \"600px\"),       selectInput(\"var\", \"Variable\", world_vars)     ),     server <- function(input, output, session) {       output$map <- renderTmap({         tm_shape(World, id = \"iso_a3\") +           tm_polygons(fill = world_vars[1], zindex = 401)       })       observe({         var <- input$var         tmapProxy(\"map\", session, {           tm_remove_layer(401) +             tm_shape(World, id = \"iso_a3\") +             tm_polygons(fill = var, zindex = 401)         })       })     },options = list(launch.browser=TRUE)   )    tmap_mode(current.mode) }"},{"path":"https://r-tmap.github.io/tmap/reference/shapeTM.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function to create a tmap shape — shapeTM","title":"Internal tmap function to create a tmap shape — shapeTM","text":"Internal tmap function create tmap shape","code":""},{"path":"https://r-tmap.github.io/tmap/reference/shapeTM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function to create a tmap shape — shapeTM","text":"","code":"shapeTM(shp, tmapID = NULL, bbox = NULL, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/shapeTM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function to create a tmap shape — shapeTM","text":"shp Shape file tmapID tmap Identifier bbox bounding box","code":""},{"path":"https://r-tmap.github.io/tmap/reference/theme_ps.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 theme for proportional symbols — theme_ps","title":"ggplot2 theme for proportional symbols — theme_ps","text":"ggplot2 theme proportional symbols. default, theme shows plotting area, without titles, axes, legend.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/theme_ps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 theme for proportional symbols — theme_ps","text":"","code":"theme_ps(   base_size = 12,   base_family = \"\",   plot.axes = FALSE,   plot.legend = FALSE )"},{"path":"https://r-tmap.github.io/tmap/reference/theme_ps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 theme for proportional symbols — theme_ps","text":"base_size base size base_family base family plot.axes axes shown? plot.legend legend(s) shown?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_add_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: manual legend — tm_add_legend","title":"Map component: manual legend — tm_add_legend","text":"Map component adds manual legend.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_add_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: manual legend — tm_add_legend","text":"","code":"tm_add_legend(   ...,   labels = \"\",   type = \"symbols\",   title = \"\",   design = NULL,   orientation = NULL,   position = NULL,   group_id = NA_character_,   group = NA,   group.control = \"check\",   z = NA_integer_ )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_add_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: manual legend — tm_add_legend","text":"... visual variables arguments passed tm_legend(). default, argument type set \"symbols\", means supported visual variables : \"fill\", \"col\", \"shape\", \"size\", \"fill_alpha\", \"col_alpha\", \"lty\", \"lwd\", \"linejoin\", \"lineend\". number legend items equal maximum number specific values (specified labels.) labels labels default \"\" (omitted) type layer type visual variables (see ...) taken. Options: \"symbols\" (default), \"lines\", \"polygons\", \"text\". title title legend. design design legend. orientation orientation legend. position position legend. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). z z index, e.g. place component relative componets","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_add_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map component: manual legend — tm_add_legend","text":"","code":"if (FALSE) { # \\dontrun{ tm_shape(NLD_muni) +   tm_borders() +   tm_basemap(\"OpenStreetMap\") +   tm_add_legend(labels = c(\"Motorway\", \"Primary road\", \"Secondary road\", \"Railway\"),           col = c(\"#E892A1\", \"#FCD6A4\", \"#F8FABF\", \"#707070\"),           lty = c(\"solid\", \"solid\", \"solid\", \"dotted\"),           lwd = 3,           type = \"lines\",           bg.color = \"grey92\",           bg.alpha = 1) } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_animate.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify an animation (experimental) — tm_animate","title":"Specify an animation (experimental) — tm_animate","text":"tm_animate","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_animate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify an animation (experimental) — tm_animate","text":"","code":"tm_animate(   by = \"VARS__\",   nframes = 60L,   fps = 20L,   play = c(\"loop\", \"pingpong\", \"once\"),   dpr = 2,   ... )  tm_animate_slow(   by = \"VARS__\",   nframes = 60L,   fps = 2L,   play = c(\"loop\", \"pingpong\", \"once\"),   dpr = 2,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_animate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify an animation (experimental) — tm_animate","text":"group variable used create animation frames. Note: called pages core function tm_facets(). nframes number animation frames. app fps frames per second. Default: 30 tm_facets_animate 2 tm_facets_animate_slow. play animation played? One \"loop\", \"pingpong\", \"\" dpr device pixel ratio. ratio physical pixel density device logical pixel density. ... passed tm_facets()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: basemap / overlay tiles — tm_basemap","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"Map layer draws tiles tile server. tm_basemap() draws tile layer basemap, .e. bottom layer. contrast, tm_tiles() draws tile layer overlay layer, stacking order corresponds order layer called, just like map layers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"","code":"tm_basemap(   server = NA,   alpha = NULL,   zoom = NULL,   api = NULL,   max.native.zoom = 17,   zindex = 0,   group = NA,   group.control = \"radio\" )  tm_tiles(   server = NA,   alpha = NULL,   zoom = NULL,   max.native.zoom = 17,   zindex = NA,   group = NA,   group.control = \"check\" )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"server Name provider URL. list available providers can obtained providers (tip: RStudio, type leaflet::providers$ see options). See https://leaflet-extras.github.io/leaflet-providers/preview/ preview . URL provided, template format, e.g. \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\". Use NULL tm_basemap() disable basemaps. alpha Transparency level zoom Zoom level (used plot mode) api API key. Needed Stadia Thunderforest maps plot mode. See details max.native.zoom Maximum native zoom level (used view mode). minimum maximum zoom levels determined tm_view(). zindex zindex pane view mode. default, set layer number plus 400. default, tmap layers therefore placed custom panes \"tmap401\", \"tmap402\", etc., except base tile layers, placed standard \"tile\". parameter determines name pane z-index, determines pane order bottom top. instance, zindex set 500, pane named \"tmap500\". group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"API keys. Stadia Thunderforest maps, API key required. can set via argument api. Alternatively can stored environment variables \"STADIA_MAPS\" THUNDERFOREST_MAPS Sys.setenv","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"","code":"if (FALSE) { # \\dontrun{ if (requireNamespace(\"maptiles\")) {   # view mode   current_mode = tmap_mode(\"view\")   tm_basemap(\"Stadia.StamenWatercolor\") +     tm_shape(World) +     tm_polygons(       \"HPI\",       fill.scale = tm_scale(values = \"reds\"),       fill_alpha.scale = 0.5)    tm_shape(World, crs = \"+proj=eqearth\") +     tm_polygons(       \"HPI\",       fill.scale = tm_scale(values = \"reds\"),       fill_alpha.scale = 0.5) +   tm_basemap(NULL)    # plot mode:   tmap_mode(\"plot\")   tm_basemap() +     tm_shape(World) +     tm_polygons(\"HPI\")    tm_basemap(\"OpenTopoMap\") +     tm_shape(World) +     tm_polygons(fill = NA, col = \"black\")    tm_basemap(\"CartoDB.PositronNoLabels\") +   tm_shape(NLD_prov, crs = 4236) +     tm_borders() +     tm_facets_wrap(\"name\") +     tm_tiles(\"CartoDB.PositronOnlyLabels\")    # restore mode   tmap_mode(current_mode) } } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend charts — tm_chart","title":"Legend charts — tm_chart","text":"Legend charts small charts added map, usually addition legends.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend charts — tm_chart","text":"","code":"tm_chart_histogram(   breaks,   plot.axis.x,   plot.axis.y,   extra.ggplot2,   position,   group_id,   width,   height,   stack,   z,   ... )  tm_chart_bar(   plot.axis.x,   plot.axis.y,   extra.ggplot2,   position,   group_id,   width,   height,   stack,   z,   ... )  tm_chart_donut(position, group_id, width, height, stack, z, ...)  tm_chart_violin(position, group_id, width, height, stack, z, ...)  tm_chart_box(position, group_id, width, height, stack, z, ...)  tm_chart_none()  tm_chart_heatmap(position, group_id, width, height, stack, z, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend charts — tm_chart","text":"breaks breaks bins (histograms) plot.axis.x, plot.axis.y x axis y axis plot? extra.ggplot2 Extra ggplot2 code position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. width, height width height component. stack stack map components, either \"vertical\" \"horizontal\". z z index, e.g. place component relative componets ... passed tm_title()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Legend charts — tm_chart","text":"Note charts different charts drawn inside map. called glyphs (implemented).","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legend charts — tm_chart","text":"","code":"tm_shape(World) +   tm_polygons(\"HPI\",     fill.scale = tm_scale_intervals(),     fill.chart = tm_chart_histogram())"},{"path":"https://r-tmap.github.io/tmap/reference/tm_comp_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Group components — tm_comp_group","title":"Group components — tm_comp_group","text":"Group components","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_comp_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group components — tm_comp_group","text":"","code":"tm_comp_group(   group_id,   position,   stack,   frame_combine,   equalize,   resize_as_group,   stack_margin,   offset,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   bg,   bg.color,   bg.alpha )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_comp_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group components — tm_comp_group","text":"group_id id component group. Refers group_id argument component function, tm_legend() tm_title(). position position specification components group: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. stack stacking \"horizontal\" \"vertical\" frame_combine put frame around components drawn location. Whether frame drawn still decided frame argument  'main' (first) component. equalize case frame_combine FALSE, separate frames equalized, .e. width (stacked vertically) height (stacked horizontally)? resize_as_group case component rescaled limited space, rescale components proportionally? stack_margin Margin components offset Offset margin frame components block frame frame drawn? default TRUE legends, charts insets, FALSE otherwise. frame.color frame color frame.alpha frame alpha transparancy frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. bg Background color components block. usually set component function, specified , overwrite . bg.color Background color components block. usually set component function, specified , overwrite . bg.alpha Background alpha transparency components block. usually set component function, specified , overwrite .","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_comp_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group components — tm_comp_group","text":"tmap-element","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_compass.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: compass — tm_compass","title":"Map component: compass — tm_compass","text":"Map component adds compass","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_compass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: compass — tm_compass","text":"","code":"tm_compass(   north,   type,   text.size,   size,   show.labels,   cardinal.directions,   text.color,   color.dark,   color.light,   lwd,   position,   group_id,   bg,   bg.color,   bg.alpha,   stack,   just,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   margins,   z,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_compass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: compass — tm_compass","text":"north north type compass type, one : \"arrow\", \"4star\", \"8star\", \"radar\", \"rose\". default controlled tm_layout (uses \"arrow\" default style) text.size text.size size size show.labels show.labels cardinal.directions cardinal.directions text.color text.color color.dark color.dark color.light color.light lwd lwd position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. bg Show background? bg.color Background color bg.alpha Background transparency stack stack map components, either \"vertical\" \"horizontal\". just just frame frame frame drawn? frame.color frame color frame.alpha frame alpha transparancy frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. margins margins z z index, e.g. place component relative componets ... catch deprecated arguments (alpha)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_const.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap function to define a constant visual value — tm_const","title":"tmap function to define a constant visual value — tm_const","text":"tmap function define constant visual value","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_const.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap function to define a constant visual value — tm_const","text":"","code":"tm_const()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_credits.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: (credits) text — tm_credits","title":"Map component: (credits) text — tm_credits","text":"Map component adds text, typically used credits. function tm_title() different default values.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_credits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: (credits) text — tm_credits","text":"","code":"tm_credits(   text,   size,   color,   padding,   fontface,   fontfamily,   alpha,   stack,   just,   frame,   frame.lwd,   frame.r,   bg,   bg.color,   bg.alpha,   position,   group_id,   width,   height,   z,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_credits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: (credits) text — tm_credits","text":"text text size font size color font color padding padding fontface font face, bold, italic fontfamily font family alpha alpha transparency text stack stack map components, either \"vertical\" \"horizontal\". just just frame frame frame drawn? frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. bg Show background? bg.color Background color bg.alpha Background transparency position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. width, height width height component. z z index, e.g. place component relative componets ... catch deprecated arguments","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the map projection (CRS) — tm_crs","title":"Set the map projection (CRS) — tm_crs","text":"function sets map projection. can also set via tm_shape(), tm_crs generally recommended cases. can also determined automatically (see details); however, still work--progress.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the map projection (CRS) — tm_crs","text":"","code":"tm_crs(crs = NA, property = NA)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the map projection (CRS) — tm_crs","text":"crs Map projection (CRS). Can set crs object (see sf::st_crs()), proj4string, EPSG number, value \"auto\" (automatic crs recommendation), one following generic projections: c(\"laea\", \"aeqd\", \"utm\", \"pconic\", \"eqdc\", \"stere\"). See details. property property projection ? One : \"global\", \"area\" (equal-area), \"distance\" (equidistant), \"shape\" (conformal). applicable crs = \"auto\". See details.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the map projection (CRS) — tm_crs","text":"map projection (crs) determines coordinate system spatial object processed plotted. See vignette CRS. crs can specified two places: 1) tm_shape() tm_crs(). cases, map plotted specified crs. difference first option, crs also taken account spatial transformation functions, calculation centroids cartograms. second option, crs used plotting phase. automatic crs recommendation (still work--progress) following: info available \"generic\" projects see: utm: https://proj.org/en/9.4/operations/projections/utm.html laea: https://proj.org/en/9.4/operations/projections/laea.html aeqd: https://proj.org/en/9.4/operations/projections/aeqd.html pconic: https://proj.org/en/9.4/operations/projections/pconic.html eqdc: https://proj.org/en/9.4/operations/projections/eqdc.html","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_crs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set the map projection (CRS) — tm_crs","text":"Plans migrate functionality regarding generic crs automatic crs recommendation separate package.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the map projection (CRS) — tm_crs","text":"","code":"SA = World[World$continent == \"South America\", ]  # latlon coordinates (WGS84) tm_shape(SA) +   tm_polygons() +   tm_graticules() +   tm_crs(4326)   tm_list = lapply(c(\"global\", \"area\", \"distance\", \"shape\"), FUN = function(property) {   tm_shape(SA) +     tm_polygons() +     tm_graticules() +     tm_crs(property = property)  +   tm_title(property) })  tmap_arrange(tm_list, nrow = 1)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_extra_innner_margin.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap layout: helper functions — tm_place_legends_right","title":"tmap layout: helper functions — tm_place_legends_right","text":"tmap layout: helper functions","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_extra_innner_margin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap layout: helper functions — tm_place_legends_right","text":"","code":"tm_place_legends_right(width = NA)  tm_place_legends_left(width = NA)  tm_place_legends_bottom(height = NA)  tm_place_legends_top(height = NA)  tm_place_legends_inside(pos.h = NULL, pos.v = NULL)  tm_extra_inner_margin(left = 0, right = 0, top = 0, bottom = 0)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_extra_innner_margin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap layout: helper functions — tm_place_legends_right","text":"width width height height pos.h, pos.v position (horizontal vertical) left, right, top, bottom extra margins","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify facets — tm_facets","title":"Specify facets — tm_facets","text":"tm_facets_wrap() specify facets one grouping variable (one faceting dimension) tm_facets_(hv)stack() stacks facets either horizontally vertically (one grouping variable). tm_facets_grid() specify facets two grouping variables grid rows columns. tm_facets_pagewise() wrap, facets drawn different plots (pages). Replaces along argument version 3. tm_facets_flip() can used flip facets. tm_facets() core function, recommended use functions.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify facets — tm_facets","text":"","code":"tm_facets(   by = NULL,   rows = NULL,   columns = NULL,   pages = NULL,   as.layers = FALSE,   nrow = NA,   ncol = NA,   byrow = TRUE,   orientation = NA,   free.coords = NA,   drop.units = TRUE,   drop.empty.facets = TRUE,   drop.NA.facets = FALSE,   sync = TRUE,   na.text = NA,   scale.factor = 2,   type = NA,   free.scales = NULL,   ... )  tm_facets_grid(rows = NULL, columns = NULL, pages = NULL, ...)  tm_facets_wrap(by = \"VARS__\", nrow = NA, ncol = NA, byrow = TRUE, ...)  tm_facets_pagewise(by = \"VARS__\", byrow = TRUE, ...)  tm_facets_stack(by = \"VARS__\", orientation = NA, ...)  tm_facets_hstack(by = \"VARS__\", ...)  tm_facets_vstack(by = \"VARS__\", ...)  tm_facets_flip(...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify facets — tm_facets","text":"Group variable (facet wrap facet stack) rows Variable specifies rows (facet grid) columns Variable specifies columns (facet grid) pages Variable specifies pages (facet grid) .layers show facets layers? nrow Number rows ncol Number columns byrow facets wrapped row? orientation facet stack: horizontal vertical? free.coords Logical. argument specified, map coordinate ranges? default TRUE, unless facets shown different layers (.layers = TRUE) drop.units Logical. argument specified, non-selected spatial units dropped? FALSE, plotted mapped aesthetics regarded missing values. applicable raster shapes. default TRUE. drop.empty.facets Logical. argument specified, empty facets dropped? Empty facets occur -variable contains unused levels. TRUE two -variables specified, empty rows columns dropped. drop.NA.facets Logical. argument specified, data values specific facets missing, facets dropped? FALSE default. v3, called showNA. sync Logical. navigation view mode (zooming panning) synchronized? default TRUE facets bounding box. generally case rasters plotted, free.coords FALSE. na.text Text used facets missing values. v3, textNA. scale.factor Number determines elements (e.g. font sizes, symbol sizes, line widths) small multiples scaled relation scaling factor shapes. elements scaled scale.factorth root scaling factor shapes. , scale.factor = 1, scaled proportional scaling shapes. Since elements, especially text, often small read, higher value recommended. default, scale.factor = 2. type \"grid\", \"wrap\" \"stack\" free.scales deprecated. Please use .free arguments layer functions, e.g. fill.free tm_polygons. ... passed tm_facets()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify facets — tm_facets","text":"","code":"if (FALSE) { # \\dontrun{ tm_shape(NLD_dist) +   tm_polygons(\"edu_appl_sci\",     fill.scale = tm_scale_intervals(values = \"pu_gn\", style = \"kmeans\", n = 7)) +   tm_facets(by = \"province\") + tm_shape(NLD_muni) +   tm_borders(lwd = 3) +   tm_facets(by = \"province\") + tm_title(\"Population with a univeristy degree (incl appl. sciences), percentages\")  tm_shape(World) +   tm_polygons(c(\"gender\", \"press\"),     fill.scale = list(tm_scale_intervals(values = \"bu_br_div\", midpoint = 0.5),       tm_scale_intervals(values = \"pu_gn_div\", midpoint = 50)),     fill.legend = tm_legend(\"\")) + tm_layout(panel.labels = c(\"Gender Inequality Index (GII)\", \"World Press Freedom Index\")) } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate grid / graticule lines — tm_graticules","title":"Coordinate grid / graticule lines — tm_graticules","text":"Draws horizontal vertical lines according coordinate reference system (CRS). tm_grid() uses CRS (master) shape object, tm_graticules() uses latitude longitude coordinates (EPSG 4326). creates tmap-element draws coordinate grid lines. serves layer can drawn anywhere layers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate grid / graticule lines — tm_graticules","text":"","code":"tm_graticules(   x = NA,   y = NA,   n.x = NA,   n.y = NA,   crs = 4326,   labels.format = list(suffix = intToUtf8(176)),   labels.cardinal = TRUE,   ... )  tm_grid(   x = NA,   y = NA,   n.x = NA,   n.y = NA,   crs = NA,   col = NA,   lwd = 1,   alpha = NA,   labels.show = TRUE,   labels.pos = c(\"left\", \"bottom\"),   labels.size = 0.6,   labels.col = NA,   labels.rot = c(0, 0),   labels.format = list(big.mark = \",\"),   labels.cardinal = FALSE,   labels.margin.x = 0,   labels.margin.y = 0,   labels.space.x = NA,   labels.space.y = NA,   labels.inside_frame = FALSE,   ticks = labels.show & !labels.inside_frame,   lines = TRUE,   ndiscr = 100,   zindex = NA,   group = NA,   group.control = \"none\",   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate grid / graticule lines — tm_graticules","text":"x X coordinates vertical grid lines. NA, specified pretty scale n.x. y Y coordinates horizontal grid lines. NA, specified pretty scale n.y. n.x Preferred number grid lines x axis. labels, pretty() sequence used, number actual labels may different n.x. n.y Preferred number grid lines y axis. labels, pretty() sequence used, number actual labels may different n.y. crs Projection character. specified, grid lines projected accordingly. Many world maps projected, still latitude longitude (EPSG 4326) grid lines. labels.format List formatting options grid labels. Parameters : fun Function specify labels. take numeric vector, return character vector size. default specified. specified, list items scientific, format, digits (see ) used. scientific labels formatted scientifically? , square brackets used, format numbers \"g\". Otherwise, format=\"f\", text.separator, text.less., text..used. Also, numbers automatically rounded millions billions applicable. format default, \"f\", .e. standard notation xxx.xxx, used. scientific=TRUE \"g\", means numbers formatted scientifically, .e. n.dddE+nn needed save space. digits Number digits decimal point format=\"f\", number significant digits otherwise. ... arguments passed formatC() labels.cardinal Add four cardinal directions (N, E, S, W) labels, instead using negative coordinates west south (assumes coordinates positive north-east direction). ... Used catch deprecated arguments tmap v3. col Color grid lines. lwd Line width grid lines alpha Alpha transparency grid lines. Number 0 1. default, alpha transparency col taken. labels.show Show tick labels. Either one value x y axis, vector two: first x latter y. labels.pos position labels. Vector two: horizontal (\"left\" \"right\") vertical (\"top\" \"bottom\") position. labels.size Font size tick labels labels.col Font color tick labels labels.rot Rotation angles labels. Vector two values: first rotation angle (degrees) tick labels x axis second rotation angle tick labels y axis. 0, 90, 180, 270 valid values. labels.margin.x Margin tick labels x axis frame. Note labels.inside_frame = FALSE ticks = TRUE, ticks adjusted accordingly. labels.margin.y Margin tick labels y axis frame. Note labels.inside_frame = FALSE ticks = TRUE, ticks adjusted accordingly. labels.space.x Space used labels ticks x-axis labels.inside_frame = FALSE. default, determined automatically using widths heights tick labels. unit parameter text line height. labels.space.y Space used labels ticks y-axis labels.inside_frame = FALSE. default, determined automatically using widths heights tick labels. unit parameter text line height. labels.inside_frame Show labels inside frame? default FALSE. ticks labels.inside_frame = FALSE, ticks can drawn labels frame? Either one value x y axis, vector two: first x latter y. lines labels.inside_frame = FALSE, grid lines can drawn? ndiscr Number points discretize parallel meridian (applicable curved grid lines) zindex zindex pane view mode. default, set layer number plus 400. default, tmap layers therefore placed custom panes \"tmap401\", \"tmap402\", etc., except base tile layers, placed standard \"tile\". parameter determines name pane z-index, determines pane order bottom top. instance, zindex set 500, pane named \"tmap500\". group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate grid / graticule lines — tm_graticules","text":"","code":"if (FALSE) { # \\dontrun{ current.mode <- tmap_mode(\"plot\")  tm_shape(NLD_muni) +   tm_polygons() +   tm_grid()  tm_shape(NLD_muni) +   tm_polygons() +   tm_grid(crs = 4326)  tm_shape(NLD_muni) +   tm_polygons() +   tm_grid(crs = 3035, labels.inside.frame = TRUE)  tm_shape(World) +   tm_polygons() +   tm_facets(by = \"continent\") +   tm_grid(labels.inside.frame = TRUE)  tm_shape(NLD_muni) +   tm_polygons() +   tm_graticules()  tm_shape(NLD_muni) +   tm_polygons() +   tm_graticules(labels.pos = c(\"right\", \"top\"))   data(NLD_muni, World)  tmap_arrange(   qtm(NLD_muni) + tm_grid(),   qtm(NLD_muni) + tm_graticules() )  qtm(World, shape.crs = \"+proj=robin\", style = \"natural\") +   tm_graticules(ticks = FALSE) +   tm_layout(frame=FALSE)  tmap_mode(current.mode) } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer group control — tm_group","title":"Layer group control — tm_group","text":"Controls layer groups interactive maps (view mode): layer control box (radio buttons check boxes) zoom levels layers displayed .","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer group control — tm_group","text":"","code":"tm_group(name, control = NA, zoom_levels = NA)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer group control — tm_group","text":"name group name corresponds group name specified layer functions (e.g.  tm_polygons()) control group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). zoom_levels zoom levels group displays . specified control set \"none\".","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: inset maps and other objects — tm_inset","title":"Map component: inset maps and other objects — tm_inset","text":"Map component adds inset object, e.g. mini map","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: inset maps and other objects — tm_inset","text":"","code":"tm_inset(   x = NULL,   height,   width,   margins,   between_margin,   position,   group_id,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   z )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: inset maps and other objects — tm_inset","text":"x object draw. Can : bounding box, tmap object, ggplot2 object, grob object, image file name. height height component number text line heights. width width component number text line heights. margins margins between_margin Margin position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. frame frame frame drawn? frame.color frame color frame.alpha frame alpha transparancy frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. z z index, e.g. place component relative componets","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_inset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map component: inset maps and other objects — tm_inset","text":"","code":"## map bb = tmaptools::bb(NLD_prov[NLD_prov$name == \"Utrecht\",], ext = 1.05)  bb_Randstad =   sf::st_bbox(c(xmin = 120000, xmax = 150000, ymin = 460000, ymax = 500000), crs = 28992)  tm_shape(NLD_dist) +   tm_polygons(     fill = \"dwelling_value\",     fill.scale = tm_scale_continuous_pseudo_log(values = \"-cols4all.pu_gn_div\"),     col = NULL) + tm_shape(NLD_muni) +   tm_borders(col = \"black\", lwd = 0.5) + tm_shape(NLD_prov) +   tm_borders(col = \"black\", lwd = 1.5) + tm_inset(bb_Randstad, height = 12, width = 12, position = c(\"left\", \"top\")) +   tm_compass(position = c(\"left\", \"top\"), )   ## ggplot2 if (requireNamespace(\"ggplot2\")) {   library(ggplot2)   p = ggplot(World, aes(x = gender, y = press, colour = continent)) +     geom_point() +     theme_bw()    tm_shape(World) +     tm_polygons(       fill = \"gender\",       fill.scale = tm_scale(values = \"-cols4all.pu_gn_div\")) +     tm_inset(p, height = 15, width = 20, position = tm_pos_in(\"left\", \"bottom\")) } #> Warning: Removed 20 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://r-tmap.github.io/tmap/reference/tm_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: iso (contour) — tm_iso","title":"Map layer: iso (contour) — tm_iso","text":"Map layer draws iso (contour) lines. Stack tm_lines() tm_labels_highlighted.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: iso (contour) — tm_iso","text":"","code":"tm_iso(   col = tm_const(),   text = tm_vars(x = 1),   ...,   options_lines = opt_tm_lines(),   options_labels = opt_tm_labels() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: iso (contour) — tm_iso","text":"col Visual variable determines color. See details. text Visual variable determines text. See details. ... passed tm_lines() tm_labels_highlighted(). text color alpha transparency text labels, please use text_col text_alpha instead col col_alpha. options_lines options tm_lines() options_labels options tm_labels_highlighted()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout options — tm_style","title":"Layout options — tm_style","text":"Specify layout maps. tm_layout() identical tm_options() contain tmap options directly related layout. tm_style() sets style map. style specified set options (can changed afterwards tm_layout()). functions used within plot plot call (stacked + operator). counterparts tmap_options() tmap_style() can used set (layout) options globally.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout options — tm_style","text":"","code":"tm_style(style, ...)  tm_layout(   scale,   asp,   bg,   bg.color,   outer.bg,   outer.bg.color,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   frame.double_line,   outer.margins,   inner.margins,   inner.margins.extra,   meta.margins,   meta.auto_margins,   between_margin,   panel.margin,   grid.mark.height,   xylab.height,   coords.height,   xlab.show,   xlab.text,   xlab.size,   xlab.color,   xlab.rotation,   xlab.space,   xlab.fontface,   xlab.fontfamily,   xlab.alpha,   xlab.side,   ylab.show,   ylab.text,   ylab.size,   ylab.color,   ylab.rotation,   ylab.space,   ylab.fontface,   ylab.fontfamily,   ylab.alpha,   ylab.side,   panel.type,   panel.wrap.pos,   panel.xtab.pos,   unit,   color.sepia_intensity,   color.saturation,   color_vision_deficiency_sim,   text.fontface,   text.fontfamily,   text.alpha,   component.position,   component.offset,   component.stack_margin,   component.autoscale,   component.resize_as_group,   component.frame_combine,   component.stack,   legend.stack,   chart.stack,   component.equalize,   component.frame,   component.frame.color,   component.frame.alpha,   component.frame.lwd,   component.frame.r,   component.bg,   component.bg.color,   component.bg.alpha,   legend.show,   legend.design,   legend.orientation,   legend.position,   legend.width,   legend.height,   legend.reverse,   legend.na.show,   legend.title.color,   legend.title.size,   legend.title.fontface,   legend.title.fontfamily,   legend.title.alpha,   legend.xlab.color,   legend.xlab.size,   legend.xlab.fontface,   legend.xlab.fontfamily,   legend.xlab.alpha,   legend.ylab.color,   legend.ylab.size,   legend.ylab.fontface,   legend.ylab.fontfamily,   legend.ylab.alpha,   legend.text.color,   legend.text.size,   legend.text.fontface,   legend.text.fontfamily,   legend.text.alpha,   legend.frame,   legend.frame.color,   legend.frame.alpha,   legend.frame.lwd,   legend.frame.r,   legend.bg,   legend.bg.color,   legend.bg.alpha,   legend.only,   legend.absolute_fontsize,   legend.settings.standard.portrait,   legend.settings.standard.landscape,   add_legend.position,   chart.show,   chart.plot.axis.x,   chart.plot.axis.y,   chart.position,   chart.width,   chart.height,   chart.reverse,   chart.na.show,   chart.title.color,   chart.title.size,   chart.title.fontface,   chart.title.fontfamily,   chart.title.alpha,   chart.xlab.color,   chart.xlab.size,   chart.xlab.fontface,   chart.xlab.fontfamily,   chart.xlab.alpha,   chart.ylab.color,   chart.ylab.size,   chart.ylab.fontface,   chart.ylab.fontfamily,   chart.ylab.alpha,   chart.text.color,   chart.text.size,   chart.text.fontface,   chart.text.fontfamily,   chart.text.alpha,   chart.frame,   chart.frame.color,   chart.frame.alpha,   chart.frame.lwd,   chart.frame.r,   chart.bg,   chart.bg.color,   chart.bg.alpha,   chart.object.color,   title.size,   title.color,   title.fontface,   title.fontfamily,   title.alpha,   title.padding,   title.frame,   title.frame.color,   title.frame.alpha,   title.frame.lwd,   title.frame.r,   title.position,   title.width,   credits.size,   credits.color,   credits.fontface,   credits.fontfamily,   credits.alpha,   credits.padding,   credits.position,   credits.width,   credits.height,   compass.north,   compass.type,   compass.text.size,   compass.size,   compass.show.labels,   compass.cardinal.directions,   compass.text.color,   compass.color.dark,   compass.color.light,   compass.lwd,   compass.margins,   compass.position,   inset.position,   logo.height,   logo.margins,   logo.between_margin,   logo.position,   inset_map.height,   inset_map.width,   inset_map.margins,   inset_map.between_margin,   inset_map.position,   inset_map.frame,   inset.height,   inset.width,   inset.margins,   inset.between_margin,   inset.frame,   inset.bg,   inset.bg.color,   inset.bg.alpha,   inset_grob.height,   inset_grob.width,   inset_gg.height,   inset_gg.width,   scalebar.breaks,   scalebar.width,   scalebar.text.size,   scalebar.text.color,   scalebar.text.fontface,   scalebar.text.fontfamily,   scalebar.color.dark,   scalebar.color.light,   scalebar.lwd,   scalebar.size,   scalebar.margins,   scalebar.position,   grid.show,   grid.labels.pos,   grid.x,   grid.y,   grid.n.x,   grid.n.y,   grid.crs,   grid.col,   grid.lwd,   grid.alpha,   grid.labels.show,   grid.labels.size,   grid.labels.col,   grid.labels.fontface,   grid.labels.fontfamily,   grid.labels.rot,   grid.labels.format,   grid.labels.cardinal,   grid.labels.margin.x,   grid.labels.margin.y,   grid.labels.space.x,   grid.labels.space.y,   grid.labels.inside_frame,   grid.ticks,   grid.lines,   grid.ndiscr,   mouse_coordinates.position,   minimap.server,   minimap.toggle,   minimap.position,   panel.show,   panel.labels,   panel.label.size,   panel.label.color,   panel.label.fontface,   panel.label.fontfamily,   panel.label.alpha,   panel.label.bg,   panel.label.bg.color,   panel.label.bg.alpha,   panel.label.frame,   panel.label.frame.color,   panel.label.frame.alpha,   panel.label.frame.lwd,   panel.label.frame.r,   panel.label.height,   panel.label.rot,   qtm.scalebar,   qtm.minimap,   qtm.mouse_coordinates,   earth_boundary,   earth_boundary.color,   earth_boundary.lwd,   earth_datum,   space.color,   check_and_fix,   basemap.show,   basemap.server,   basemap.alpha,   basemap.zoom,   tiles.show,   tiles.server,   tiles.alpha,   tiles.zoom,   attr.color,   crs_extra,   crs_global,   crs_basemap,   title = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout options — tm_style","text":"style name style ... List tmap options set, option names (characters) returned (see details) scale Overall scale map asp Aspect ratio map. asp set NA (default) aspect ratio adjusted used shapes. set 0 aspect ratio adjusted size device divided number columns rows. bg Draw map background? bg.color Background color map. outer.bg Draw map background (outside frame)? outer.bg.color Background color map outside frame. frame Draw map frame? frame.color color frame. frame.alpha alpha transparency frame. frame.lwd line width frame. See graphics::par, option 'lwd'. frame.r r (radius) frame. frame.double_line double line frame. TRUE FALSE. outer.margins margins outer space (outside frame. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins margins inner space (inside frame). vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins.extra extra arguments margins inner space (inside frame). list arguments. meta.margins margins meta. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). meta.auto_margins auto_margins meta. between_margin Margin map. panel.margin margin panel. grid.mark.height height mark grid. xylab.height height xylab. coords.height height coords. xlab.show visibility xlab. TRUE FALSE. xlab.text text xlab. xlab.size size xlab. xlab.color color xlab. xlab.rotation rotation xlab. xlab.space space xlab. terms number text line heights. xlab.fontface font face xlab. See graphics::par, option 'font'. xlab.fontfamily font family xlab. See graphics::par, option 'family'. xlab.alpha alpha transparency xlab. xlab.side side xlab. ylab.show visibility ylab. TRUE FALSE. ylab.text text ylab. ylab.size size ylab. ylab.color color ylab. ylab.rotation rotation ylab. ylab.space space ylab. terms number text line heights. ylab.fontface font face ylab. See graphics::par, option 'font'. ylab.fontfamily font family ylab. See graphics::par, option 'family'. ylab.alpha alpha transparency ylab. ylab.side side ylab. panel.type type panel. panel.wrap.pos panel positions wrapped facets created tm_facets_grid(). One \"left\", \"right\", \"top\" (default) \"bottom\". panel.xtab.pos panel positions grid facets created tm_facets_grid(). Vector two, first determines locations row panels (\"left\" \"right\") second location column panels ( \"top\" `\"bottom\") unit Unit coordinate color.sepia_intensity sepia_intensity color. color.saturation saturation color. color_vision_deficiency_sim `Color vision deficiency simulation text.fontface font face text. See graphics::par, option 'font'. text.fontfamily font family text. See graphics::par, option 'family'. text.alpha alpha transparency text. component.position position component. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details component.offset offset component. component.stack_margin stack_margin component. component.autoscale autoscale component. component.resize_as_group resize_as_group component. component.frame_combine frame_combine component. component.stack stack component. legend.stack stack legend. chart.stack stack chart. component.equalize equalize component. component.frame frame component. component.frame.color color frame component. component.frame.alpha alpha transparency frame component. component.frame.lwd line width frame component. See graphics::par, option 'lwd'. component.frame.r r (radius) frame component. component.bg bg component. component.bg.color color bg component. component.bg.alpha alpha transparency bg component. legend.show visibility legend. TRUE FALSE. legend.design design legend. legend.orientation orientation legend. legend.position position legend. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details legend.width width legend. legend.height height legend. legend.reverse reverse legend. legend.na.show visibility na legend. TRUE FALSE. legend.title.color color title legend. legend.title.size size title legend. legend.title.fontface font face title legend. See graphics::par, option 'font'. legend.title.fontfamily font family title legend. See graphics::par, option 'family'. legend.title.alpha alpha transparency title legend. legend.xlab.color color xlab legend. legend.xlab.size size xlab legend. legend.xlab.fontface font face xlab legend. See graphics::par, option 'font'. legend.xlab.fontfamily font family xlab legend. See graphics::par, option 'family'. legend.xlab.alpha alpha transparency xlab legend. legend.ylab.color color ylab legend. legend.ylab.size size ylab legend. legend.ylab.fontface font face ylab legend. See graphics::par, option 'font'. legend.ylab.fontfamily font family ylab legend. See graphics::par, option 'family'. legend.ylab.alpha alpha transparency ylab legend. legend.text.color color text legend. legend.text.size size text legend. legend.text.fontface font face text legend. See graphics::par, option 'font'. legend.text.fontfamily font family text legend. See graphics::par, option 'family'. legend.text.alpha alpha transparency text legend. legend.frame frame legend. legend.frame.color color frame legend. legend.frame.alpha alpha transparency frame legend. legend.frame.lwd line width frame legend. See graphics::par, option 'lwd'. legend.frame.r r (radius) frame legend. legend.bg bg legend. legend.bg.color color bg legend. legend.bg.alpha alpha transparency bg legend. legend.legend. legend.absolute_fontsize absolute fontsize legend. far, used calculate legend dimensions legend.settings.standard.portrait portrait standard settings legend. legend.settings.standard.landscape landscape standard settings legend. add_legend.position position add_legend. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details chart.show visibility chart. TRUE FALSE. chart.plot.axis.x x axis plot chart. chart.plot.axis.y y axis plot chart. chart.position position chart. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details chart.width width chart. chart.height height chart. chart.reverse reverse chart. chart.na.show visibility na chart. TRUE FALSE. chart.title.color color title chart. chart.title.size size title chart. chart.title.fontface font face title chart. See graphics::par, option 'font'. chart.title.fontfamily font family title chart. See graphics::par, option 'family'. chart.title.alpha alpha transparency title chart. chart.xlab.color color xlab chart. chart.xlab.size size xlab chart. chart.xlab.fontface font face xlab chart. See graphics::par, option 'font'. chart.xlab.fontfamily font family xlab chart. See graphics::par, option 'family'. chart.xlab.alpha alpha transparency xlab chart. chart.ylab.color color ylab chart. chart.ylab.size size ylab chart. chart.ylab.fontface font face ylab chart. See graphics::par, option 'font'. chart.ylab.fontfamily font family ylab chart. See graphics::par, option 'family'. chart.ylab.alpha alpha transparency ylab chart. chart.text.color color text chart. chart.text.size size text chart. chart.text.fontface font face text chart. See graphics::par, option 'font'. chart.text.fontfamily font family text chart. See graphics::par, option 'family'. chart.text.alpha alpha transparency text chart. chart.frame frame chart. chart.frame.color color frame chart. chart.frame.alpha alpha transparency frame chart. chart.frame.lwd line width frame chart. See graphics::par, option 'lwd'. chart.frame.r r (radius) frame chart. chart.bg bg chart. chart.bg.color color bg chart. chart.bg.alpha alpha transparency bg chart. chart.object.color color object chart. title.size size title. title.color color title. title.fontface font face title. See graphics::par, option 'font'. title.fontfamily font family title. See graphics::par, option 'family'. title.alpha alpha transparency title. title.padding padding title. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). title.frame frame title. title.frame.color color frame title. title.frame.alpha alpha transparency frame title. title.frame.lwd line width frame title. See graphics::par, option 'lwd'. title.frame.r r (radius) frame title. title.position position title. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details title.width width title. credits.size size credits. credits.color color credits. credits.fontface font face credits. See graphics::par, option 'font'. credits.fontfamily font family credits. See graphics::par, option 'family'. credits.alpha alpha transparency credits. credits.padding padding credits. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). credits.position position credits. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details credits.width width credits. credits.height height credits. compass.north north compass. compass.type type compass. compass.text.size size text compass. compass.size size compass. compass.show.labels labels show compass. compass.cardinal.directions directions cardinal compass. compass.text.color color text compass. compass.color.dark dark color compass. compass.color.light light color compass. compass.lwd line width compass. See graphics::par, option 'lwd'. compass.margins margins compass. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). compass.position position compass. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset.position position inset. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details logo.height height logo. logo.margins margins logo. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). logo.between_margin between_margin logo. logo.position position logo. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset_map.height height inset_map. inset_map.width width inset_map. inset_map.margins margins inset_map. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inset_map.between_margin between_margin inset_map. inset_map.position position inset_map. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset_map.frame frame inset_map. inset.height height inset. inset.width width inset. inset.margins margins inset. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inset.between_margin between_margin inset. inset.frame frame inset. inset.bg bg inset. inset.bg.color color bg inset. inset.bg.alpha alpha transparency bg inset. inset_grob.height height inset_grob. inset_grob.width width inset_grob. inset_gg.height height inset_gg. inset_gg.width width inset_gg. scalebar.breaks break values scalebar. scalebar.width width scalebar. scalebar.text.size size text scalebar. scalebar.text.color color text scalebar. scalebar.text.fontface font face text scalebar. See graphics::par, option 'font'. scalebar.text.fontfamily font family text scalebar. See graphics::par, option 'family'. scalebar.color.dark dark color scalebar. scalebar.color.light light color scalebar. scalebar.lwd line width scalebar. See graphics::par, option 'lwd'. scalebar.size size scalebar. scalebar.margins margins scalebar. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). scalebar.position position scalebar. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details grid.show visibility grid. TRUE FALSE. grid.labels.pos pos labels grid. grid.x x grid. grid.y y grid. grid.n.x x n grid. grid.n.y y n grid. grid.crs coordinate reference system (CRS) grid. grid.col color grid. grid.lwd line width grid. See graphics::par, option 'lwd'. grid.alpha alpha transparency grid. grid.labels.show visibility labels grid. TRUE FALSE. grid.labels.size size labels grid. grid.labels.col color labels grid. grid.labels.fontface font face labels grid. See graphics::par, option 'font'. grid.labels.fontfamily font family labels grid. See graphics::par, option 'family'. grid.labels.rot rot labels grid. grid.labels.format format labels grid. grid.labels.cardinal cardinal labels grid. grid.labels.margin.x x margin labels grid. grid.labels.margin.y y margin labels grid. grid.labels.space.x x space labels grid. grid.labels.space.y y space labels grid. grid.labels.inside_frame inside_frame labels grid. grid.ticks ticks grid. grid.lines lines grid. grid.ndiscr ndiscr grid. mouse_coordinates.position position mouse_coordinates. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details minimap.server server minimap. minimap.toggle toggle minimap. minimap.position position minimap. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details panel.show visibility panel. TRUE FALSE. panel.labels labels panel. panel.label.size size label panel. panel.label.color color label panel. panel.label.fontface font face label panel. See graphics::par, option 'font'. panel.label.fontfamily font family label panel. See graphics::par, option 'family'. panel.label.alpha alpha transparency label panel. panel.label.bg bg label panel. panel.label.bg.color color bg label panel. panel.label.bg.alpha alpha transparency bg label panel. panel.label.frame frame label panel. panel.label.frame.color color frame label panel. panel.label.frame.alpha alpha transparency frame label panel. panel.label.frame.lwd line width frame label panel. See graphics::par, option 'lwd'. panel.label.frame.r r (radius) frame label panel. panel.label.height height label panel. panel.label.rot Rotation angles panel labels. Vector four values determine panel label rotation placed left, top, right, bottom. default angles 90, 0, 270 0 respectively. Note second value common, since labels default shown top (see panel.wrap.pos). cross-table facets created tm_facets_grid(), first two values used default (see panel.xtab.pos). qtm.scalebar scalebar qtm. qtm.minimap minimap qtm. qtm.mouse_coordinates mouse_coordinates qtm. earth_boundary earth boundary earth_boundary.color color earth_boundary. earth_boundary.lwd line width earth_boundary. See graphics::par, option 'lwd'. earth_datum Earth datum space.color color space. check_and_fix attempt fix invalid shapefile basemap.show visibility basemap. TRUE FALSE. basemap.server server basemap. basemap.alpha alpha transparency basemap. basemap.zoom zoom basemap. tiles.show visibility tiles. TRUE FALSE. tiles.server server tiles. tiles.alpha alpha transparency tiles. tiles.zoom zoom tiles. attr.color color attr. crs_extra used internally (work progress) crs_global used crs world maps crs_basemap crs_basemap . title deprecated See tm_title()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layout options — tm_style","text":"","code":"tm_shape(World) +   tm_polygons() + tm_layout(   bg.color = \"steelblue\",   outer.bg.color = \"gold\",   frame.lwd = 3,   inner.margins = 0)   tm_shape(World) +   tm_polygons(fill = \"HPI\") + tm_style(\"classic\")   tm_shape(World) +   tm_polygons(fill = \"HPI\") +   tm_style(\"cobalt\")"},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend — tm_legend","title":"Legend — tm_legend","text":"Legend specification","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend — tm_legend","text":"","code":"tm_legend(   title,   show,   orientation,   design,   reverse,   na.show,   position,   group_id,   width,   height,   z,   title.color,   title.size,   title.fontface,   title.fontfamily,   title.alpha,   title.padding,   title.align,   text.color,   text.size,   text.fontface,   text.fontfamily,   text.alpha,   format,   frame,   frame.lwd,   frame.r,   bg,   bg.color,   bg.alpha,   absolute_fontsize,   item.height,   item.width,   item.space,   item.na.height,   item.na.width,   item.na.space,   item.shape,   ticks,   ticks.disable.na,   ticks.col,   ticks.lwd,   margins,   item_text.margin,   ... )  tm_legend_hide()  tm_legend_combine(variable)  tm_legend_bivariate(   xlab,   ylab,   xlab.color,   xlab.size,   xlab.fontface,   xlab.fontfamily,   xlab.alpha,   xlab.padding,   xlab.align,   ylab.color,   ylab.size,   ylab.fontface,   ylab.fontfamily,   ylab.alpha,   ylab.padding,   ylab.align,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend — tm_legend","text":"title Legend title show Show legend? orientation Orientation legend: \"portrait\" \"landscape\" design Legend design \"standard\". designs implemented yet. reverse legend reversed? na.show Show NA values legend? position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. width Width legend. Units 'text line heights'. case negative number specified, units (approximate) pixels. relation two configured via option absolute_fontsize. height Height legend. Units 'text line heights'. case negative number specified, units (approximate) pixels. relation two configured via option absolute_fontsize. z z index, e.g. place component relative componets title.color color title legend. title.size size title legend. title.fontface font face title legend. See graphics::par, option 'font'. title.fontfamily font family title legend. See graphics::par, option 'family'. title.alpha alpha transparency title legend. title.padding padding title legend. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). title.align align title legend. text.color color text legend. text.size size text legend. text.fontface font face text legend. See graphics::par, option 'font'. text.fontfamily font family text legend. See graphics::par, option 'family'. text.alpha alpha transparency text legend. format used anymore: use format argument tm_scale_*() functions instead. frame frame frame drawn? frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. bg Show background? bg.color color bg legend. bg.alpha alpha transparency bg legend. absolute_fontsize absolute fontsize legend. far, used calculate legend dimensions item.height height item legend. item.width width item legend. item.space space item legend. terms number text line heights. item.na.height height na item legend. item.na.width width na item legend. item.na.space space na item legend. terms number text line heights. item.shape shape item legend. ticks List vectors size 2 determines horizontal tick mark lines (portrait legends). values y-values begin endpoint tick mark. ticks.disable.na Remove ticks NA values ticks.col color ticks legend. ticks.lwd line width ticks legend. See graphics::par, option 'lwd'. margins margins legend. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). item_text.margin margin space item text legend. ... visual values, e.g. col, fill, lwd, can specified. , overrule default visual values, determined drawn map objects (e.g. polygons) variable visual (transformation) variable combine legend : e.g. \"fill\" \"size\" xlab label x dimension (rows) ylab label y dimension (columns) xlab.color color xlab legend. xlab.size size xlab legend. xlab.fontface font face xlab legend. See graphics::par, option 'font'. xlab.fontfamily font family xlab legend. See graphics::par, option 'family'. xlab.alpha alpha transparency xlab legend. xlab.padding padding xlab legend. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). xlab.align align xlab legend. ylab.color color ylab legend. ylab.size size ylab legend. ylab.fontface font face ylab legend. See graphics::par, option 'font'. ylab.fontfamily font family ylab legend. See graphics::par, option 'family'. ylab.alpha alpha transparency ylab legend. ylab.padding padding ylab legend. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). ylab.align align ylab legend.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Legend — tm_legend","text":"tm_legend component","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legend — tm_legend","text":"","code":"# Example using different settings from tm_legend()  tm_shape(World) +   tm_polygons(     fill = \"HPI\",     fill.legend = tm_legend(       title = \"Home Price Index\",       design = \"standard\",       title.color = \"orange\",       bg.color = \"purple\",       show = TRUE   ),     id = \"name\",     # Format the labels using dollar sign     fill.scale = tm_scale_intervals(       label.format = function(x) format(x, big.mark = \" \")), )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: lines — tm_lines","title":"Map layer: lines — tm_lines","text":"Map layer draws lines. Supported visual variables : col (color), lwd (line width), lty (line type), col_alpha (color alpha transparency).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: lines — tm_lines","text":"","code":"tm_lines(   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.chart = tm_chart_none(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.chart = tm_chart_none(),   lty.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   linejoin = \"round\",   lineend = \"round\",   plot.order = tm_plot_order(\"lwd\", reverse = TRUE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_lines(),   ... )  opt_tm_lines(lines.only = \"ifany\")"},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: lines — tm_lines","text":"col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. lwd, lwd.scale, lwd.legend, lwd.chart, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.chart, lty.free Visual variable determines line type. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. linejoin, lineend line join line end. See gpar() details. plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). popup.vars names data variables shown popups \"view\" mode. Set popup.vars TRUE show variables shape object. Set popup.vars FALSE disable popups. Set popup.vars character vector variable names variables popups. default (NA) depends whether visual variables (e.g.fill) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument legend.format options. applicable numeric data variables. one list formatting options provided, applied numeric variables popup.vars. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set FALSE disable hover labels. default FALSE, unless id specified. case, set id, id name data variable specifies indices spatial features. used \"view\" mode. options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 lines.line geometries shape object (defined tm_shape()) plotted, also geometry types (like polygons)? default \"ifany\", means TRUE case geometry collection specified.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: lines — tm_lines","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). See vignette visual variables. Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). See vignette facets. *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. See vignette scales. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . See vignette legends. *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram(). See vignette charts. *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: lines — tm_lines","text":"","code":"tm_shape(World_rivers) +   tm_lines(lwd = \"strokelwd\",        lwd.scale = tm_scale_asis(values.scale = 0.2, value.neutral = 2),        col = \"scalerank\",        col.scale = tm_scale_categorical(values = \"seaborn.dark\"))   tm_shape(World) +   tm_lines(col = \"continent\",        col.scale = tm_scale_categorical(values = \"seaborn.dark\"),        lty = \"continent\",        lwd = 1.5,        lty.legend = tm_legend_combine(\"col\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: logo — tm_logo","title":"Map component: logo — tm_logo","text":"Map component adds logo.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: logo — tm_logo","text":"","code":"tm_logo(   file,   height,   margins,   between_margin,   stack,   position,   group_id,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   z )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: logo — tm_logo","text":"file either filename url png image. multiple files/urls provided character vector, logos placed near . specify logos small multiples use list character values/vectors. order stack logos vertically, multiple tm_logo elements can stacked. height height logo number text line heights. width scaled based height aspect ratio logo. multiple logos specified vector list, heights can specified accordingly. margins margins between_margin Margin stack stack map components, either \"vertical\" \"horizontal\". position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. frame frame frame drawn? frame.color frame color frame.alpha frame alpha transparancy frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. z z index, e.g. place component relative componets","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map component: logo — tm_logo","text":"","code":"data(World)  tm_shape(World) +   tm_polygons(\"HPI\", fill.scale = tm_scale_intervals(values = \"brewer.rd_yl_gn\")) +   tm_logo(c(\"https://www.r-project.org/logo/Rlogo.png\",         system.file(\"help\", \"figures\", \"logo.png\", package = \"tmap\"))) +   tm_logo(\"http://blog.kulikulifoods.com/wp-content/uploads/2014/10/logo.png\",       height=5, position = c(\"left\", \"top\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_minimap.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: minimap — tm_minimap","title":"Map component: minimap — tm_minimap","text":"Map component adds minimap view mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_minimap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: minimap — tm_minimap","text":"","code":"tm_minimap(server, toggle, stack, position, group_id, z, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_minimap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: minimap — tm_minimap","text":"server name provider URL (see tm_tiles). default, shows map basemap, moreover, automatically change user switches basemaps. Note latter happen server specified. toggle minimap button minimise ? default TRUE. stack stack map components, either \"vertical\" \"horizontal\". position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. z z index, e.g. place component relative componets ... Arguments passed leaflet::addMiniMap map map widget object width width minimap pixels. Defaults 150. height height minimap pixels. Defaults 150. collapsedWidth width toggle marker minimap collapsed, pixels. Defaults 19. collapsedHeight height toggle marker minimap collapsed, pixels. Defaults 19. zoomLevelOffset offset applied zoom minimap compared zoom main map. Can positive negative, defaults -5. zoomLevelFixed Overrides offset apply fixed zoom level minimap regardless main map zoom. Set valid zoom level, unset zoomLevelOffset used instead. centerFixed Applies fixed position minimap regardless main map's view / position. Prevents panning minimap, allow zooming (minimap main map). minimap zoomed, always zoom around centerFixed point. can pass LatLng-equivalent object. Defaults false. zoomAnimation Sets whether minimap animated zoom. (cause lag bit movement main map.) Defaults false. toggleDisplay Sets whether minimap button minimise . Defaults false. autoToggleDisplay Sets whether minimap hide automatically, parent map bounds fit within minimap bounds. Especially useful 'zoomLevelFixed' set. minimized Sets whether minimap start minimized position. aimingRectOptions Sets style aiming rectangle passing Path.Options (https://web.archive.org/web/20220702182250/https://leafletjs.com/reference-1.3.4.html#path-options) object. (Clickable always overridden set false.) shadowRectOptions Sets style aiming shadow rectangle passing Path.Options (https://web.archive.org/web/20220702182250/https://leafletjs.com/reference-1.3.4.html#path-option) object. (Clickable always overridden set false.) strings Overrides default strings allowing translation. tiles URL tiles one pre-defined providers. mapOptions Sets Leaflet options MiniMap map. override MiniMap default map options extends .","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_mouse_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: mouse coordinates — tm_mouse_coordinates","title":"Map component: mouse coordinates — tm_mouse_coordinates","text":"Map component adds mouse coordinates","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_mouse_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: mouse coordinates — tm_mouse_coordinates","text":"","code":"tm_mouse_coordinates(stack, position, group_id, z)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_mouse_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: mouse coordinates — tm_mouse_coordinates","text":"stack stack map components, either \"vertical\" \"horizontal\". position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. z z index, e.g. place component relative componets","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_options.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap options — tm_options","title":"tmap options — tm_options","text":"tmap options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap options — tm_options","text":"","code":"tm_options(   crs,   facet.max,   facet.flip,   free.scales,   raster.max_cells,   raster.warp,   show.messages,   show.warnings,   output.format,   output.size,   output.dpi,   animation.dpi,   value.const,   value.na,   value.null,   value.blank,   values.var,   values.range,   value.neutral,   values.scale,   scales.var,   scale.misc.args,   continuous.nclass_per_legend_break,   continuous.nclasses,   label.format,   label.na,   scale,   asp,   bg,   bg.color,   outer.bg,   outer.bg.color,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   frame.double_line,   outer.margins,   inner.margins,   inner.margins.extra,   meta.margins,   meta.auto_margins,   between_margin,   panel.margin,   grid.mark.height,   xylab.height,   coords.height,   xlab.show,   xlab.text,   xlab.size,   xlab.color,   xlab.rotation,   xlab.space,   xlab.fontface,   xlab.fontfamily,   xlab.alpha,   xlab.side,   ylab.show,   ylab.text,   ylab.size,   ylab.color,   ylab.rotation,   ylab.space,   ylab.fontface,   ylab.fontfamily,   ylab.alpha,   ylab.side,   panel.type,   panel.wrap.pos,   panel.xtab.pos,   unit,   color.sepia_intensity,   color.saturation,   color_vision_deficiency_sim,   text.fontface,   text.fontfamily,   text.alpha,   component.position,   component.offset,   component.stack_margin,   component.autoscale,   component.resize_as_group,   component.frame_combine,   component.stack,   legend.stack,   chart.stack,   component.equalize,   component.frame,   component.frame.color,   component.frame.alpha,   component.frame.lwd,   component.frame.r,   component.bg,   component.bg.color,   component.bg.alpha,   legend.show,   legend.design,   legend.orientation,   legend.position,   legend.width,   legend.height,   legend.reverse,   legend.na.show,   legend.title.color,   legend.title.size,   legend.title.fontface,   legend.title.fontfamily,   legend.title.alpha,   legend.xlab.color,   legend.xlab.size,   legend.xlab.fontface,   legend.xlab.fontfamily,   legend.xlab.alpha,   legend.ylab.color,   legend.ylab.size,   legend.ylab.fontface,   legend.ylab.fontfamily,   legend.ylab.alpha,   legend.text.color,   legend.text.size,   legend.text.fontface,   legend.text.fontfamily,   legend.text.alpha,   legend.frame,   legend.frame.color,   legend.frame.alpha,   legend.frame.lwd,   legend.frame.r,   legend.bg,   legend.bg.color,   legend.bg.alpha,   legend.only,   legend.absolute_fontsize,   legend.settings.standard.portrait,   legend.settings.standard.landscape,   add_legend.position,   chart.show,   chart.plot.axis.x,   chart.plot.axis.y,   chart.position,   chart.width,   chart.height,   chart.reverse,   chart.na.show,   chart.title.color,   chart.title.size,   chart.title.fontface,   chart.title.fontfamily,   chart.title.alpha,   chart.xlab.color,   chart.xlab.size,   chart.xlab.fontface,   chart.xlab.fontfamily,   chart.xlab.alpha,   chart.ylab.color,   chart.ylab.size,   chart.ylab.fontface,   chart.ylab.fontfamily,   chart.ylab.alpha,   chart.text.color,   chart.text.size,   chart.text.fontface,   chart.text.fontfamily,   chart.text.alpha,   chart.frame,   chart.frame.color,   chart.frame.alpha,   chart.frame.lwd,   chart.frame.r,   chart.bg,   chart.bg.color,   chart.bg.alpha,   chart.object.color,   title.size,   title.color,   title.fontface,   title.fontfamily,   title.alpha,   title.padding,   title.frame,   title.frame.color,   title.frame.alpha,   title.frame.lwd,   title.frame.r,   title.position,   title.width,   credits.size,   credits.color,   credits.fontface,   credits.fontfamily,   credits.alpha,   credits.padding,   credits.position,   credits.width,   credits.height,   compass.north,   compass.type,   compass.text.size,   compass.size,   compass.show.labels,   compass.cardinal.directions,   compass.text.color,   compass.color.dark,   compass.color.light,   compass.lwd,   compass.margins,   compass.position,   inset.position,   logo.height,   logo.margins,   logo.between_margin,   logo.position,   inset_map.height,   inset_map.width,   inset_map.margins,   inset_map.between_margin,   inset_map.position,   inset_map.frame,   inset.height,   inset.width,   inset.margins,   inset.between_margin,   inset.frame,   inset.bg,   inset.bg.color,   inset.bg.alpha,   inset_grob.height,   inset_grob.width,   inset_gg.height,   inset_gg.width,   scalebar.breaks,   scalebar.width,   scalebar.text.size,   scalebar.text.color,   scalebar.text.fontface,   scalebar.text.fontfamily,   scalebar.color.dark,   scalebar.color.light,   scalebar.lwd,   scalebar.size,   scalebar.margins,   scalebar.position,   grid.show,   grid.labels.pos,   grid.x,   grid.y,   grid.n.x,   grid.n.y,   grid.crs,   grid.col,   grid.lwd,   grid.alpha,   grid.labels.show,   grid.labels.size,   grid.labels.col,   grid.labels.fontface,   grid.labels.fontfamily,   grid.labels.rot,   grid.labels.format,   grid.labels.cardinal,   grid.labels.margin.x,   grid.labels.margin.y,   grid.labels.space.x,   grid.labels.space.y,   grid.labels.inside_frame,   grid.ticks,   grid.lines,   grid.ndiscr,   mouse_coordinates.position,   minimap.server,   minimap.toggle,   minimap.position,   panel.show,   panel.labels,   panel.label.size,   panel.label.color,   panel.label.fontface,   panel.label.fontfamily,   panel.label.alpha,   panel.label.bg,   panel.label.bg.color,   panel.label.bg.alpha,   panel.label.frame,   panel.label.frame.color,   panel.label.frame.alpha,   panel.label.frame.lwd,   panel.label.frame.r,   panel.label.height,   panel.label.rot,   qtm.scalebar,   qtm.minimap,   qtm.mouse_coordinates,   earth_boundary,   earth_boundary.color,   earth_boundary.lwd,   earth_datum,   space.color,   check_and_fix,   basemap.show,   basemap.server,   basemap.alpha,   basemap.zoom,   tiles.show,   tiles.server,   tiles.alpha,   tiles.zoom,   attr.color,   crs_extra,   crs_global,   crs_basemap,   title = NULL,   main.title = NULL,   main.title.size = NULL,   main.title.color = NULL,   main.title.fontface = NULL,   main.title.fontfamily = NULL,   main.title.position = NULL,   fontface = NULL,   fontfamily = NULL,   style,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap options — tm_options","text":"crs Map crs (see tm_shape()). NA means crs specified tm_shape(). crs used transformation functions defined tm_shape(). facet.max Maximum number facets facet.flip facets flipped (case facet wrap)? can also set via tm_facets_flip() free.scales backward compatibility: value set, used impute free arguments layer functions raster.max_cells Maximum number raster grid cells. Can mode specific c(plot = 3000, view = 1000, 1000) (last value fall back default) raster.warp rasters warped transformed case different projection (crs) used? Warping creates new regular raster target crs, whereas transforming creates (usually non-regular) raster target crs. former lossy, much faster therefore default. different projection (crs) used, (usually) regular raster show.messages Show messages? show.warnings Show warnings? output.format Output format output.size Output size output.dpi Output dpi animation.dpi Output dpi animations value.const Default visual value constants e.g. default fill color tm_shape(World) + tm_polygons(). list required per visual variable value. value.na Default visual values used visualize NA data values. list required per visual variable value. value.null Default visual values used visualize null (--scope) data values. list required per visual variable value. value.blank Default visual values correspond blank. color \"#00000000\" meaning transparent. list required per visual variable value. values.var Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.range Default range values. See values.range tm_scale_categorical(). list required per visual variable value. value.neutral Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.scale Default scales (object sizes) values. See values.range tm_scale_categorical(). list required per visual variable value. scales.var Default scale functions per visual variable type data variable. list required per visual variable per data type. scale.misc.args Default values scale function-specific arguments. list required per scale function optional per visual variable. continuous.nclass_per_legend_break number continuous legend breaks within one 'unit' (label).  default value 50. continuous.nclasses number classes continuous scale. odd.  default value 101. label.format Format labels (legend.format tmap v3). label.na Default label missing values. scale Overall scale map asp Aspect ratio map. asp set NA (default) aspect ratio adjusted used shapes. set 0 aspect ratio adjusted size device divided number columns rows. bg Draw map background? bg.color Background color map. outer.bg Draw map background (outside frame)? outer.bg.color Background color map outside frame. frame Draw map frame? frame.color color frame. frame.alpha alpha transparency frame. frame.lwd line width frame. See graphics::par, option 'lwd'. frame.r r (radius) frame. frame.double_line double line frame. TRUE FALSE. outer.margins margins outer space (outside frame. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins margins inner space (inside frame). vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins.extra extra arguments margins inner space (inside frame). list arguments. meta.margins margins meta. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). meta.auto_margins auto_margins meta. between_margin Margin map. panel.margin margin panel. grid.mark.height height mark grid. xylab.height height xylab. coords.height height coords. xlab.show visibility xlab. TRUE FALSE. xlab.text text xlab. xlab.size size xlab. xlab.color color xlab. xlab.rotation rotation xlab. xlab.space space xlab. terms number text line heights. xlab.fontface font face xlab. See graphics::par, option 'font'. xlab.fontfamily font family xlab. See graphics::par, option 'family'. xlab.alpha alpha transparency xlab. xlab.side side xlab. ylab.show visibility ylab. TRUE FALSE. ylab.text text ylab. ylab.size size ylab. ylab.color color ylab. ylab.rotation rotation ylab. ylab.space space ylab. terms number text line heights. ylab.fontface font face ylab. See graphics::par, option 'font'. ylab.fontfamily font family ylab. See graphics::par, option 'family'. ylab.alpha alpha transparency ylab. ylab.side side ylab. panel.type type panel. panel.wrap.pos panel positions wrapped facets created tm_facets_grid(). One \"left\", \"right\", \"top\" (default) \"bottom\". panel.xtab.pos panel positions grid facets created tm_facets_grid(). Vector two, first determines locations row panels (\"left\" \"right\") second location column panels ( \"top\" `\"bottom\") unit Unit coordinate color.sepia_intensity sepia_intensity color. color.saturation saturation color. color_vision_deficiency_sim `Color vision deficiency simulation text.fontface font face text. See graphics::par, option 'font'. text.fontfamily font family text. See graphics::par, option 'family'. text.alpha alpha transparency text. component.position position component. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details component.offset offset component. component.stack_margin stack_margin component. component.autoscale autoscale component. component.resize_as_group resize_as_group component. component.frame_combine frame_combine component. component.stack stack component. legend.stack stack legend. chart.stack stack chart. component.equalize equalize component. component.frame frame component. component.frame.color color frame component. component.frame.alpha alpha transparency frame component. component.frame.lwd line width frame component. See graphics::par, option 'lwd'. component.frame.r r (radius) frame component. component.bg bg component. component.bg.color color bg component. component.bg.alpha alpha transparency bg component. legend.show visibility legend. TRUE FALSE. legend.design design legend. legend.orientation orientation legend. legend.position position legend. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details legend.width width legend. legend.height height legend. legend.reverse reverse legend. legend.na.show visibility na legend. TRUE FALSE. legend.title.color color title legend. legend.title.size size title legend. legend.title.fontface font face title legend. See graphics::par, option 'font'. legend.title.fontfamily font family title legend. See graphics::par, option 'family'. legend.title.alpha alpha transparency title legend. legend.xlab.color color xlab legend. legend.xlab.size size xlab legend. legend.xlab.fontface font face xlab legend. See graphics::par, option 'font'. legend.xlab.fontfamily font family xlab legend. See graphics::par, option 'family'. legend.xlab.alpha alpha transparency xlab legend. legend.ylab.color color ylab legend. legend.ylab.size size ylab legend. legend.ylab.fontface font face ylab legend. See graphics::par, option 'font'. legend.ylab.fontfamily font family ylab legend. See graphics::par, option 'family'. legend.ylab.alpha alpha transparency ylab legend. legend.text.color color text legend. legend.text.size size text legend. legend.text.fontface font face text legend. See graphics::par, option 'font'. legend.text.fontfamily font family text legend. See graphics::par, option 'family'. legend.text.alpha alpha transparency text legend. legend.frame frame legend. legend.frame.color color frame legend. legend.frame.alpha alpha transparency frame legend. legend.frame.lwd line width frame legend. See graphics::par, option 'lwd'. legend.frame.r r (radius) frame legend. legend.bg bg legend. legend.bg.color color bg legend. legend.bg.alpha alpha transparency bg legend. legend.legend. legend.absolute_fontsize absolute fontsize legend. far, used calculate legend dimensions legend.settings.standard.portrait portrait standard settings legend. legend.settings.standard.landscape landscape standard settings legend. add_legend.position position add_legend. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details chart.show visibility chart. TRUE FALSE. chart.plot.axis.x x axis plot chart. chart.plot.axis.y y axis plot chart. chart.position position chart. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details chart.width width chart. chart.height height chart. chart.reverse reverse chart. chart.na.show visibility na chart. TRUE FALSE. chart.title.color color title chart. chart.title.size size title chart. chart.title.fontface font face title chart. See graphics::par, option 'font'. chart.title.fontfamily font family title chart. See graphics::par, option 'family'. chart.title.alpha alpha transparency title chart. chart.xlab.color color xlab chart. chart.xlab.size size xlab chart. chart.xlab.fontface font face xlab chart. See graphics::par, option 'font'. chart.xlab.fontfamily font family xlab chart. See graphics::par, option 'family'. chart.xlab.alpha alpha transparency xlab chart. chart.ylab.color color ylab chart. chart.ylab.size size ylab chart. chart.ylab.fontface font face ylab chart. See graphics::par, option 'font'. chart.ylab.fontfamily font family ylab chart. See graphics::par, option 'family'. chart.ylab.alpha alpha transparency ylab chart. chart.text.color color text chart. chart.text.size size text chart. chart.text.fontface font face text chart. See graphics::par, option 'font'. chart.text.fontfamily font family text chart. See graphics::par, option 'family'. chart.text.alpha alpha transparency text chart. chart.frame frame chart. chart.frame.color color frame chart. chart.frame.alpha alpha transparency frame chart. chart.frame.lwd line width frame chart. See graphics::par, option 'lwd'. chart.frame.r r (radius) frame chart. chart.bg bg chart. chart.bg.color color bg chart. chart.bg.alpha alpha transparency bg chart. chart.object.color color object chart. title.size size title. title.color color title. title.fontface font face title. See graphics::par, option 'font'. title.fontfamily font family title. See graphics::par, option 'family'. title.alpha alpha transparency title. title.padding padding title. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). title.frame frame title. title.frame.color color frame title. title.frame.alpha alpha transparency frame title. title.frame.lwd line width frame title. See graphics::par, option 'lwd'. title.frame.r r (radius) frame title. title.position position title. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details title.width width title. credits.size size credits. credits.color color credits. credits.fontface font face credits. See graphics::par, option 'font'. credits.fontfamily font family credits. See graphics::par, option 'family'. credits.alpha alpha transparency credits. credits.padding padding credits. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). credits.position position credits. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details credits.width width credits. credits.height height credits. compass.north north compass. compass.type type compass. compass.text.size size text compass. compass.size size compass. compass.show.labels labels show compass. compass.cardinal.directions directions cardinal compass. compass.text.color color text compass. compass.color.dark dark color compass. compass.color.light light color compass. compass.lwd line width compass. See graphics::par, option 'lwd'. compass.margins margins compass. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). compass.position position compass. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset.position position inset. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details logo.height height logo. logo.margins margins logo. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). logo.between_margin between_margin logo. logo.position position logo. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset_map.height height inset_map. inset_map.width width inset_map. inset_map.margins margins inset_map. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inset_map.between_margin between_margin inset_map. inset_map.position position inset_map. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset_map.frame frame inset_map. inset.height height inset. inset.width width inset. inset.margins margins inset. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inset.between_margin between_margin inset. inset.frame frame inset. inset.bg bg inset. inset.bg.color color bg inset. inset.bg.alpha alpha transparency bg inset. inset_grob.height height inset_grob. inset_grob.width width inset_grob. inset_gg.height height inset_gg. inset_gg.width width inset_gg. scalebar.breaks break values scalebar. scalebar.width width scalebar. scalebar.text.size size text scalebar. scalebar.text.color color text scalebar. scalebar.text.fontface font face text scalebar. See graphics::par, option 'font'. scalebar.text.fontfamily font family text scalebar. See graphics::par, option 'family'. scalebar.color.dark dark color scalebar. scalebar.color.light light color scalebar. scalebar.lwd line width scalebar. See graphics::par, option 'lwd'. scalebar.size size scalebar. scalebar.margins margins scalebar. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). scalebar.position position scalebar. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details grid.show visibility grid. TRUE FALSE. grid.labels.pos pos labels grid. grid.x x grid. grid.y y grid. grid.n.x x n grid. grid.n.y y n grid. grid.crs coordinate reference system (CRS) grid. grid.col color grid. grid.lwd line width grid. See graphics::par, option 'lwd'. grid.alpha alpha transparency grid. grid.labels.show visibility labels grid. TRUE FALSE. grid.labels.size size labels grid. grid.labels.col color labels grid. grid.labels.fontface font face labels grid. See graphics::par, option 'font'. grid.labels.fontfamily font family labels grid. See graphics::par, option 'family'. grid.labels.rot rot labels grid. grid.labels.format format labels grid. grid.labels.cardinal cardinal labels grid. grid.labels.margin.x x margin labels grid. grid.labels.margin.y y margin labels grid. grid.labels.space.x x space labels grid. grid.labels.space.y y space labels grid. grid.labels.inside_frame inside_frame labels grid. grid.ticks ticks grid. grid.lines lines grid. grid.ndiscr ndiscr grid. mouse_coordinates.position position mouse_coordinates. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details minimap.server server minimap. minimap.toggle toggle minimap. minimap.position position minimap. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details panel.show visibility panel. TRUE FALSE. panel.labels labels panel. panel.label.size size label panel. panel.label.color color label panel. panel.label.fontface font face label panel. See graphics::par, option 'font'. panel.label.fontfamily font family label panel. See graphics::par, option 'family'. panel.label.alpha alpha transparency label panel. panel.label.bg bg label panel. panel.label.bg.color color bg label panel. panel.label.bg.alpha alpha transparency bg label panel. panel.label.frame frame label panel. panel.label.frame.color color frame label panel. panel.label.frame.alpha alpha transparency frame label panel. panel.label.frame.lwd line width frame label panel. See graphics::par, option 'lwd'. panel.label.frame.r r (radius) frame label panel. panel.label.height height label panel. panel.label.rot Rotation angles panel labels. Vector four values determine panel label rotation placed left, top, right, bottom. default angles 90, 0, 270 0 respectively. Note second value common, since labels default shown top (see panel.wrap.pos). cross-table facets created tm_facets_grid(), first two values used default (see panel.xtab.pos). qtm.scalebar scalebar qtm. qtm.minimap minimap qtm. qtm.mouse_coordinates mouse_coordinates qtm. earth_boundary earth boundary earth_boundary.color color earth_boundary. earth_boundary.lwd line width earth_boundary. See graphics::par, option 'lwd'. earth_datum Earth datum space.color color space. check_and_fix attempt fix invalid shapefile basemap.show visibility basemap. TRUE FALSE. basemap.server server basemap. basemap.alpha alpha transparency basemap. basemap.zoom zoom basemap. tiles.show visibility tiles. TRUE FALSE. tiles.server server tiles. tiles.alpha alpha transparency tiles. tiles.zoom zoom tiles. attr.color color attr. crs_extra used internally (work progress) crs_global used crs world maps crs_basemap crs_basemap . title deprecated See tm_title() main.title deprecated See tm_title() main.title.size, main.title.color, main.title.fontface, main.title.fontfamily, main.title.position deprecated. Use title. options instead. fontface, fontfamily renamed text.fontface text.fontfamily style style see tm_style() ... List tmap options set, option names (characters) returned (see details)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mode options — tm_plot","title":"Plot mode options — tm_plot","text":"Plot mode options. option specific plot mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mode options — tm_plot","text":"","code":"tm_plot(use_gradient, limit_latitude_3857)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mode options — tm_plot","text":"use_gradient Use gradient fill using linearGradient() limit_latitude_3857 Vector two limit latitude values maps printed Web Mercator projection (EPSG 3857). c(-90, 90) poles inflated much. Web Mercator defines c(-85.06, 85.06), default setting tmap c(-84, 84).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine plotting order of features — tm_plot_order","title":"Determine plotting order of features — tm_plot_order","text":"Determine plotting order features.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine plotting order of features — tm_plot_order","text":"","code":"tm_plot_order(   aes,   reverse = TRUE,   na.order = c(\"mix\", \"bottom\", \"top\"),   null.order = c(\"bottom\", \"mix\", \"top\"),   null.below.na = TRUE )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine plotting order of features — tm_plot_order","text":"aes Visual variable values determine plotting order. Example: bubble map \"size\" aesthetic used. data variable (say population) mapped via continuous scale (tm_scale_continuous()) bubble sizes. bubbles plotted order size. determined arguments. Use \"DATA\" keep order data. Another special value \"AREA\" \"LENGTH\" preserved polygons lines respectively: rather data variable polygon area / line lengths determines plotting order. reverse Logical determines whether visual values plotted reversed order. visual values (specified tmap option \"values.var\") default reversed, plotted starting last value. bubble map example, means large bubbles plotted first, hence bottom. na.order features plotted NA value (least) one aesthetic variable? (order) \"mix\", \"bottom\", \"top\"? bubble map example: fill color missing bubble, bubbles plotted? null.order non-selected (aka null) features plotted? null..na null features plotted NA features?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: polygons — tm_polygons","title":"Map layer: polygons — tm_polygons","text":"Map layer draws polygons. Supported visual variables : fill (fill color), col (border color), lwd (line width), lty (line type), fill_alpha (fill color alpha transparency) col_alpha (border color alpha transparency).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: polygons — tm_polygons","text":"","code":"tm_polygons(   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.chart = tm_chart_none(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.chart = tm_chart_none(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.chart = tm_chart_none(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.chart = tm_chart_none(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   linejoin = \"round\",   lineend = \"round\",   plot.order = tm_plot_order(\"lwd\", reverse = TRUE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_polygons(),   ... )  tm_fill(...)  tm_borders(col = tm_const(), ...)  opt_tm_polygons(polygons.only = \"ifany\")"},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: polygons — tm_polygons","text":"fill, fill.scale, fill.legend, fill.chart, fill.free Visual variable determines fill color. See details. col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. lwd, lwd.scale, lwd.legend, lwd.chart, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.chart, lty.free Visual variable determines line type. See details. fill_alpha, fill_alpha.scale, fill_alpha.chart, fill_alpha.legend, fill_alpha.free Visual variable determines fill color transparency. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. linejoin, lineend Line join line end. See gpar() details. plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). popup.vars names data variables shown popups \"view\" mode. Set popup.vars TRUE show variables shape object. Set popup.vars FALSE disable popups. Set popup.vars character vector variable names variables popups. default (NA) depends whether visual variables (e.g.fill) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument legend.format options. applicable numeric data variables. one list formatting options provided, applied numeric variables popup.vars. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set FALSE disable hover labels. default FALSE, unless id specified. case, set id, id name data variable specifies indices spatial features. used \"view\" mode. options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 polygons.polygon geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: polygons — tm_polygons","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). See vignette visual variables. Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). See vignette facets. *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. See vignette scales. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . See vignette legends. *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram(). See vignette charts. *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: polygons — tm_polygons","text":"","code":"# load Africa country data data(World) Africa = World[World$continent == \"Africa\", ] Africa_border = sf::st_make_valid(sf::st_union(sf::st_buffer(Africa, 0.001))) # slow and ugly  # without specifications tm_shape(Africa_border) + tm_polygons()  tm_shape(Africa_border) + tm_fill()  tm_shape(Africa_border) + tm_borders()   # specification with visual variable values tm_shape(Africa) +   tm_polygons(fill = \"limegreen\", col = \"purple\", lwd = 2, lty = \"solid\", col_alpha = 0.3) +   tm_text(\"name\", options = opt_tm_text(remove_overlap = TRUE)) + tm_shape(Africa_border) +   tm_borders(\"darkred\", lwd = 3)   # specification with a data variable tm_shape(Africa) +   tm_polygons(fill = \"income_grp\", fill.scale = tm_scale_categorical(values = \"-tol.muted\"))    # continuous color scale with landscape legend tm_shape(Africa) +   tm_polygons(fill = \"inequality\",     fill.scale = tm_scale_continuous(values = \"-scico.roma\"),     fill.legend = tm_legend(       title = \"\", orientation = \"landscape\",       position = tm_pos_out(\"center\", \"bottom\"), frame = FALSE       )) + tm_shape(Africa_border) +   tm_borders(lwd = 2) + tm_title(\"Inequality index\", position = tm_pos_in(\"right\", \"TOP\"), frame = FALSE) + tm_layout(frame = FALSE)   # bivariate scale tm_shape(World) +   tm_polygons(tm_vars(c(\"inequality\", \"well_being\"), multivariate = TRUE)) #> Labels abbreviated by the first letters, e.g.: \"2 to 3\" => \"2\""},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the position of map components — tm_pos","title":"Set the position of map components — tm_pos","text":"Set position map components, legends, title, compass, scale bar, etc. tm_pos() function position components: tm_pos_out() places components outside map area, tm_pos_in() inside map area, tm_pos_on_top() top map position argument map layer component specified one functions. functions tm_pos_auto_out() tm_pos_auto_in() used set components automatically, used via tmap_options(). See Details positioning works.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the position of map components — tm_pos","text":"","code":"tm_pos(cell.h, cell.v, pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_in(pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_out(cell.h, cell.v, pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_on_top(pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_auto_out(cell.h, cell.v, pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_auto_in(align.h, align.v, just.h, just.v)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the position of map components — tm_pos","text":"cell.h, cell.v plotting area overlaid 3x3 grid, middle grid cell map area. Components can drawn cell. cell.h specifies horizontal position (column) can take values \"left\", \"center\", \"right\". cell.v specifies vertical position (row) can take values \"top\", \"center\", \"bottom\". See details graphical explanation. pos.h, pos.v position component within cell. main options pos.h \"left\", \"center\", \"right\". cell.v \"top\", \"center\", \"bottom\". options can also provided upper case; case offset (see tmap option component.offset). Also numbers 0 1 can provided, determine position component inside cell ((0,0) left bottom). arguments just.h just.v determine justification point. align.h, align.v alignment component case multiple components stacked. stacked horizontally, align.v determines components smaller height available height (determined outer.margins specified otherwise highest component) justified: \"top\", \"center\", \"bottom\". Similarly, align.h determines components justified horizontally stacked vertically: \"left\", \"center\", \"right\". just.h, just.v justification components. used case pos.h pos.v numbers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the position of map components — tm_pos","text":"tm_pos_in() sets position component(s) inside maps area, equivalent center-center cell (case facets, drawn center-center cell). tm_pos_out() sets position component(s) outside map. tm_pos_on_top() tm_pos_out, cell set center cell may therefore seem similar tm_pos_in(), essential difference: tm_pos_in() takes map frame account whereas tm_pos_on_top() . #' amount space top bottom rows, left right columns occupy determined tm_layout() arguments meta.margins meta.auto_margins. former sets relative space bottom, left, top, right side. case set NA, space set automatically based 1) maximum relative space specified meta.auto_margins 2) presence size components cell. instance, one landscape oriented legend center-bottom cell, relative space bottom row set height legend (given smaller corresponding value meta.auto_margins), four sides set 0. tm_pos_auto_out() complex: cell.h cell.v arguments set one four corners. mean components drawn corner. corner represents sides map components drawn. default, legends drawn either bottom right-side map default (see tmap_options(\"legend.position\")). row- column-wise legends general legend (using tm_facets_grid()), general legend drawn corner, practice case rare. arguments pos.h pos.v determine components drawn within cell. , \"left\", \"center\", \"right\" pos.h \"top\", \"center\", \"bottom\" pos.v. values can also specified upper-case, influences offset cell borders, determined tmap option component.offset. default, small offset components drawn inside offset drawn outside upper-case. tm_pos_auto_in() automatically determines pos.h pos.v given available space inside map. similar default positioning tmap3. case multiple components draw cell position inside cell, stacked (determined stack argument legend component function). align.h align.v arguments determine components justified . Note legends components may different facet row column. case tm_facets_grid() tm_facets_stack() applied scales set free (.free argument map layer functions). case legends components draw row- column wise, position legends (components) right next maps, legends (components) aligned maps.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: raster — tm_raster","title":"Map layer: raster — tm_raster","text":"Map layer draws rasters. Supported visual variable : col ( color).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: raster — tm_raster","text":"","code":"tm_raster(   col = tm_vars(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_raster(),   ... )  opt_tm_raster(interpolate = FALSE)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: raster — tm_raster","text":"col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 interpolate raster image interpolated? Currently applicable view mode (passed grid)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: raster — tm_raster","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). See vignette visual variables. Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). See vignette facets. *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. See vignette scales. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . See vignette legends. *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram(). See vignette charts. *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: raster — tm_raster","text":"","code":"if (FALSE) { # \\dontrun{ # load land data data(land, World)  tm_shape(land) +   tm_raster(\"cover\")  tm_shape(land) +   tm_raster(\"elevation\", col.scale = tm_scale_continuous(values = terrain.colors(9))) +   tm_shape(World) +   tm_borders() } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: rgb images — tm_rgb","title":"Map layer: rgb images — tm_rgb","text":"Map layer rgb image.. used (multivariate) visual variable col, specified 3 4 variables tm_rgb() tm_rgba() respectively. first three correspond red, green, blue channels. optional fourth alpha transparency channel.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: rgb images — tm_rgb","text":"","code":"tm_rgb(   col = tm_vars(n = 3, multivariate = TRUE),   col.scale = tm_scale_rgb(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   options = opt_tm_rgb(),   ... )  tm_rgba(   col = tm_vars(n = 4, multivariate = TRUE),   col.scale = tm_scale_rgba(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   options = opt_tm_rgb() )  opt_tm_rgb(interpolate = FALSE, saturation = 1)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: rgb images — tm_rgb","text":"col, col.scale, col.legend, col.chart, col.free Visual variable determines color. col multivariate variable, 3 (tm_rgb) 4 (tm_rgba) numeric data variables. can specified via tm_vars() multivariate = TRUE col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 interpolate raster image interpolated? Currently applicable view mode (passed grid) saturation saturation rgb.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: rgb images — tm_rgb","text":"","code":"if (FALSE) { # \\dontrun{ require(stars) file = system.file(\"tif/L7_ETMs.tif\", package = \"stars\")  L7 = stars::read_stars(file)  tm_shape(L7) +   tm_rgb()  # the previous example was a shortcut of this call tm_shape(L7) +   tm_rgb(col = tm_vars(\"band\", dimvalues = 1:3, multivariate = TRUE))  # alternative format: using a stars dimension instead of attributes L7_alt = split(L7, \"band\") tm_shape(L7_alt) +   tm_rgb()  # with attribute names tm_shape(L7_alt) +   tm_rgb(col = tm_vars(c(\"X1\", \"X2\", \"X3\"), multivariate = TRUE))  # with attribute indices tm_shape(L7_alt) +   tm_rgb(col = tm_vars(1:3, multivariate = TRUE))  if (requireNamespace(\"terra\")) {   L7_terra = terra::rast(file)    tm_shape(L7_terra) +     tm_rgb()    # with layer names   tm_shape(L7_terra) +     tm_rgb(tm_vars(names(L7_terra)[1:3], multivariate = TRUE))    # with layer indices   tm_shape(L7_alt) +     tm_rgb(col = tm_vars(1:3, multivariate = TRUE))  } } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: automatic scale — tm_scale","title":"Scales: automatic scale — tm_scale","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale() scale set automatically given data type (factor, numeric, integer) visual variable. tmap option scales.var contains information scale applied .","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: automatic scale — tm_scale","text":"","code":"tm_scale(...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: automatic scale — tm_scale","text":"... arguments passed applied scale function tm_scale_*()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_asis.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: as is — tm_scale_asis","title":"Scales: as is — tm_scale_asis","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_asis() used take data values use visual variable.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_asis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: as is — tm_scale_asis","text":"","code":"tm_scale_asis(values.scale = NA, value.neutral = NA, value.na = NA, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_asis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: as is — tm_scale_asis","text":"values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. ... Arguments caught (used) automatic function tm_scale()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: scale bar — tm_scale_bar","title":"Map component: scale bar — tm_scale_bar","text":"function renamed tm_scalebar() tmap v4.0.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: scale bar — tm_scale_bar","text":"","code":"tm_scale_bar(...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: scale bar — tm_scale_bar","text":"... Arguments passed tm_scalebar breaks breaks width width scale bar. Units number text line heights, similar number characters. text.size text size text.color text.color color.dark color.dark color.light color.light lwd linewidth size Deprecated (use text.size instead) stack stack map components, either \"vertical\" \"horizontal\". margins margins frame frame frame drawn? frame.color frame color frame.alpha frame alpha transparancy frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. bg Show background? bg.color Background color bg.alpha Background transparency position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. z z index, e.g. place component relative componets","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: bivariate scale — tm_scale_bivariate","title":"Scales: bivariate scale — tm_scale_bivariate","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_bivariate() used bivariate.scales.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: bivariate scale — tm_scale_bivariate","text":"","code":"tm_scale_bivariate(   scale1 = tm_scale(),   scale2 = tm_scale(),   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = 1,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: bivariate scale — tm_scale_bivariate","text":"scale1, scale2 two tm_scale objects. Currently, tm_scale_*() functions supported except tm_scale_continuous(). values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, grey scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark grey light grey used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle grey (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: categorical and ordinal scale — tm_scale_ordinal","title":"Scales: categorical and ordinal scale — tm_scale_ordinal","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). functions tm_scale_categorical() tm_scale_ordinal() used categorical data. difference functions former assumes unordered categories whereas latter assumes ordered categories. colors (visual variable fill col), different default color palettes used (see tmap option values.var).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: categorical and ordinal scale — tm_scale_ordinal","text":"","code":"tm_scale_ordinal(   n.max = 30,   values = NA,   values.repeat = FALSE,   values.range = 1,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   levels = NULL,   levels.drop = FALSE,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )  tm_scale_categorical(   n.max = 30,   values = NA,   values.repeat = TRUE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   levels = NULL,   levels.drop = FALSE,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: categorical and ordinal scale — tm_scale_ordinal","text":"n.max Maximum number categories (factor levels). case , grouped n.max groups. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle gray (\"gray50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. levels Levels show. values treated missing. levels.drop unused levels dropped (therefore assigned visual value shown legend)? labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: continuous scale — tm_scale_continuous","title":"Scales: continuous scale — tm_scale_continuous","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_continuous() used continuous data. functions tm_scale_continuous_<x>() use transformation functions x.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: continuous scale — tm_scale_continuous","text":"","code":"tm_scale_continuous(   n = NULL,   limits = NULL,   outliers.trunc = NULL,   ticks = NULL,   trans = NULL,   midpoint = NULL,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list(),   trans.args = list() )  tm_scale_continuous_log(..., base = exp(1))  tm_scale_continuous_log2(...)  tm_scale_continuous_log10(...)  tm_scale_continuous_log1p(...)  tm_scale_continuous_sqrt(...)  tm_scale_continuous_pseudo_log(..., base = exp(1), sigma = 1)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: continuous scale — tm_scale_continuous","text":"n Preferred number tick labels. used ticks specified limits Limits data values mapped continuous scale. NA, range data values taken. one value provided, range data values provided value taken. default depends visual variable: 0 visual variables color tm_scale_continuous used. transformation scale functions, NA. outliers.trunc outliers truncated? outlier data value respectively lower upper limit. logical vector two values expected. first second value determines whether values lower lower limit respectively higher upper limit truncated lower respectively upper limit. FALSE (default), considered missing values. ticks Tick values. specified, determined automatically n trans Transformation function. One \"identity\" (default), \"log\", \"log1p\". Note: base log scale irrelevant, since log transformed values normalized mapping visual values. midpoint data value interpreted midpoint. default set 0 negative positive values present. Useful values diverging colors. case, two sides color palette assigned negative respectively positive values. values positive values negative, midpoint set NA, means value corresponds middle color class (see style) mapped middle color. specified sequential color palettes (e.g. \"Blues\"), color palette treated diverging color palette. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values, especially useful color palettes. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle gray (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3) trans.args list additional argument transformation (generic transformation arguments) ... passed tm_scale_continuous() base base logarithm sigma Scaling factor linear part pseudo-log transformation.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales: continuous scale — tm_scale_continuous","text":"","code":"tm_shape(World) +   tm_polygons(     fill = \"HPI\",     fill.scale = tm_scale_continuous(values = \"scico.roma\", midpoint = 30)) #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.   tm_shape(metro) +   tm_bubbles(     size = \"pop1950\",      size.scale = tm_scale_continuous(       values.scale = 1),     size.legend = tm_legend(\"Population in 1950\", frame = FALSE))   tm_shape(metro) +   tm_bubbles(     size = \"pop1950\",      size.scale = tm_scale_continuous(       values.scale = 2,        limits = c(0, 12e6),        ticks = c(1e5, 3e5, 8e5, 4e6, 1e7),        labels = c(\"0 - 200,000\", \"200,000 - 500,000\", \"500,000 - 1,000,000\",          \"1,000,000 - 10,000,000\", \"10,000,000 or more\"),        outliers.trunc = c(TRUE, TRUE)),     size.legend = tm_legend(\"Population in 1950\", frame = FALSE))  # Note that for this type of legend, we recommend tm_scale_intervals()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: discrete scale — tm_scale_discrete","title":"Scales: discrete scale — tm_scale_discrete","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_discrete() used discrete numerical data, integers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: discrete scale — tm_scale_discrete","text":"","code":"tm_scale_discrete(   ticks = NA,   midpoint = NULL,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: discrete scale — tm_scale_discrete","text":"ticks Discrete values. specified, determined automatically: unique values put discrete scale. midpoint data value interpreted midpoint. default set 0 negative positive values present. Useful values diverging colors. case, two sides color palette assigned negative respectively positive values. values positive values negative, midpoint set NA, means value corresponds middle color class (see style) mapped middle color. specified sequential color palettes (e.g. \"Blues\"), color palette treated diverging color palette. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle grey (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: interval scale — tm_scale_intervals","title":"Scales: interval scale — tm_scale_intervals","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_intervals() used numerical data.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: interval scale — tm_scale_intervals","text":"","code":"tm_scale_intervals(   n = 5,   style = ifelse(is.null(breaks), \"pretty\", \"fixed\"),   style.args = list(),   breaks = NULL,   interval.closure = \"left\",   midpoint = NULL,   as.count = FALSE,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: interval scale — tm_scale_intervals","text":"n Number intervals. styles (see argument style ) preferred number rather exact number. style Method create intervals. Options \"cat\", \"fixed\", \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\", \"dpih\", \"headtails\", \"log10_pretty\". See details classInt::classIntervals() (extra arguments can passed via style.args). style.args List extra arguments passed classInt::classIntervals(). breaks Interval breaks (used required style = \"fixed\") interval.closure value determines whether intervals closed: \"left\" \"right\". .count = TRUE, inverval.closure always set \"left\". midpoint data value interpreted midpoint. default set 0 negative positive values present. Useful values diverging colors. case, two sides color palette assigned negative respectively positive values. values positive values negative, midpoint set NA, means value corresponds middle color class (see style) mapped middle color. specified sequential color palettes (e.g. \"Blues\"), color palette treated diverging color palette. .count data variable processed count variable? instance, style = \"pretty\", n = 2, value range variable 0 10, column classes .count = TRUE 0; 1 5; 6 10 (note 0 regarded category) whereas .count = FALSE 0 5; 5 10. applicable style \"pretty\", \"fixed\", \"log10_pretty\". default FALSE. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"gray25\" \"gray75\"), 0, 0.5 means colors used black middle grey (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: rank scale — tm_scale_rank","title":"Scales: rank scale — tm_scale_rank","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_rank() used rank numeric data.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: rank scale — tm_scale_rank","text":"","code":"tm_scale_rank(   n = NULL,   ticks = NULL,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list(),   unit = \"rank\" )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: rank scale — tm_scale_rank","text":"n Preferred number tick labels. used ticks specified ticks Tick values. specified, determined automatically n values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values, especially useful color palettes. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle gray (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3) unit unit name values. default \"rank\".","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: RGB — tm_scale_rgb","title":"Scales: RGB — tm_scale_rgb","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_rgb() used transform r, g, b band variables colors. function adopted (works similar ) stars::st_rgb()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: RGB — tm_scale_rgb","text":"","code":"tm_scale_rgb(   value.na = NA,   stretch = FALSE,   probs = c(0, 1),   max_color_value = 255L )  tm_scale_rgba(   value.na = NA,   stretch = FALSE,   probs = c(0, 1),   max_color_value = 255 )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: RGB — tm_scale_rgb","text":"value.na value missing values stretch (r, g, b) band stretched? Possible values: \"percent\" (TRUE), \"histogram\", FALSE. first case, values stretched probs[1]...probs[2]. second case, histogram equalization performed probs probability (quantile) values stretch = \"percent\" max_color_value maximum value","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales: RGB — tm_scale_rgb","text":"","code":"if (FALSE) { # \\dontrun{ require(stars) file = system.file(\"tif/L7_ETMs.tif\", package = \"stars\")  L7 = stars::read_stars(file)  tm_shape(L7) +   tm_rgb(col.scale = tm_scale_rgb(probs = c(0, .99), stretch = TRUE))  tm_shape(L7) +   tm_rgb(col.scale = tm_scale_rgb(stretch = \"histogram\")) } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scalebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: scale bar — tm_scalebar","title":"Map component: scale bar — tm_scalebar","text":"Map component adds scale bar.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scalebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: scale bar — tm_scalebar","text":"","code":"tm_scalebar(   breaks,   width,   text.size,   text.color,   color.dark,   color.light,   lwd,   position,   group_id,   bg,   bg.color,   bg.alpha,   size = \"deprecated\",   stack,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   margins,   z )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scalebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: scale bar — tm_scalebar","text":"breaks breaks width width scale bar. Units number text line heights, similar number characters. text.size text size text.color text.color color.dark color.dark color.light color.light lwd linewidth position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. bg Show background? bg.color Background color bg.alpha Background transparency size Deprecated (use text.size instead) stack stack map components, either \"vertical\" \"horizontal\". frame frame frame drawn? frame.color frame color frame.alpha frame alpha transparancy frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. margins margins z z index, e.g. place component relative componets","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a numeric sequence — tm_seq","title":"Specify a numeric sequence — tm_seq","text":"Specify numeric sequence, numeric scales like tm_scale_continuous(). function needed non-linear relationship numeric data values visual variables. E.g. make relationship area bubbles linear, square root input variables used calculate radius bubbles.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a numeric sequence — tm_seq","text":"","code":"tm_seq(   from = 0,   to = 1,   power = c(\"lin\", \"sqrt\", \"sqrt_perceptual\", \"quadratic\") )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a numeric sequence — tm_seq","text":", numeric range, default 0 1 respectively power power component, number one \"lin\", \"sqrt\", \"sqrt_perceptual\", \"quadratic\", correspond 1, 0.5, 0.5716, 2 respectively. See details.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify a numeric sequence — tm_seq","text":"perceived area larger symbols often underestimated. Flannery (1971) experimentally derived method compensate symbols. compensation obtained using power exponent 0.5716 instead 0.5, setting power \"sqrt_perceptual\"","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: simple features — tm_sf","title":"Map layer: simple features — tm_sf","text":"Map layer draws simple features . Supported visual variables : fill (fill color), col (border color), size point size, shape symbol shape, lwd (line width), lty (line type), fill_alpha (fill color alpha transparency) col_alpha (border color alpha transparency).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: simple features — tm_sf","text":"","code":"tm_sf(   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   shape = tm_const(),   shape.scale = tm_scale(),   shape.legend = tm_legend(),   shape.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.free = NA,   linejoin = \"round\",   lineend = \"round\",   plot.order.list = list(polygons = tm_plot_order(\"AREA\"), lines =     tm_plot_order(\"LENGTH\"), points = tm_plot_order(\"size\")),   options = opt_tm_sf(),   zindex = NA,   group = NA,   group.control = \"check\",   ... )  opt_tm_sf(   polygons.only = \"yes\",   lines.only = \"yes\",   points_only = \"yes\",   point_per = \"feature\",   points.icon.scale = 3,   points.just = NA,   points.grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: simple features — tm_sf","text":"fill, fill.scale, fill.legend, fill.free Visual variable determines fill color. See details. col, col.scale, col.legend, col.free Visual variable determines color. See details. size, size.scale, size.legend, size.free Visual variable determines size. See details. shape, shape.scale, shape.legend, shape.free Visual variable determines shape. See details. lwd, lwd.scale, lwd.legend, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.free Visual variable determines line type. See details. fill_alpha, fill_alpha.scale, fill_alpha.legend, fill_alpha.free Visual variable determines fill color transparency. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.free Visual variable determines color transparency. See details. linejoin, lineend line join line end. See gpar() details. plot.order.list Specification order spatial features drawn. consists list three elementary geometry types: polygons, lines , points. types, drawn order, tm_plot_order() required. options options passed corresponding opt_<layer_function> function zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). ... passed tm_polygons(), tm_lines(), tm_dots() polygons.polygon geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. lines.line geometries shape object (defined tm_shape()) plotted, also geometry types (like polygons)? default \"ifany\", means TRUE case geometry collection specified. points_only point geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. point_per specification spatial points mapped geometry multi line multi polygon. One \"feature\", \"segment\" \"largest\". first generates spatial point every feature, second every segment (.e. subfeature), third largest segment (subfeature). Note last two options can significant slower. points.icon.scale scaling number determines large icons (grobs) plot mode comparison proportional symbols (bubbles). view mode, use argument grob.dim points.just justification points relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. points.grob.dim vector four values determine grob objects (see details) shown view mode. first second value width height displayed icon. third fourth value width height rendered png image used icon. Generally, third fourth value large enough render ggplot2 graphic successfully. needed view mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: simple features — tm_sf","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). See vignette visual variables. Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). See vignette facets. *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. See vignette scales. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . See vignette legends. *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram(). See vignette charts. *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: simple features — tm_sf","text":"","code":"data(World)  World$geometry[World$continent == \"Africa\"] <-    sf::st_centroid(World$geometry[World$continent == \"Africa\"]) World$geometry[World$continent == \"South America\"] <-    sf::st_cast(World$geometry[World$continent == \"South America\"],      \"MULTILINESTRING\", group_or_split = FALSE)  tm_shape(World, crs = \"+proj=robin\") +    tm_sf()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape (spatial object) specification — tm_shape","title":"Shape (spatial object) specification — tm_shape","text":"Specify shape, spatial object one spatial object class packages: sf, stars, terra.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape (spatial object) specification — tm_shape","text":"","code":"tm_shape(   shp = NULL,   bbox = NULL,   crs = NULL,   is.main = NA,   name = NULL,   unit = NULL,   filter = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shape (spatial object) specification — tm_shape","text":"shp Spatial object bbox Bounding box map (used shp main shape (see .main) crs Map projection (CRS). Can set crs object (see sf::st_crs()), proj4string, EPSG number, value \"auto\" (automatic crs recommendation), one following generic projections: c(\"laea\", \"aeqd\", \"utm\", \"pconic\", \"eqdc\", \"stere\"). See details. .main shp main shape, determines crs bounding box map? default, TRUE first tm_shape call name spatial object unit Unit coordinates filter Filter features ... passed bb (e.g. ext can used enlarge shrink bounding box)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shape (spatial object) specification — tm_shape","text":"map projection (crs) determines coordinate system spatial object processed plotted. See vignette CRS. crs can specified two places: 1) tm_shape() tm_crs(). cases, map plotted specified crs. difference first option, crs also taken account spatial transformation functions, calculation centroids cartograms. second option, crs used plotting phase. automatic crs recommendation (still work--progress) following: info available \"generic\" projects see: utm: https://proj.org/en/9.4/operations/projections/utm.html laea: https://proj.org/en/9.4/operations/projections/laea.html aeqd: https://proj.org/en/9.4/operations/projections/aeqd.html pconic: https://proj.org/en/9.4/operations/projections/pconic.html eqdc: https://proj.org/en/9.4/operations/projections/eqdc.html","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Shape (spatial object) specification — tm_shape","text":"tmap 4.0, simplify removed. Please use tmaptools::simplify_shape() instead","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape (spatial object) specification — tm_shape","text":"","code":"tm_shape(World, crs = \"auto\") +   tm_polygons()   tm_shape(World, crs = 3035, bb = \"Europe\") +   tm_polygons()   tm_shape(World, crs = \"+proj=robin\", filter = World$continent==\"Africa\") +   tm_polygons()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: symbols — tm_symbols","title":"Map layer: symbols — tm_symbols","text":"Map layer draws symbols Supported visual variables : fill (fill color), col (border color), size symbol size, shape symbol shape, lwd (line width), lty (line type), fill_alpha (fill color alpha transparency) col_alpha (border color alpha transparency).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: symbols — tm_symbols","text":"","code":"tm_symbols(   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.chart = tm_chart_none(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   shape = tm_const(),   shape.scale = tm_scale(),   shape.legend = tm_legend(),   shape.chart = tm_chart_none(),   shape.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.chart = tm_chart_none(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.chart = tm_chart_none(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.chart = tm_chart_none(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   plot.order = tm_plot_order(\"size\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_symbols(),   ... )  tm_dots(   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   plot.order = tm_plot_order(\"DATA\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_dots(),   ... )  tm_bubbles(   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.free = NA,   plot.order = tm_plot_order(\"size\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_bubbles(),   ... )  tm_squares(   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.free = NA,   plot.order = tm_plot_order(\"size\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_squares(),   ... )  tm_markers(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = \"\",   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"AREA\", reverse = FALSE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_markers(),   ... )  opt_tm_markers(   markers_on_top_of_text = FALSE,   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   shadow = FALSE,   shadow.offset.x = 0.1,   shadow.offset.y = 0.1,   just = \"center\",   along_lines = TRUE,   bg.padding = 0.4,   clustering = TRUE,   point.label = TRUE,   point.label.gap = 0.4,   point.label.method = \"SANN\",   remove_overlap = FALSE,   dots.just = NA,   dots.icon.scale = 3,   dots.grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_symbols(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_dots(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_bubbles(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_squares(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: symbols — tm_symbols","text":"size, size.scale, size.legend, size.chart, size.free Visual variable determines size. See details. fill, fill.scale, fill.legend, fill.chart, fill.free Visual variable determines fill color. See details. col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. shape, shape.scale, shape.legend, shape.chart, shape.free Visual variable determines shape. See details. lwd, lwd.scale, lwd.legend, lwd.chart, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.chart, lty.free Visual variable determines line type. See details. fill_alpha, fill_alpha.scale, fill_alpha.legend, fill_alpha.chart, fill_alpha.free Visual variable determines fill color transparency. See details. fill color alpha transparency See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). popup.vars names data variables shown popups \"view\" mode. Set popup.vars TRUE show variables shape object. Set popup.vars FALSE disable popups. Set popup.vars character vector variable names variables popups. default (NA) depends whether visual variables (e.g.fill) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument legend.format options. applicable numeric data variables. one list formatting options provided, applied numeric variables popup.vars. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set FALSE disable hover labels. default FALSE, unless id specified. case, set id, id name data variable specifies indices spatial features. used \"view\" mode. options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 text, text.scale, text.legend, text.chart, text.free Visual variable determines text. See details. fontface, fontface.scale, fontface.legend, fontface.chart, fontface.free Visual variable determines font face. See details. fontfamily font family. See gpar() details. bgcol, bgcol.scale, bgcol.legend, bgcol.chart, bgcol.free Visual variable determines background color. See Details. bgcol_alpha, bgcol_alpha.scale, bgcol_alpha.legend, bgcol_alpha.chart, bgcol_alpha.free Visual variable determines background color transparency. See Details. xmod, xmod.scale, xmod.legend, xmod.chart, xmod.free Transformation variable determines x offset. See details. ymod, ymod.scale, ymod.legend, ymod.chart, ymod.free Transformation variable determines y offset. See details. text. See details. angle, angle.scale, angle.legend, angle.chart, angle.free Rotation angle markers_on_top_of_text markers plot top text (default FALSE) points_only point geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. point_per specification spatial points mapped geometry multi line multi polygon. One \"feature\", \"segment\" \"largest\". first generates spatial point every feature, second every segment (.e. subfeature), third largest segment (subfeature). Note last two options can significant slower. on_surface case polygons, centroids computed. points surface? TRUE, slower default FALSE, centroids outside surface replaced points computed sf::st_point_on_surface(). shadow Shadow behind text. Logical color. shadow.offset.x, shadow.offset.y Shadow offset line heights just justification text relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. along_lines logical determines whether labels rotated along spatial lines. applicable spatial lines shape used. bg.padding padding background terms line heights. clustering value determines whether text labels clustered \"view\" mode. One : TRUE, FALSE, output markerClusterOptions. point.label logical determines whether labels placed automatically. default FALSE tm_text, TRUE tm_labels number labels less 500 (otherwise slow). point.label.gap numeric determines gap point label point.label.method optimization method, either \"SANN\" simulated annealing (default) \"GA\" genetic algorithm. remove_overlap logical determines whether overlapping labels removed dots.just justification text relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. dots.icon.scale scaling number determines large icons (grobs) plot mode comparison proportional symbols (bubbles). view mode, size determined icon specification (see tmap_icons) , grobs specified grob.width grob.height dots.grob.dim vector four values determine grob objects (see details) shown view mode. first second value width height displayed icon. third fourth value width height rendered png image used icon. Generally, third fourth value large enough render ggplot2 graphic successfully. needed view mode. icon.scale scaling number determines large icons (grobs) plot mode comparison proportional symbols (bubbles). view mode, use argument grob.dim grob.dim vector four values determine grob objects (see details) shown view mode. first second value width height displayed icon. third fourth value width height rendered png image used icon. Generally, third fourth value large enough render ggplot2 graphic successfully. needed view mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: symbols — tm_symbols","text":"symbol shape specification one following three options. numeric value specifies plotting character symbol. See parameter pch points last example create plot options. Note supported \"view\" mode. grob object, can ggplot2 plot object created ggplotGrob. specify multiple shapes, list grob objects required. See example proportional symbol map ggplot2 plots. icon specification, can created tmap_icons. specify multiple shapes (needed shapes argument), vector list shape specification required. shape specification options can also mixed. shapes argument, possible use named vector list, names correspond value variable specified shape argument. small multiples, list shape specification(s) provided.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: symbols — tm_symbols","text":"","code":"######################## ## plot symbol shapes ########################  # create grid of 25 points in the Atlantic atlantic_grid = cbind(expand.grid(x = -51:-47, y = 20:24), id = seq_len(25)) x = sf::st_as_sf(atlantic_grid, coords = c(\"x\", \"y\"), crs = 4326)  tm_shape(x, bbox = tmaptools::bb(x, ext = 1.2)) +   tm_symbols(shape = \"id\",          size = 2,          lwd = 2,          fill = \"orange\",          col = \"black\",          shape.scale = tm_scale_asis()) +   tm_text(\"id\", ymod = -2)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: text — tm_text","title":"Map layer: text — tm_text","text":"Map layer draws symbols Supported visual variables : text (text ) col (color), size (font size), fontface (font face).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: text — tm_text","text":"","code":"tm_text(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = NA,   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"size\", reverse = FALSE),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_text(),   ... )  tm_labels(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = \"\",   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"AREA\", reverse = FALSE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_labels(),   ... )  tm_labels_highlighted(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = \"\",   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"AREA\", reverse = FALSE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_labels(),   ... )  opt_tm_text(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   shadow = FALSE,   shadow.offset.x = 0.1,   shadow.offset.y = 0.1,   just = \"center\",   along_lines = FALSE,   bg.padding = 0.4,   clustering = FALSE,   point.label = FALSE,   point.label.gap = 0,   point.label.method = \"SANN\",   remove_overlap = FALSE )  opt_tm_labels(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   shadow = FALSE,   shadow.offset.x = 0.1,   shadow.offset.y = 0.1,   just = \"center\",   along_lines = TRUE,   bg.padding = 0.4,   clustering = FALSE,   point.label = NA,   point.label.gap = 0.4,   point.label.method = \"SANN\",   remove_overlap = FALSE )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: text — tm_text","text":"text, text.scale, text.legend, text.chart, text.free Visual variable determines text. See details. size, size.scale, size.legend, size.chart, size.free Visual variable determines size. See details. col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. fontface, fontface.scale, fontface.legend, fontface.chart, fontface.free Visual variable determines font face. See details. fontfamily font family. See gpar() details. bgcol, bgcol.scale, bgcol.legend, bgcol.chart, bgcol.free Visual variable determines background color. See Details. bgcol_alpha, bgcol_alpha.scale, bgcol_alpha.legend, bgcol_alpha.chart, bgcol_alpha.free Visual variable determines background color transparency. See Details. xmod, xmod.scale, xmod.legend, xmod.chart, xmod.free Transformation variable determines x offset. See details. ymod, ymod.scale, ymod.legend, ymod.chart, ymod.free Transformation variable determines y offset. See details. text. See details. angle, angle.scale, angle.legend, angle.chart, angle.free Rotation angle plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 points_only point geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. point_per specification spatial points mapped geometry multi line multi polygon. One \"feature\", \"segment\" \"largest\". first generates spatial point every feature, second every segment (.e. subfeature), third largest segment (subfeature). Note last two options can significant slower. on_surface case polygons, centroids computed. points surface? TRUE, slower default FALSE, centroids outside surface replaced points computed sf::st_point_on_surface(). shadow Shadow behind text. Logical color. shadow.offset.x, shadow.offset.y Shadow offset line heights just justification text relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. along_lines logical determines whether labels rotated along spatial lines. applicable spatial lines shape used. bg.padding padding background terms line heights. clustering value determines whether text labels clustered \"view\" mode. One : TRUE, FALSE, output markerClusterOptions. point.label logical determines whether labels placed automatically. default FALSE tm_text, TRUE tm_labels number labels less 500 (otherwise slow). point.label.gap numeric determines gap point label point.label.method optimization method, either \"SANN\" simulated annealing (default) \"GA\" genetic algorithm. remove_overlap logical determines whether overlapping labels removed","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: text — tm_text","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). See vignette visual variables. Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). See vignette facets. *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. See vignette scales. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . See vignette legends. *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram(). See vignette charts. *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: text — tm_text","text":"","code":"tm_shape(World, bbox = World) +   tm_text(\"name\", size=\"pop_est\", col=\"continent\",       col.scale = tm_scale_categorical(values = \"seaborn.dark\"),       col.legend = tm_legend_hide(),       size.scale = tm_scale_continuous(values.scale = 4),       size.legend = tm_legend_hide())   metro$upside_down = ifelse(sf::st_coordinates(metro)[,2] < 0, 180, 0) tm_shape(metro) +   tm_text(text = \"name\", size = \"pop2020\",       angle = \"upside_down\", size.legend = tm_legend_hide(),       col = \"upside_down\",       col.scale = tm_scale_categorical(values = c(\"#9900BB\", \"#228822\")),       col.legend = tm_legend_hide()) +   tm_title_out(\"Which Hemisphere?\", position = tm_pos_out(\"center\", \"top\", pos.v = \"bottom\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: title — tm_title","title":"Map component: title — tm_title","text":"Map component adds title","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: title — tm_title","text":"","code":"tm_title(   text,   size,   color,   padding,   fontface,   fontfamily,   alpha,   stack,   just,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   bg,   bg.color,   bg.alpha,   position,   group_id,   width,   height,   z )  tm_title_in(text, ..., position = tm_pos_in(\"left\", \"top\"))  tm_title_out(text, ..., position = tm_pos_out(\"center\", \"top\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: title — tm_title","text":"text text size font size color font color padding padding fontface font face, bold, italic fontfamily font family alpha alpha transparency text stack stack map components, either \"vertical\" \"horizontal\". just just frame frame frame drawn? frame.color frame color frame.alpha frame alpha transparancy frame.lwd frame line width frame.r Radius rounded frame corners. 0 means rounding. bg Show background? bg.color Background color bg.alpha Background transparency position position specification component: object created tm_pos_in() tm_pos_out(). , shortcut, vector two values, specifying x y coordinates. first \"left\", \"center\" \"right\" (upper case, meaning tighter map frame), second \"top\", \"center\" \"bottom\". Numeric values also supported, 0, 0 means left bottom 1, 1 right top. See also vignette positioning. case multiple components combined (stacked), use group_id specify component tm_comp_group(). group_id Component group id name. components (e.g. legends, titles, etc) group_id grouped. specifications placed (e.g. stacking, margins etc.) determined tm_comp_group() argument id correspond group_id. width, height width height component. z z index, e.g. place component relative componets ... passed tm_title()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap function to specify variables — tm_vars","title":"tmap function to specify variables — tm_vars","text":"tmap function specify variables shape object","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap function to specify variables — tm_vars","text":"","code":"tm_vars(   x = NA,   dimvalues = NULL,   n = NA,   multivariate = FALSE,   animate = FALSE )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap function to specify variables — tm_vars","text":"x variable names, variable indices, dimension name dimvalues dimension values n specified first n variables taken (first n dimension values) multivariate case multiple variables specified, serve facets (FALSE) multivariate visual variable? animate variable(s) animated? (experimental)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_view.html","id":null,"dir":"Reference","previous_headings":"","what":"View mode options — tm_view","title":"View mode options — tm_view","text":"View mode options. options specific view mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View mode options — tm_view","text":"","code":"tm_view(   use_browser,   use_WebGL,   control.position,   control.bases,   control.overlays,   control.collapse,   set_bounds,   set_view,   set_zoom_limits,   use_circle_markers,   leaflet.options,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View mode options — tm_view","text":"use_browser TRUE opens external browser, FALSE (default) opens internal IDEs (e.g. RStudio) browser. use_WebGL use webGL points, lines, polygons. large spatial objects, much faster standard leaflet layer functions. However, can always used two reasons. First, number visual variables limited; fill, size, color (lines) supported. Second, projected CRS's supported. Furthermore, drawback polygon borders sharp. default TRUE large spatial objects (500 features) mentioned criteria met. default TRUE visual variables used. control.position position control. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details control.bases base layers control.overlays overlay layers control.collapse box collapsed expanded? set_bounds logical determines whether maximum bounds set, bounding box. applicable plot mode. view mode, passed setMaxBounds() set_view numeric vector determines view. Either vector three: lng, lat, zoom, single value: zoom. See setView(). applicable bbox specified set_zoom_limits numeric vector two set minimum maximum zoom levels (see tileOptions()). use_circle_markers TRUE (default) circle shaped symbols (e.g. tm_dots() tm_symbols()) rendered addCircleMarkers() instead addMarkers(). former faster, latter can support symbol since based icons leaflet.options options passed leafletOptions() ... catch deprecated arguments","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_xlab.html","id":null,"dir":"Reference","previous_headings":"","what":"Map: x and y labels — tm_xlab","title":"Map: x and y labels — tm_xlab","text":"x y labels maps","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_xlab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map: x and y labels — tm_xlab","text":"","code":"tm_xlab(text, size, color, rotation, space, fontface, fontfamily, alpha, side)  tm_ylab(text, size, color, rotation, space, fontface, fontfamily, alpha, side)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_xlab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map: x and y labels — tm_xlab","text":"text text title size font size title color color rotation rotation degrees space space label map number line heights fontface font face fontfamily font family alpha alpha transparency text side side: \"top\" \"bottom\" tm_xlab \"left\" \"right\" tm_ylab","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated: format — tmap_format","title":"Deprecated: format — tmap_format","text":"tmap < 4.0 possible set shape-specific options, margins legend position. However, become superfluous tmap > 4.0 legends default placed outside map area. needed, shape-specific set options can stored style tmap_options_save.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated: format — tmap_format","text":"","code":"tmap_format(format)  tmap_format_add(..., name)  tm_format(format, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated: format — tmap_format","text":"format Name format ... used name Name format","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-element.html","id":null,"dir":"Reference","previous_headings":"","what":"Stacking of tmap elements — tmap-element","title":"Stacking of tmap elements — tmap-element","text":"plus operator allows stack tmap elements (functions prefix tm_)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stacking of tmap elements — tmap-element","text":"","code":"# S3 method for class 'tmap' e1 + e2"},{"path":"https://r-tmap.github.io/tmap/reference/tmap-element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stacking of tmap elements — tmap-element","text":"e1 first tmap element e2 second tmap element","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Thematic Map Visualization — tmap-package","title":"Thematic Map Visualization — tmap-package","text":"Thematic maps geographical maps spatial data distributions visualized. package offers flexible, layer-based, easy use approach create thematic maps, choropleths bubble maps. based grammar graphics, resembles syntax ggplot2.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Thematic Map Visualization — tmap-package","text":"Tennekes, M., 2018, tmap: Thematic Maps R, Journal Statistical Software, 84(6), 1-39, doi:10.18637/jss.v084.i06","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Thematic Map Visualization — tmap-package","text":"Martijn Tennekes mtennekes@gmail.com","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapAddLayerOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","title":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","text":"Internal tmap function add default value layer functions","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapAddLayerOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","text":"","code":"tmapAddLayerOptions(option, id, value)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapAddLayerOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","text":"option, one : \"value.const\", \"value.na\", \"value.blank\", \"values.var\", 'values.range', \"value.neutral\", \"scales.var\" id name visual variable layer, format \"x.y\", x visual variable y layer. also possible set x ; applies layer functions. value value","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta1.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","title":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","text":"Internal method extracts meta data shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","text":"","code":"tmapGetShapeMeta1(shp, o)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","text":"shp shape object o list options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta2.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","title":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","text":"Internal method extracts meta data shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","text":"","code":"tmapGetShapeMeta2(shp, smeta, o)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","text":"shp shape smeta meta (tmapGetShapeMeta1()) o list options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method for submitting a new mode — tmapMode","title":"Internal method for submitting a new mode — tmapMode","text":"Internal method submitting new mode","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method for submitting a new mode — tmapMode","text":"","code":"tmapMode(id, name, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapMode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method for submitting a new mode — tmapMode","text":"id id mode: please use lowercase one-word. used tmap_mode(). name name mode: please use title case. used recognize internal functions, e.g. tmapLeafletInit ... mode specific options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapShape.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that processed shape objects — tmapShape","title":"Internal method that processed shape objects — tmapShape","text":"Internal method processed shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapShape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that processed shape objects — tmapShape","text":"","code":"tmapShape(shp, is.main, crs, bbox, unit, filter, shp_name, smeta, o, tmf)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapShape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that processed shape objects — tmapShape","text":"shp shp .main .main crs crs bbox Bounding box unit unit filter filter shp_name shp_name smeta smeta o o tmf tmf","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSplitShp.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that split shape objects — tmapSplitShp","title":"Internal method that split shape objects — tmapSplitShp","text":"Internal method split shape objects. far, used split stars object (dimension attributes)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSplitShp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that split shape objects — tmapSplitShp","text":"","code":"tmapSplitShp(shp, split_stars_dim, smeta)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapSplitShp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that split shape objects — tmapSplitShp","text":"shp shape split_stars_dim name dimension split (\"\" skip)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSubsetShp.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that subsets data from shape objects — tmapSubsetShp","title":"Internal method that subsets data from shape objects — tmapSubsetShp","text":"Internal method subsets data shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSubsetShp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that subsets data from shape objects — tmapSubsetShp","text":"","code":"tmapSubsetShp(shp, vars)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapSubsetShp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that subsets data from shape objects — tmapSubsetShp","text":"shp shape vars vector variable names","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create animation — tmap_animation","title":"Create animation — tmap_animation","text":"Create gif animation video tmap plot.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create animation — tmap_animation","text":"","code":"tmap_animation(   tm,   filename = NULL,   width = NA,   height = NA,   dpi = NA,   delay = 40,   fps = NA,   loop = TRUE,   outer.margins = NA,   asp = NULL,   scale = NA,   restart.delay = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create animation — tmap_animation","text":"tm tmap list tmap objects. tm tmap object, facets created, nrow ncol tm_facets() set 1 order create one map per frame. filename filename. omitted (default), animation shown viewer browser. specified, gif file video file (.e. mp4). package gifski required create gif animation. package av (uses FFmpeg library) required video formats. mp4 format recommended many video formats supported, wmv, avi, mkv. width, height Dimensions animation file (pixels). Required tm list, recommended specify advance tm tmap object. specified latter case, determined aspect ratio map. dpi dots per inch. default 100, can set option animation.dpi tmap_options(). delay delay time images (1/100th second). See also fps fps frames per second, calculated 100 / delay. fps specified, delay set 100/fps. loop logical determined whether animation looped, integer value determines many times animation looped. outer.margins (passed tmap_save()) overrides outer.margins argument tm_layout() (unless set NA) asp (passed tmap_save()) specified, overrides asp argument tm_layout(). Tip: set 0 map frame placed edges image. scale (passed tmap_save()) overrides scale argument tm_layout() (unless set NA) restart.delay used anymore. ... arguments passed av::av_encode_video()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create animation — tmap_animation","text":"tmap plots supported, series R plots.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create animation — tmap_animation","text":"","code":"if (FALSE) { # \\dontrun{ data(NLD_prov)  m1 <- tm_shape(NLD_prov) +          tm_polygons(\"yellow\") +     tm_facets(along = \"name\")  tmap_animation(m1, delay=40)  data(World, metro)  m2 <- tm_shape(World, projection = \"+proj=eck4\", simplify = 0.5) +           tm_fill() +       tm_shape(metro) +            tm_bubbles(size = paste0(\"pop\", seq(1970, 2030, by=10)),                  col = \"purple\",                  border.col = \"black\", border.alpha = .5,                  scale = 2) +       tm_facets(free.scales.symbol.size = FALSE, nrow=1,ncol=1) +        tm_format(\"World\")  tmap_animation(m2, delay=100, outer.margins = 0)  m3 <- lapply(seq(50, 85, by = 5), function(age) {   World$at_most <- World$life_exp <= age   World_sel <- World[which((World$life_exp <= age) & (World$life_exp > (age - 5))), ]   tm_shape(World) +     tm_polygons(\"at_most\", palette = c(\"gray95\", \"gold\"), legend.show = FALSE) +     tm_shape(World_sel) +     tm_text(\"name\", size = \"AREA\", root = 5, remove_overlap = TRUE) +     tm_layout(main.title = paste0(\"Life expectency at most \", age), frame = FALSE) })  tmap_animation(m3, width = 1200, height = 600, delay = 100)  m4 <- tm_shape(World) +   tm_polygons() + tm_shape(metro) +   tm_bubbles(col = \"red\") +   tm_text(\"name\", ymod = -1) + tm_facets(by = \"name\", free.coords = FALSE, nrow = 1, ncol = 1) +   tm_layout(panel.show = FALSE, frame = FALSE)  tmap_animation(m4, filename = \"World_cities.mp4\",      width=1200, height = 600, fps = 2, outer.margins = 0) } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange small multiples in grid layout — tmap_arrange","title":"Arrange small multiples in grid layout — tmap_arrange","text":"Arrange small multiples grid layout. Normally, small multiples created specifying multiple variables one aesthetic specifying argument (see tm_facets()). function can used arrange custom small multiples grid layout.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange small multiples in grid layout — tmap_arrange","text":"","code":"tmap_arrange(   ...,   ncol = NA,   nrow = NA,   widths = NA,   heights = NA,   sync = FALSE,   asp = 0,   outer.margins = 0.02 )  # S3 method for class 'tmap_arrange' knit_print(x, ..., options = NULL)  # S3 method for class 'tmap_arrange' print(x, knit = FALSE, ..., options = NULL)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange small multiples in grid layout — tmap_arrange","text":"... tmap objects one list tmap objects. number multiples can plot limited (see details). ncol number columns nrow number rows widths vector column widths. add 1 length equal ncol. heights vector row heights. add 1 length equal nrow. sync logical. navigation view mode (zooming panning) synchronized? default FALSE. asp aspect ratio. aspect ratio map. Normally, controlled asp argument tm_layout() (also tmap option). argument overwrite , unless set NULL. default value asp 0, means aspect ratio adjusted size device divided number columns rows. asp set NA, also default value tm_layout(), aspect ratio adjusted used shapes. outer.margins outer.margins, numeric vector four single value. defines outer margins multiple. overwrite outer.margins argument tm_layout(), unless set NULL. x tmap_arrange object (returned tmap_arrange()). options options passed knitr::knit_print() knit knitr::knit_print() enabled, normal base::print() function?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arrange small multiples in grid layout — tmap_arrange","text":"global option tmap.limits controls limit number facets plotted. default, tmap_options(tmap.limits = c(facets.view=4, facets.plot=64)). maximum number interactive facets set four since otherwise may become slow.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange small multiples in grid layout — tmap_arrange","text":"","code":"tm1 = tm_shape(World) + tm_polygons(\"HPI\") tm2 = tm_shape(metro) + tm_bubbles(size = \"pop2020\")  tmap_arrange(tm1, tm2)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_design_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the design mode — tmap_design_mode","title":"Set the design mode — tmap_design_mode","text":"-called \"design mode\" enabled, inner outer margins, legend position, aspect ratio shown explicitly plot mode. Also, information aspect ratios printed console. function sets global option tmap.design.mode. can used toggle function without arguments.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_design_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the design mode — tmap_design_mode","text":"","code":"tmap_design_mode(design.mode)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_design_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the design mode — tmap_design_mode","text":"design.mode Logical value determines design mode. omitted design mode toggled.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_devel_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the development mode — tmap_devel_mode","title":"Set the development mode — tmap_devel_mode","text":"-called \"development mode\" enabled, helpful messages timings printed console","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_devel_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the development mode — tmap_devel_mode","text":"","code":"tmap_devel_mode(devel.mode)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_devel_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the development mode — tmap_devel_mode","text":"devel.mode logical value determines development mode. omitted development mode toggled.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify icons — tmap_icons","title":"Specify icons — tmap_icons","text":"Specifies icons png images, can used markers thematic maps. function marker_icon() specification default marker.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify icons — tmap_icons","text":"","code":"tmap_icons(   file,   names = NULL,   width = 48,   height = 48,   keep.asp = TRUE,   just = c(\"center\", \"center\"),   merge = NA,   as.local = TRUE,   ... )  marker_icon()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify icons — tmap_icons","text":"file character value/vector containing file path(s) url(s). names names given icons. Useful icons assigned factor levels. width width icon. keep.asp, interpreted maximum width. height height icon. keep.asp, interpreted maximum height. keep.asp keep aspect ratio png image. TRUE aspect ratio differs width/height, either width height adjusted accordingly. just justification icons relative point coordinates. first value specifies horizontal second value vertical justification. Possible values : \"left\" , \"right\", \"center\", \"bottom\", \"top\". Numeric values 0 specify left alignment 1 right alignment. default value just c(\"center\", \"center\"). merge merge icons one icon list (see return value)? FALSE, list created per file. default TRUE, unless names specified. .local file url, saved local temporary file? ... arguments passed leaflet::icons(). iconWidth, iconHeight, iconAnchorX, iconAnchorY specified, override width height, just.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify icons — tmap_icons","text":"icon data (see leaflet::icons())","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal methods for tmap extensions — toTitleCase","title":"Internal methods for tmap extensions — toTitleCase","text":"Internal methods tmap extensions","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal methods for tmap extensions — toTitleCase","text":"","code":"toTitleCase(x)  tm_element(..., subclass = NULL)  tm_element_list(...)  tmapChartBinned(chart, bin_colors, breaks_def, na.show, x1)  tmapChartBinned2d(chart, chart1, chart2)  tmapChartBinned2d_numcat(chart, chart1, chart2)  tmapChartBinned2d_numnum(chart, chart1, chart2)  tmapChartBinned2d_catcat(chart, chart1, chart2)  tmapChartRaw(chart, na.show, x1, ...)  tmapChartRaw_nna(chart, na.show, x1, ...)  tmapChartNone(chart, na.show, x1, ...)  tmapChartPass(chart, na.show, x1, ...)  tmapChartBinned_categorical(chart, bin_colors, breaks_def, na.show, x1)  tmapChartBinned_numeric(chart, bin_colors, breaks_def, na.show, x1)  tmapGpar(   fill = NULL,   col = NULL,   shape = NULL,   size = NULL,   fill_alpha = NULL,   col_alpha = NULL,   lty = NULL,   lwd = NULL,   linejoin = NULL,   lineend = NULL,   ... )  tmapTpar(...)  lwd_to_mm(value, unit = \"bigpts\")  tmapGridLines(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridPolygons(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridRaster(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridSymbols(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridText(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletPolygons(   shpTM,   dt,   pdt,   popup.format,   hdt,   idt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletLines(   shpTM,   dt,   pdt,   popup.format,   hdt,   idt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o )  tmapLeafletSymbols(   shpTM,   dt,   pdt,   popup.format,   hdt,   idt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletRaster(   shpTM,   dt,   gp,   pdt,   popup.format,   hdt,   idt,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletText(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  .TMAP  .TMAP_LEAFLET  .TMAP_GRID  tmapScaleAsIs(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleBivariate(   x1,   x2,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleCategorical(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleIntervals(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleRank(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapUsrCls(x)  format_aes_results(values, ord = NULL, legend, chart)  chart_save(legend)  data_type(x)  data_class(x, check_for_color_class = FALSE, midpoint_enabled = FALSE)  tmapScale(aes, value, scale, legend, chart, free)  tmapScaleAuto(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE,   ... )  tmapValuesCheck_col(x, is_var = TRUE)  tmapValuesCheck_fill(x, is_var = TRUE)  tmapValuesCheck_bgcol(x, is_var = TRUE)  tmapValuesCheck_shape(x, is_var = TRUE)  tmapValuesCheck_size(x, is_var = TRUE)  tmapValuesCheck_area(x, is_var = TRUE)  tmapValuesCheck_lwd(x, is_var = TRUE)  tmapValuesCheck_lty(x, is_var = TRUE)  tmapValuesCheck_xmod(x, is_var = TRUE)  tmapValuesCheck_angle(x, is_var = TRUE)  tmapValuesCheck_col_alpha(x, is_var = TRUE)  tmapValuesCheck_fill_alpha(x, is_var = TRUE)  tmapValuesCheck_bgcol_alpha(x, is_var = TRUE)  tmapValuesCheck_area(x, is_var = TRUE)  tmapValuesCheck_text(x, is_var = TRUE)  tmapValuesCheck_fontface(x, is_var = TRUE)  tmapValuesIsDiv_fill(x)  tmapValuesIsDiv_col(x)  tmapValuesIsDiv_bgcol(x)  tmapValuesIsDiv_size(x)  tmapValuesIsDiv_area(x)  tmapValuesIsDiv_lwd(x)  tmapValuesIsDiv_lty(x)  tmapValuesIsDiv_col_alpha(x)  tmapValuesIsDiv_fill_alpha(x)  tmapValuesIsDiv_bgcol_alpha(x)  tmapValuesIsDiv_area(x)  tmapValuesIsDiv_xmod(x)  tmapValuesIsDiv_angle(x)  tmapValuesIsDiv_shape(x)  tmapValuesIsDiv_text(x)  tmapValuesIsDiv_fontface(x)  tmapValuesRange_fill(x, n, isdiv)  tmapValuesRange_col(x, n, isdiv)  tmapValuesRange_bgcol(x, n, isdiv)  tmapValuesRange_shape(x, n, isdiv)  tmapValuesRange_lty(x, n, isdiv)  tmapValuesRange_size(x, n, isdiv)  tmapValuesRange_area(x, n, isdiv)  tmapValuesRange_lwd(x, n, isdiv)  tmapValuesRange_col_alpha(x, n, isdiv)  tmapValuesRange_fill_alpha(x, n, isdiv)  tmapValuesRange_bgcol_alpha(x, n, isdiv)  tmapValuesRange_area(x, n, isdiv)  tmapValuesRange_xmod(x, n, isdiv)  tmapValuesRange_angle(x, n, isdiv)  tmapValuesRange_text(x, n, isdiv)  tmapValuesRange_fontface(x, n, isdiv)  tmapValuesVV_fill(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o,   aes = \"fill\" )  tmapValuesVV_col(...)  tmapValuesVV_bgcol(...)  tmapValuesVV_shape(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_lty(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_size(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_area(...)  tmapValuesVV_lwd(...)  tmapValuesVV_col_alpha(...)  tmapValuesVV_fill_alpha(...)  tmapValuesVV_bgcol_alpha(...)  tmapValuesVV_area(...)  tmapValuesVV_xmod(...)  tmapValuesVV_angle(...)  tmapValuesVV_text(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_fontface(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesSubmit_col(x, args)  tmapValuesSubmit_fill(x, args)  tmapValuesSubmit_bgcol(x, args)  tmapValuesSubmit_size(x, args)  tmapValuesSubmit_area(x, args)  tmapValuesSubmit_xmod(x, args)  tmapValuesSubmit_ymod(x, args)  tmapValuesSubmit_angle(x, args)  tmapValuesSubmit_lwd(x, args)  tmapValuesSubmit_lty(x, args)  tmapValuesSubmit_shape(x, args)  tmapValuesSubmit_col_alpha(x, args)  tmapValuesSubmit_fill_alpha(x, args)  tmapValuesSubmit_bgcol_alpha(x, args)  tmapValuesSubmit_text(x, args)  tmapValuesSubmit_fontface(x, args)  tmapValuesScale_col(x, scale)  tmapValuesScale_fill(x, scale)  tmapValuesScale_bgcol(x, scale)  tmapValuesScale_size(x, scale)  tmapValuesScale_area(x, scale)  tmapValuesScale_lwd(x, scale)  tmapValuesScale_lty(x, scale)  tmapValuesScale_shape(x, scale)  tmapValuesScale_col_alpha(x, scale)  tmapValuesScale_fill_alpha(x, scale)  tmapValuesScale_bgcol_alpha(x, scale)  tmapValuesScale_text(x, scale)  tmapValuesScale_fontface(x, scale)  tmapValuesScale_xmod(x, scale)  tmapValuesScale_angle(x, scale)  tmapValuesColorize_col(x, pc)  tmapValuesColorize_fill(x, pc)  tmapValuesColorize_bgcol(x, pc)  tmapValuesColorize_size(x, pc)  tmapValuesColorize_area(x, pc)  tmapValuesColorize_lwd(x, pc)  tmapValuesColorize_lty(x, pc)  tmapValuesColorize_shape(x, pc)  tmapValuesColorize_col_alpha(x, pc)  tmapValuesColorize_fill_alpha(x, pc)  tmapValuesColorize_bgcol_alpha(x, pc)  tmapValuesColorize_text(x, pc)  tmapValuesColorize_fontface(x, pc)  tmapValuesColorize_xmod(x, pc)  tmapValuesColorize_angle(x, pc)  tmapSeq(s, n = NULL)  transform_values(x, lim, rng, power, scale, include.neutral = TRUE)  tmapValuesCVV_fill(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_col(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_bgcol(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_size(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_area(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_lwd(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_col_alpha(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_fill_alpha(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_bgcol_alpha(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_area(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_xmod(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_ymod(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_angle(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_shape(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_lty(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_text(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_fontface(x, value.na, n, range, scale, rep, o)  tmapValuesBVV_fill(x, value.na, m, n, scale, rep, o)  tmapValuesBVV_col(x, value.na, m, n, scale, rep, o)  tmapValuesBVV_bgcol(x, value.na, m, n, scale, rep, o)  tmapValuesCheck_num(x, is_var = TRUE)  tmapValuesIsDiv_num(x)  tmapValuesRange_num(x, n, isdiv)  tmapValuesVV_num(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesSubmit_num(x, args)  tmapValuesScale_num(x, scale)  tmapValuesColorize_num(x, pc)  tmapValuesCVV_num(x, value.na, n, range, scale, rep, o)  tmapValuesCheck_skip(x, is_var)  tmapValuesIsDiv_skip(x)  tmapValuesRange_skip(x, n, isdiv)  tmapValuesVV_skip(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesSubmit_skip(x, args)  tmapValuesScale_skip(x, scale)  tmapValuesColorize_skip(x, pc)  tmapValuesCVV_skip(x, value.na, n, range, scale, rep, o)  tmapTransCentroid(   shpTM,   xmod = NULL,   ymod = NULL,   ord__,   plot.order,   args,   scale )  tmapTransRaster(shpTM, ord__, plot.order, args)  tmapTransPolygons(shpTM, ord__, plot.order, args, scale)  tmapTransLines(shpTM, ord__, plot.order, args, scale)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal methods for tmap extensions — toTitleCase","text":"object class environment length 9. object class environment length 0. object class environment length 0.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal methods for tmap extensions — toTitleCase","text":"... args subclass subclass fill, col, shape, size, fill_alpha, col_alpha, lty, lwd, linejoin, lineend visual variables shpTM shpTM scale scale args args xmod, ymod xmod ymod ord__ ord plot.order plot.order","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_last.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the last map to be modified or created — tmap_last","title":"Retrieve the last map to be modified or created — tmap_last","text":"Retrieve last map modified created. Works way ggplot2::last_plot(), although difference: tmap_last() returns last call instead stacked tmap-elements.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_last.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the last map to be modified or created — tmap_last","text":"","code":"tmap_last()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_last.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the last map to be modified or created — tmap_last","text":"call","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Export tmap to the format of the used graphics mode — tmap_leaflet","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"tmap_grob() returns grob object (\"plot\" mode) tmap_leaflet() leaflet object (\"view\" mode).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"","code":"tmap_leaflet(x, show = FALSE, ...)  tmap_grob(x, asp = NA, scale = 1, show = FALSE, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"x tmap object. show show map? ... Arguments passed print.tmap return.asp aspect ratio returned? vp viewport (\"plot\" mode) knit logical, knit? .shiny logical, map drawn shiny? proxy logical, .shiny, tmapProxy() used? options vector options asp, scale desired aspect ratio scale map. applicable \"plot\" mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"tmap_grob() returns grob object (\"plot\" mode) tmap_leaflet() leaflet object (\"view\" mode). case small multiples shown, list returned.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"","code":"map = tm_shape(World) + tm_polygons() tmap_leaflet(map, show = TRUE)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Set tmap mode to static plotting or interactive viewing — tmap_mode","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"tmap_mode() informs current mode (called without argument). ttm() toggles recent two modes. ttmp() ttm() calls tmap_last() display last map new mode. rtm() rotate modes rtmp() rtm() calls tmap_last() display last map new mode. Set tmap mode static plotting interactive viewing. global option tmap.mode determines whether thematic maps plot graphics device, shown interactive leaflet map (see also tmap_options(). function tmap_mode() wrapper set global option. convenient function ttm(), stands toggle thematic map, toggle switch two modes. function ttmp() stands toggle thematic map print last map: ttm() followed tmap_last(); order words, shows last map mode. recommended use tmap_mode() scripts ttm()/ttmp() console.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"","code":"tmap_mode(mode = NULL)  ttm()  rtm()  ttmp()  rtmp()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"mode One \"plot\" \"view\". See Details info.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"tmap_mode() returns current tmap mode invisibly (called without argument). Otherwise, returns previous mode. ttm() switches mode returns previous tmap mode invisibly. previous tmap mode switching.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"mode-plot-","dir":"Reference","previous_headings":"","what":"mode = \"plot\"","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"Thematic maps shown graphics device. default mode, supports tmap's features, small multiples (see tm_facets()) extensive layout settings (see tm_layout()). recommended use tmap_save() saving static maps.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"mode-view-","dir":"Reference","previous_headings":"","what":"mode = \"view\"","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"Thematic maps viewed interactively web browser RStudio's Viewer pane. Maps fully interactive tiles OpenStreetMap map providers (see tm_tiles()). See also tm_view() options related \"view\" mode. mode generates leaflet::leaflet() widget, can also directly obtained tmap_leaflet(). R Markdown, possible publish HTML page. However, couple constraints comparison \"plot\":","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"Tennekes, M., 2018, tmap: Thematic Maps R, Journal Statistical Software, 84(6), 1-39, doi:10.18637/jss.v084.i06","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"","code":"current.mode = tmap_mode() #> ℹ Current tmap mode is \"plot\". #> ℹ Call `tmap::ttm()` to switch to mode \"view\".  tmap_mode(\"plot\") #> ℹ tmap mode set to \"plot\".  tm_shape(World) + tm_polygons(\"HPI\")   tmap_mode(\"view\") #> ℹ tmap mode set to \"view\".  tm_shape(World) + tm_polygons(\"HPI\")  ttm() #> ℹ tmap mode set to \"plot\". #> ℹ switch back to \"view\" mode with `tmap::ttm()`  tm_shape(World) + tm_polygons(\"HPI\")   tmap_mode(current.mode) #> ℹ tmap mode set to \"plot\"."},{"path":"https://r-tmap.github.io/tmap/reference/tmap_options.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap options — tm_check_fix","title":"tmap options — tm_check_fix","text":"Get set tmap options globally. map specific options, recommend use tm_options() tm_layout() via layout-related options can set. tmap_options() functions similar base::options().","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap options — tm_check_fix","text":"","code":"tm_check_fix()  tmap_options(   ...,   crs,   facet.max,   facet.flip,   free.scales,   raster.max_cells,   raster.warp,   show.messages,   show.warnings,   output.format,   output.size,   output.dpi,   animation.dpi,   value.const,   value.na,   value.null,   value.blank,   values.var,   values.range,   value.neutral,   values.scale,   scales.var,   scale.misc.args,   continuous.nclass_per_legend_break,   continuous.nclasses,   label.format,   label.na,   scale,   asp,   bg,   bg.color,   outer.bg,   outer.bg.color,   frame,   frame.color,   frame.alpha,   frame.lwd,   frame.r,   frame.double_line,   outer.margins,   inner.margins,   inner.margins.extra,   meta.margins,   meta.auto_margins,   between_margin,   panel.margin,   grid.mark.height,   xylab.height,   coords.height,   xlab.show,   xlab.text,   xlab.size,   xlab.color,   xlab.rotation,   xlab.space,   xlab.fontface,   xlab.fontfamily,   xlab.alpha,   xlab.side,   ylab.show,   ylab.text,   ylab.size,   ylab.color,   ylab.rotation,   ylab.space,   ylab.fontface,   ylab.fontfamily,   ylab.alpha,   ylab.side,   panel.type,   panel.wrap.pos,   panel.xtab.pos,   unit,   color.sepia_intensity,   color.saturation,   color_vision_deficiency_sim,   text.fontface,   text.fontfamily,   text.alpha,   component.position,   component.offset,   component.stack_margin,   component.autoscale,   component.resize_as_group,   component.frame_combine,   component.stack,   legend.stack,   chart.stack,   component.equalize,   component.frame,   component.frame.color,   component.frame.alpha,   component.frame.lwd,   component.frame.r,   component.bg,   component.bg.color,   component.bg.alpha,   legend.show,   legend.design,   legend.orientation,   legend.position,   legend.width,   legend.height,   legend.reverse,   legend.na.show,   legend.title.color,   legend.title.size,   legend.title.fontface,   legend.title.fontfamily,   legend.title.alpha,   legend.xlab.color,   legend.xlab.size,   legend.xlab.fontface,   legend.xlab.fontfamily,   legend.xlab.alpha,   legend.ylab.color,   legend.ylab.size,   legend.ylab.fontface,   legend.ylab.fontfamily,   legend.ylab.alpha,   legend.text.color,   legend.text.size,   legend.text.fontface,   legend.text.fontfamily,   legend.text.alpha,   legend.frame,   legend.frame.color,   legend.frame.alpha,   legend.frame.lwd,   legend.frame.r,   legend.bg,   legend.bg.color,   legend.bg.alpha,   legend.only,   legend.absolute_fontsize,   legend.settings.standard.portrait,   legend.settings.standard.landscape,   add_legend.position,   chart.show,   chart.plot.axis.x,   chart.plot.axis.y,   chart.position,   chart.width,   chart.height,   chart.reverse,   chart.na.show,   chart.title.color,   chart.title.size,   chart.title.fontface,   chart.title.fontfamily,   chart.title.alpha,   chart.xlab.color,   chart.xlab.size,   chart.xlab.fontface,   chart.xlab.fontfamily,   chart.xlab.alpha,   chart.ylab.color,   chart.ylab.size,   chart.ylab.fontface,   chart.ylab.fontfamily,   chart.ylab.alpha,   chart.text.color,   chart.text.size,   chart.text.fontface,   chart.text.fontfamily,   chart.text.alpha,   chart.frame,   chart.frame.color,   chart.frame.alpha,   chart.frame.lwd,   chart.frame.r,   chart.bg,   chart.bg.color,   chart.bg.alpha,   chart.object.color,   title.size,   title.color,   title.fontface,   title.fontfamily,   title.alpha,   title.padding,   title.frame,   title.frame.color,   title.frame.alpha,   title.frame.lwd,   title.frame.r,   title.position,   title.width,   credits.size,   credits.color,   credits.fontface,   credits.fontfamily,   credits.alpha,   credits.padding,   credits.position,   credits.width,   credits.height,   compass.north,   compass.type,   compass.text.size,   compass.size,   compass.show.labels,   compass.cardinal.directions,   compass.text.color,   compass.color.dark,   compass.color.light,   compass.lwd,   compass.margins,   compass.position,   inset.position,   logo.height,   logo.margins,   logo.between_margin,   logo.position,   inset_map.height,   inset_map.width,   inset_map.margins,   inset_map.between_margin,   inset_map.position,   inset_map.frame,   inset.height,   inset.width,   inset.margins,   inset.between_margin,   inset.frame,   inset.bg,   inset.bg.color,   inset.bg.alpha,   inset_grob.height,   inset_grob.width,   inset_gg.height,   inset_gg.width,   scalebar.breaks,   scalebar.width,   scalebar.text.size,   scalebar.text.color,   scalebar.text.fontface,   scalebar.text.fontfamily,   scalebar.color.dark,   scalebar.color.light,   scalebar.lwd,   scalebar.size,   scalebar.margins,   scalebar.position,   grid.show,   grid.labels.pos,   grid.x,   grid.y,   grid.n.x,   grid.n.y,   grid.crs,   grid.col,   grid.lwd,   grid.alpha,   grid.labels.show,   grid.labels.size,   grid.labels.col,   grid.labels.fontface,   grid.labels.fontfamily,   grid.labels.rot,   grid.labels.format,   grid.labels.cardinal,   grid.labels.margin.x,   grid.labels.margin.y,   grid.labels.space.x,   grid.labels.space.y,   grid.labels.inside_frame,   grid.ticks,   grid.lines,   grid.ndiscr,   mouse_coordinates.position,   minimap.server,   minimap.toggle,   minimap.position,   panel.show,   panel.labels,   panel.label.size,   panel.label.color,   panel.label.fontface,   panel.label.fontfamily,   panel.label.alpha,   panel.label.bg,   panel.label.bg.color,   panel.label.bg.alpha,   panel.label.frame,   panel.label.frame.color,   panel.label.frame.alpha,   panel.label.frame.lwd,   panel.label.frame.r,   panel.label.height,   panel.label.rot,   qtm.scalebar,   qtm.minimap,   qtm.mouse_coordinates,   earth_boundary,   earth_boundary.color,   earth_boundary.lwd,   earth_datum,   space.color,   check_and_fix,   basemap.show,   basemap.server,   basemap.alpha,   basemap.zoom,   tiles.show,   tiles.server,   tiles.alpha,   tiles.zoom,   attr.color,   crs_extra,   crs_global,   crs_basemap,   use_gradient,   use_browser,   use_WebGL,   control.position,   control.bases,   control.overlays,   control.collapse,   set_bounds,   set_view,   set_zoom_limits,   use_circle_markers,   leaflet.options,   title = NULL,   main.title = NULL,   main.title.size = NULL,   main.title.color = NULL,   main.title.fontface = NULL,   main.title.fontfamily = NULL,   main.title.position = NULL,   fontface = NULL,   fontfamily = NULL )  tmap_options_mode(   mode = NA,   style = NULL,   mode.specific = TRUE,   default.options = FALSE )  tmap_options_diff()  tmap_options_reset()  tmap_options_save(style)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap options — tm_check_fix","text":"... List tmap options set, option names (characters) returned (see details) crs Map crs (see tm_shape()). NA means crs specified tm_shape(). crs used transformation functions defined tm_shape(). facet.max Maximum number facets facet.flip facets flipped (case facet wrap)? can also set via tm_facets_flip() free.scales backward compatibility: value set, used impute free arguments layer functions raster.max_cells Maximum number raster grid cells. Can mode specific c(plot = 3000, view = 1000, 1000) (last value fall back default) raster.warp rasters warped transformed case different projection (crs) used? Warping creates new regular raster target crs, whereas transforming creates (usually non-regular) raster target crs. former lossy, much faster therefore default. different projection (crs) used, (usually) regular raster show.messages Show messages? show.warnings Show warnings? output.format Output format output.size Output size output.dpi Output dpi animation.dpi Output dpi animations value.const Default visual value constants e.g. default fill color tm_shape(World) + tm_polygons(). list required per visual variable value. value.na Default visual values used visualize NA data values. list required per visual variable value. value.null Default visual values used visualize null (--scope) data values. list required per visual variable value. value.blank Default visual values correspond blank. color \"#00000000\" meaning transparent. list required per visual variable value. values.var Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.range Default range values. See values.range tm_scale_categorical(). list required per visual variable value. value.neutral Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.scale Default scales (object sizes) values. See values.range tm_scale_categorical(). list required per visual variable value. scales.var Default scale functions per visual variable type data variable. list required per visual variable per data type. scale.misc.args Default values scale function-specific arguments. list required per scale function optional per visual variable. continuous.nclass_per_legend_break number continuous legend breaks within one 'unit' (label).  default value 50. continuous.nclasses number classes continuous scale. odd.  default value 101. label.format Format labels (legend.format tmap v3). label.na Default label missing values. scale Overall scale map asp Aspect ratio map. asp set NA (default) aspect ratio adjusted used shapes. set 0 aspect ratio adjusted size device divided number columns rows. bg Draw map background? bg.color Background color map. outer.bg Draw map background (outside frame)? outer.bg.color Background color map outside frame. frame Draw map frame? frame.color color frame. frame.alpha alpha transparency frame. frame.lwd line width frame. See graphics::par, option 'lwd'. frame.r r (radius) frame. frame.double_line double line frame. TRUE FALSE. outer.margins margins outer space (outside frame. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins margins inner space (inside frame). vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins.extra extra arguments margins inner space (inside frame). list arguments. meta.margins margins meta. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). meta.auto_margins auto_margins meta. between_margin Margin map. panel.margin margin panel. grid.mark.height height mark grid. xylab.height height xylab. coords.height height coords. xlab.show visibility xlab. TRUE FALSE. xlab.text text xlab. xlab.size size xlab. xlab.color color xlab. xlab.rotation rotation xlab. xlab.space space xlab. terms number text line heights. xlab.fontface font face xlab. See graphics::par, option 'font'. xlab.fontfamily font family xlab. See graphics::par, option 'family'. xlab.alpha alpha transparency xlab. xlab.side side xlab. ylab.show visibility ylab. TRUE FALSE. ylab.text text ylab. ylab.size size ylab. ylab.color color ylab. ylab.rotation rotation ylab. ylab.space space ylab. terms number text line heights. ylab.fontface font face ylab. See graphics::par, option 'font'. ylab.fontfamily font family ylab. See graphics::par, option 'family'. ylab.alpha alpha transparency ylab. ylab.side side ylab. panel.type type panel. panel.wrap.pos panel positions wrapped facets created tm_facets_grid(). One \"left\", \"right\", \"top\" (default) \"bottom\". panel.xtab.pos panel positions grid facets created tm_facets_grid(). Vector two, first determines locations row panels (\"left\" \"right\") second location column panels ( \"top\" `\"bottom\") unit Unit coordinate color.sepia_intensity sepia_intensity color. color.saturation saturation color. color_vision_deficiency_sim `Color vision deficiency simulation text.fontface font face text. See graphics::par, option 'font'. text.fontfamily font family text. See graphics::par, option 'family'. text.alpha alpha transparency text. component.position position component. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details component.offset offset component. component.stack_margin stack_margin component. component.autoscale autoscale component. component.resize_as_group resize_as_group component. component.frame_combine frame_combine component. component.stack stack component. legend.stack stack legend. chart.stack stack chart. component.equalize equalize component. component.frame frame component. component.frame.color color frame component. component.frame.alpha alpha transparency frame component. component.frame.lwd line width frame component. See graphics::par, option 'lwd'. component.frame.r r (radius) frame component. component.bg bg component. component.bg.color color bg component. component.bg.alpha alpha transparency bg component. legend.show visibility legend. TRUE FALSE. legend.design design legend. legend.orientation orientation legend. legend.position position legend. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details legend.width width legend. legend.height height legend. legend.reverse reverse legend. legend.na.show visibility na legend. TRUE FALSE. legend.title.color color title legend. legend.title.size size title legend. legend.title.fontface font face title legend. See graphics::par, option 'font'. legend.title.fontfamily font family title legend. See graphics::par, option 'family'. legend.title.alpha alpha transparency title legend. legend.xlab.color color xlab legend. legend.xlab.size size xlab legend. legend.xlab.fontface font face xlab legend. See graphics::par, option 'font'. legend.xlab.fontfamily font family xlab legend. See graphics::par, option 'family'. legend.xlab.alpha alpha transparency xlab legend. legend.ylab.color color ylab legend. legend.ylab.size size ylab legend. legend.ylab.fontface font face ylab legend. See graphics::par, option 'font'. legend.ylab.fontfamily font family ylab legend. See graphics::par, option 'family'. legend.ylab.alpha alpha transparency ylab legend. legend.text.color color text legend. legend.text.size size text legend. legend.text.fontface font face text legend. See graphics::par, option 'font'. legend.text.fontfamily font family text legend. See graphics::par, option 'family'. legend.text.alpha alpha transparency text legend. legend.frame frame legend. legend.frame.color color frame legend. legend.frame.alpha alpha transparency frame legend. legend.frame.lwd line width frame legend. See graphics::par, option 'lwd'. legend.frame.r r (radius) frame legend. legend.bg bg legend. legend.bg.color color bg legend. legend.bg.alpha alpha transparency bg legend. legend.legend. legend.absolute_fontsize absolute fontsize legend. far, used calculate legend dimensions legend.settings.standard.portrait portrait standard settings legend. legend.settings.standard.landscape landscape standard settings legend. add_legend.position position add_legend. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details chart.show visibility chart. TRUE FALSE. chart.plot.axis.x x axis plot chart. chart.plot.axis.y y axis plot chart. chart.position position chart. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details chart.width width chart. chart.height height chart. chart.reverse reverse chart. chart.na.show visibility na chart. TRUE FALSE. chart.title.color color title chart. chart.title.size size title chart. chart.title.fontface font face title chart. See graphics::par, option 'font'. chart.title.fontfamily font family title chart. See graphics::par, option 'family'. chart.title.alpha alpha transparency title chart. chart.xlab.color color xlab chart. chart.xlab.size size xlab chart. chart.xlab.fontface font face xlab chart. See graphics::par, option 'font'. chart.xlab.fontfamily font family xlab chart. See graphics::par, option 'family'. chart.xlab.alpha alpha transparency xlab chart. chart.ylab.color color ylab chart. chart.ylab.size size ylab chart. chart.ylab.fontface font face ylab chart. See graphics::par, option 'font'. chart.ylab.fontfamily font family ylab chart. See graphics::par, option 'family'. chart.ylab.alpha alpha transparency ylab chart. chart.text.color color text chart. chart.text.size size text chart. chart.text.fontface font face text chart. See graphics::par, option 'font'. chart.text.fontfamily font family text chart. See graphics::par, option 'family'. chart.text.alpha alpha transparency text chart. chart.frame frame chart. chart.frame.color color frame chart. chart.frame.alpha alpha transparency frame chart. chart.frame.lwd line width frame chart. See graphics::par, option 'lwd'. chart.frame.r r (radius) frame chart. chart.bg bg chart. chart.bg.color color bg chart. chart.bg.alpha alpha transparency bg chart. chart.object.color color object chart. title.size size title. title.color color title. title.fontface font face title. See graphics::par, option 'font'. title.fontfamily font family title. See graphics::par, option 'family'. title.alpha alpha transparency title. title.padding padding title. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). title.frame frame title. title.frame.color color frame title. title.frame.alpha alpha transparency frame title. title.frame.lwd line width frame title. See graphics::par, option 'lwd'. title.frame.r r (radius) frame title. title.position position title. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details title.width width title. credits.size size credits. credits.color color credits. credits.fontface font face credits. See graphics::par, option 'font'. credits.fontfamily font family credits. See graphics::par, option 'family'. credits.alpha alpha transparency credits. credits.padding padding credits. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). credits.position position credits. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details credits.width width credits. credits.height height credits. compass.north north compass. compass.type type compass. compass.text.size size text compass. compass.size size compass. compass.show.labels labels show compass. compass.cardinal.directions directions cardinal compass. compass.text.color color text compass. compass.color.dark dark color compass. compass.color.light light color compass. compass.lwd line width compass. See graphics::par, option 'lwd'. compass.margins margins compass. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). compass.position position compass. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset.position position inset. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details logo.height height logo. logo.margins margins logo. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). logo.between_margin between_margin logo. logo.position position logo. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset_map.height height inset_map. inset_map.width width inset_map. inset_map.margins margins inset_map. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inset_map.between_margin between_margin inset_map. inset_map.position position inset_map. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details inset_map.frame frame inset_map. inset.height height inset. inset.width width inset. inset.margins margins inset. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inset.between_margin between_margin inset. inset.frame frame inset. inset.bg bg inset. inset.bg.color color bg inset. inset.bg.alpha alpha transparency bg inset. inset_grob.height height inset_grob. inset_grob.width width inset_grob. inset_gg.height height inset_gg. inset_gg.width width inset_gg. scalebar.breaks break values scalebar. scalebar.width width scalebar. scalebar.text.size size text scalebar. scalebar.text.color color text scalebar. scalebar.text.fontface font face text scalebar. See graphics::par, option 'font'. scalebar.text.fontfamily font family text scalebar. See graphics::par, option 'family'. scalebar.color.dark dark color scalebar. scalebar.color.light light color scalebar. scalebar.lwd line width scalebar. See graphics::par, option 'lwd'. scalebar.size size scalebar. scalebar.margins margins scalebar. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). scalebar.position position scalebar. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details grid.show visibility grid. TRUE FALSE. grid.labels.pos pos labels grid. grid.x x grid. grid.y y grid. grid.n.x x n grid. grid.n.y y n grid. grid.crs coordinate reference system (CRS) grid. grid.col color grid. grid.lwd line width grid. See graphics::par, option 'lwd'. grid.alpha alpha transparency grid. grid.labels.show visibility labels grid. TRUE FALSE. grid.labels.size size labels grid. grid.labels.col color labels grid. grid.labels.fontface font face labels grid. See graphics::par, option 'font'. grid.labels.fontfamily font family labels grid. See graphics::par, option 'family'. grid.labels.rot rot labels grid. grid.labels.format format labels grid. grid.labels.cardinal cardinal labels grid. grid.labels.margin.x x margin labels grid. grid.labels.margin.y y margin labels grid. grid.labels.space.x x space labels grid. grid.labels.space.y y space labels grid. grid.labels.inside_frame inside_frame labels grid. grid.ticks ticks grid. grid.lines lines grid. grid.ndiscr ndiscr grid. mouse_coordinates.position position mouse_coordinates. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details minimap.server server minimap. minimap.toggle toggle minimap. minimap.position position minimap. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details panel.show visibility panel. TRUE FALSE. panel.labels labels panel. panel.label.size size label panel. panel.label.color color label panel. panel.label.fontface font face label panel. See graphics::par, option 'font'. panel.label.fontfamily font family label panel. See graphics::par, option 'family'. panel.label.alpha alpha transparency label panel. panel.label.bg bg label panel. panel.label.bg.color color bg label panel. panel.label.bg.alpha alpha transparency bg label panel. panel.label.frame frame label panel. panel.label.frame.color color frame label panel. panel.label.frame.alpha alpha transparency frame label panel. panel.label.frame.lwd line width frame label panel. See graphics::par, option 'lwd'. panel.label.frame.r r (radius) frame label panel. panel.label.height height label panel. panel.label.rot Rotation angles panel labels. Vector four values determine panel label rotation placed left, top, right, bottom. default angles 90, 0, 270 0 respectively. Note second value common, since labels default shown top (see panel.wrap.pos). cross-table facets created tm_facets_grid(), first two values used default (see panel.xtab.pos). qtm.scalebar scalebar qtm. qtm.minimap minimap qtm. qtm.mouse_coordinates mouse_coordinates qtm. earth_boundary earth boundary earth_boundary.color color earth_boundary. earth_boundary.lwd line width earth_boundary. See graphics::par, option 'lwd'. earth_datum Earth datum space.color color space. check_and_fix attempt fix invalid shapefile basemap.show visibility basemap. TRUE FALSE. basemap.server server basemap. basemap.alpha alpha transparency basemap. basemap.zoom zoom basemap. tiles.show visibility tiles. TRUE FALSE. tiles.server server tiles. tiles.alpha alpha transparency tiles. tiles.zoom zoom tiles. attr.color color attr. crs_extra used internally (work progress) crs_global used crs world maps crs_basemap crs_basemap . use_gradient Use gradient fill using linearGradient() use_browser TRUE opens external browser, FALSE (default) opens internal IDEs (e.g. RStudio) browser. use_WebGL use webGL points, lines, polygons. large spatial objects, much faster standard leaflet layer functions. However, can always used two reasons. First, number visual variables limited; fill, size, color (lines) supported. Second, projected CRS's supported. Furthermore, drawback polygon borders sharp. default TRUE large spatial objects (500 features) mentioned criteria met. default TRUE visual variables used. control.position position control. tm_pos object, shortcut two values: horizontal (left, center, right) vertical (top, center, bottom). See tm_pos details control.bases base layers control.overlays overlay layers control.collapse box collapsed expanded? set_bounds logical determines whether maximum bounds set, bounding box. applicable plot mode. view mode, passed setMaxBounds() set_view numeric vector determines view. Either vector three: lng, lat, zoom, single value: zoom. See setView(). applicable bbox specified set_zoom_limits numeric vector two set minimum maximum zoom levels (see tileOptions()). use_circle_markers TRUE (default) circle shaped symbols (e.g. tm_dots() tm_symbols()) rendered addCircleMarkers() instead addMarkers(). former faster, latter can support symbol since based icons leaflet.options options passed leafletOptions() title deprecated See tm_title() main.title deprecated See tm_title() main.title.size, main.title.color, main.title.fontface, main.title.fontfamily, main.title.position deprecated. Use title. options instead. fontface, fontfamily renamed text.fontface text.fontfamily mode mode, e.g. \"plot\" \"view\" style style, see tmap_style() available styles mode.specific mode-specific options returned? TRUE default. default.options return default options current options?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tmap options — tm_check_fix","text":"","code":"# get all options opt = tmap_options()  # print as a tree if (requireNamespace(\"lobstr\")) {   lobstr::tree(opt) } #> Loading required namespace: lobstr #> <list> #> ├─modes: <list> #> │ ├─plot: <list> #> │ │ ├─name: \"Grid\" #> │ │ ├─use_gradient: FALSE #> │ │ ├─crs_basemap: 3857 #> │ │ └─limit_latitude_3857<dbl [2]>: -84, 84 #> │ └─view: <list> #> │   ├─name: \"Leaflet\" #> │   ├─use_browser: FALSE #> │   ├─use_WebGL: NA #> │   ├─legend.position: S3<tm_pos> #> │   │ ├─pos.h: \"right\" #> │   │ ├─pos.v: \"bottom\" #> │   │ ├─align.h: \"left\" #> │   │ ├─align.v: \"top\" #> │   │ ├─just.h: \"left\" #> │   │ ├─just.v: \"top\" #> │   │ └─type: \"in\" #> │   ├─crs_basemap: <list> #> │   │ ├─dimensions: 3857 #> │   │ └─4326 #> │   ├─facet.max: 16 #> │   ├─control.position<chr [2]>: \"left\", \"top\" #> │   ├─control.collapse: TRUE #> │   ├─basemap.show: TRUE #> │   ├─set_bounds: FALSE #> │   ├─set_view: NA #> │   ├─set_zoom_limits: NA #> │   ├─qtm.scalebar: TRUE #> │   ├─qtm.minimap: FALSE #> │   ├─qtm.mouse_coordinates: TRUE #> │   ├─use_circle_markers: TRUE #> │   └─leaflet.options: <list> #> ├─crs: NA #> ├─facet.max: 64 #> ├─facet.flip: FALSE #> ├─free.scales: <NULL> #> ├─raster.max_cells: 1e+07 #> ├─raster.warp: TRUE #> ├─show.messages: TRUE #> ├─show.warnings: TRUE #> ├─output.format: \"png\" #> ├─output.size: 49 #> ├─output.dpi: 300 #> ├─animation.dpi: 100 #> ├─value.const: <list> #> │ ├─fill.symbols: \"grey60\" #> │ ├─fill.dots: \"black\" #> │ ├─fill: \"grey85\" #> │ ├─col.polygons: \"grey25\" #> │ ├─col.symbols: \"grey25\" #> │ ├─col.raster: \"grey40\" #> │ ├─col.text: \"black\" #> │ ├─col: \"black\" #> │ ├─bgcol.labels_highlighted: \"white\" #> │ ├─bgcol: \"#00000000\" #> │ ├─lwd: 1 #> │ ├─lty: \"solid\" #> │ ├─text: \"Abc\" #> │ ├─text.labels: \"\" #> │ ├─fontface: <NULL> #> │ ├─shape.squares: 22 #> │ ├─shape.dots: 19 #> │ ├─shape.markers: S3<tmap_icons> #> │ │ ├─iconUrl: \"/home/runner/work/_temp/Library/...\" #> │ │ ├─iconWidth: 25 #> │ │ ├─iconHeight: 41 #> │ │ ├─iconAnchorX: 12 #> │ │ └─iconAnchorY: 41 #> │ ├─shape: 21 #> │ ├─size.bubbles: 1.3333 #> │ ├─size.squares: 1.3333 #> │ ├─size.dots: 0.3 #> │ ├─size: 1 #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─angle: 0 #> │ └─num: 1 #> ├─value.na: <list> #> │ ├─fill: \"grey75\" #> │ ├─col: \"grey75\" #> │ ├─col.raster: \"#00000000\" #> │ ├─bgcol: \"grey75\" #> │ ├─lty: \"solid\" #> │ ├─text: \"Unknown\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─col_alpha.raster: 0 #> │ └─angle: 0 #> ├─value.null: <list> #> │ ├─fill: \"grey95\" #> │ ├─col: \"grey95\" #> │ ├─col.polygons: \"grey40\" #> │ ├─bgcol: \"grey95\" #> │ ├─lty: \"solid\" #> │ ├─lwd: 0.2 #> │ ├─shape: 20 #> │ ├─text: \"\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─size: 0.2 #> │ ├─angle: 0 #> │ └─num: 0 #> ├─value.blank: <list> #> │ ├─fill: \"#00000000\" #> │ ├─col: \"#00000000\" #> │ ├─bgcol: \"#00000000\" #> │ ├─lty: \"blank\" #> │ ├─lwd: 0 #> │ ├─text: \"\" #> │ ├─fontface: <NULL> #> │ ├─fill_alpha: 0 #> │ ├─col_alpha: 0 #> │ ├─bgcol_alpha: 0 #> │ ├─angle: 0 #> │ └─num: 0 #> ├─values.var: <list> #> │ ├─fill: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.area7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─col: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.line7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─fill.dots: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.line7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─bgcol: <list> #> │ │ ├─seq: \"-hcl.blues3\" #> │ │ ├─div: \"pu_gn_div\" #> │ │ ├─unord: \"cols4all.area7\" #> │ │ ├─ord: \"-hcl.blues3\" #> │ │ ├─cyc: \"tol.rainbow_pu_rd\" #> │ │ └─biv: \"pu_gn_bivs\" #> │ ├─size: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─size.bubbles: S3<tmapSeq> #> │ │ ├─from: 0 #> │ │ ├─to: 1 #> │ │ └─power: \"sqrt\" #> │ ├─lwd<dbl [2]>: 0, 3 #> │ ├─lty<chr [5]>: \"dashed\", \"dotted\", \"dotdash\", \"longdash\", \"twodash\" #> │ ├─text<chr [26]>: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", ... #> │ ├─fontface<chr [3]>: \"plain\", \"italic\", \"bold\" #> │ ├─fill_alpha<dbl [2]>: 0.25, 1 #> │ ├─col_alpha<dbl [2]>: 0.25, 1 #> │ ├─bgcol_alpha<dbl [2]>: 0.25, 1 #> │ ├─shape<int [5]>: 21, 22, 23, 24, 25 #> │ ├─area<dbl [2]>: 0, 1 #> │ ├─xmod<dbl [2]>: 0, 1 #> │ ├─ymod<dbl [2]>: 0, 1 #> │ ├─angle<dbl [2]>: 0, 360 #> │ └─num<dbl [2]>: 0, 1 #> ├─values.range: <list> #> │ ├─fill: NA #> │ ├─col: NA #> │ ├─size<dbl [2]>: 0, 1 #> │ ├─lwd<dbl [2]>: 0, 1 #> │ ├─lty: NA #> │ ├─text: NA #> │ ├─fontface: NA #> │ ├─fill_alpha: NA #> │ ├─col_alpha: NA #> │ ├─shape: NA #> │ ├─angle: NA #> │ └─num<dbl [2]>: 0, 1 #> ├─value.neutral: <list> #> │ ├─size: 0.75 #> │ ├─lwd: 2 #> │ ├─lty: \"solid\" #> │ ├─fill_alpha: 1 #> │ ├─col_alpha: 1 #> │ ├─bgcol_alpha: 1 #> │ ├─text: \"Abc\" #> │ ├─fontface: \"plain\" #> │ ├─angle: 0 #> │ └─num: 1 #> ├─values.scale: <list> #> │ ├─1 #> │ ├─lwd.lines: 1 #> │ ├─size.symbols: 1 #> │ ├─size.bubbles: 1.3333 #> │ └─size.squares: 1.3333 #> ├─scales.var: <list> #> │ ├─fill: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─col: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─bgcol: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─lwd: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"continuous\" #> │ │ ├─int: \"discrete\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─lty: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─shape: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"intervals\" #> │ │ └─date: \"intervals\" #> │ ├─size: <list> #> │ │ ├─fact: \"continuous\" #> │ │ ├─num: \"continuous\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─fill_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─col_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─bgcol_alpha: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"intervals\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─area: <list> #> │ │ ├─fact: \"categorical\" #> │ │ ├─num: \"continuous\" #> │ │ ├─datetime: \"continuous\" #> │ │ └─date: \"continuous\" #> │ ├─xmod: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─ymod: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─angle: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ ├─text: <list> #> │ │ ├─fact: \"asis\" #> │ │ └─num: \"asis\" #> │ └─fontface: <list> #> │   ├─fact: \"categorical\" #> │   ├─num: \"categorical\" #> │   ├─datetime: \"categorical\" #> │   └─date: \"categorical\" #> ├─scale.misc.args: <list> #> │ ├─continuous: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ ├─trans: \"identity\" #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─0 #> │ ├─continuous_log: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log2: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log10: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_log1p: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ ├─continuous_sqrt: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─0 #> │ ├─continuous_pseudo_log: <list> #> │ │ ├─n<dbl [3]>: 5, 5, 5 #> │ │ ├─outliers.trunc<lgl [2]>: FALSE, FALSE #> │ │ └─limits: <list> #> │ │   ├─fill: NA #> │ │   ├─col: NA #> │ │   └─NA #> │ └─rank: <list> #> │   ├─n: 5 #> │   └─unit: \"rank\" #> ├─continuous.nclass_per_legend_break: 50 #> ├─continuous.nclasses: 101 #> ├─label.format: <list> #> │ ├─fun: <NULL> #> │ ├─scientific: FALSE #> │ ├─digits: NA #> │ ├─big.num.abbr<dbl [2]>: 6, 9 #> │ ├─prefix: \"\" #> │ ├─suffix: \"\" #> │ ├─text.separator: \"to\" #> │ ├─text.less.than<chr [2]>: \"Less\", \"than\" #> │ ├─text.or.more<chr [2]>: \"or\", \"more\" #> │ ├─text.align: NA #> │ ├─text.to.columns: FALSE #> │ └─html.escape: TRUE #> ├─label.na: \"Missing\" #> ├─scale: 1 #> ├─asp: NA #> ├─bg: TRUE #> ├─bg.color: \"white\" #> ├─outer.bg: FALSE #> ├─outer.bg.color: \"white\" #> ├─frame: TRUE #> ├─frame.color: NA #> ├─frame.alpha: 1 #> ├─frame.lwd: 1 #> ├─frame.r: 2 #> ├─frame.double_line: FALSE #> ├─outer.margins<dbl [4]>: 0.02, 0.02, 0.02, 0.02 #> ├─inner.margins: <list> #> │ ├─stars<dbl [4]>: 0, 0, 0, 0 #> │ ├─SpatRaster<dbl [4]>: 0, 0, 0, 0 #> │ └─<dbl [4]>0.02, 0.02, 0.02, 0.02 #> ├─inner.margins.extra<dbl [4]>: 0, 0, 0, 0 #> ├─meta.margins: NA #> ├─meta.auto_margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> ├─between_margin: 0.5 #> ├─panel.margin<dbl [2]>: 0.4, 0 #> ├─grid.mark.height: 2 #> ├─xylab.height: 1.25 #> ├─coords.height: 1.25 #> ├─xlab.show: FALSE #> ├─xlab.text: \"\" #> ├─xlab.size: 1 #> ├─xlab.color: \"black\" #> ├─xlab.rotation: 0 #> ├─xlab.space: 0 #> ├─xlab.fontface: <NULL> #> ├─xlab.fontfamily: <NULL> #> ├─xlab.alpha: 1 #> ├─xlab.side: \"bottom\" #> ├─ylab.show: FALSE #> ├─ylab.text: \"\" #> ├─ylab.size: 1 #> ├─ylab.color: \"black\" #> ├─ylab.rotation: 0 #> ├─ylab.space: 0 #> ├─ylab.fontface: <NULL> #> ├─ylab.fontfamily: <NULL> #> ├─ylab.alpha: 1 #> ├─ylab.side: \"left\" #> ├─panel.type: NA #> ├─panel.wrap.pos: \"top\" #> ├─panel.xtab.pos<chr [2]>: \"left\", \"top\" #> ├─unit: \"metric\" #> ├─color.sepia_intensity: 0 #> ├─color.saturation: 1 #> ├─color_vision_deficiency_sim: \"none\" #> ├─text.fontface: \"plain\" #> ├─text.fontfamily: \"\" #> ├─text.alpha: 1 #> ├─component.position: <list> #> │ ├─in: S3<tm_pos> #> │ │ ├─pos.h: \"left\" #> │ │ ├─pos.v: \"top\" #> │ │ ├─align.h: \"left\" #> │ │ ├─align.v: \"top\" #> │ │ ├─just.h: \"left\" #> │ │ ├─just.v: \"top\" #> │ │ └─type: \"in\" #> │ └─out: S3<tm_pos> #> │   ├─cell.h: \"right\" #> │   ├─cell.v: \"center\" #> │   ├─pos.h: \"left\" #> │   ├─pos.v: \"top\" #> │   ├─align.h: \"left\" #> │   ├─align.v: \"top\" #> │   ├─just.h: \"left\" #> │   ├─just.v: \"top\" #> │   └─type: \"out\" #> ├─component.offset<dbl [4]>: 0.75, 0, 0, 0 #> ├─component.stack_margin<dbl [2]>: 0, 0.5 #> ├─component.autoscale: TRUE #> ├─component.resize_as_group: FALSE #> ├─component.frame_combine: TRUE #> ├─component.stack: \"vertical\" #> ├─legend.stack<chr [6]>: \"vertical\", \"horizontal\", \"horizontal\", \"vertical\", \"horizontal\", \"vertical\" #> ├─chart.stack<chr [6]>: \"vertical\", \"horizontal\", \"horizontal\", \"vertical\", \"horizontal\", \"vertical\" #> ├─component.equalize: TRUE #> ├─component.frame: FALSE #> ├─component.frame.color: NA #> ├─component.frame.alpha: 1 #> ├─component.frame.lwd: 1 #> ├─component.frame.r: 2 #> ├─component.bg: TRUE #> ├─component.bg.color: \"white\" #> ├─component.bg.alpha: 1 #> ├─legend.show: TRUE #> ├─legend.design: \"standard\" #> ├─legend.orientation: \"portrait\" #> ├─legend.position: S3<tm_pos> #> │ ├─cell.h: \"right\" #> │ ├─cell.v: \"bottom\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"autoout\" #> ├─legend.width: NA #> ├─legend.height: NA #> ├─legend.reverse: FALSE #> ├─legend.na.show: NA #> ├─legend.title.color: NA #> ├─legend.title.size: 0.9 #> ├─legend.title.fontface: <NULL> #> ├─legend.title.fontfamily: <NULL> #> ├─legend.title.alpha: 1 #> ├─legend.xlab.color: NA #> ├─legend.xlab.size: 0.9 #> ├─legend.xlab.fontface: <NULL> #> ├─legend.xlab.fontfamily: <NULL> #> ├─legend.xlab.alpha: 1 #> ├─legend.ylab.color: NA #> ├─legend.ylab.size: 0.9 #> ├─legend.ylab.fontface: <NULL> #> ├─legend.ylab.fontfamily: <NULL> #> ├─legend.ylab.alpha: 1 #> ├─legend.text.color: NA #> ├─legend.text.size: 0.7 #> ├─legend.text.fontface: <NULL> #> ├─legend.text.fontfamily: <NULL> #> ├─legend.text.alpha: 1 #> ├─legend.frame: TRUE #> ├─legend.frame.color: NA #> ├─legend.frame.alpha: 1 #> ├─legend.frame.lwd: 1 #> ├─legend.frame.r: 2 #> ├─legend.bg: TRUE #> ├─legend.bg.color: \"white\" #> ├─legend.bg.alpha: 1 #> ├─legend.only: FALSE #> ├─legend.absolute_fontsize: 14 #> ├─legend.settings.standard.portrait: <list> #> │ ├─item.height<dbl [6]>: 1.2, 1, 3, 1.2, 1.2, 1.2 #> │ ├─item.width<dbl [6]>: 1.2, 1, 1.2, 1.2, 3, 1.2 #> │ ├─item.r: 2 #> │ ├─item.space<dbl [6]>: 0.2, 0.2, 0, 0.2, 0.2, 0 #> │ ├─item.na.height<dbl [6]>: NA, NA, 1.2, NA, NA, NA #> │ ├─item.na.width<dbl [6]>: NA, NA, 1.2, NA, NA, NA #> │ ├─item.na.space<dbl [6]>: 0.2, 0.3, 1, 0.2, 0.2, 0.2 #> │ ├─item.shape: 107 #> │ ├─title.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─xlab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─ylab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─title.align<chr [2]>: \"right\", \"left\" #> │ ├─xlab.align: \"left\" #> │ ├─ylab.align: \"center\" #> │ ├─ticks: <list> #> │ │ ├─rect: <list> #> │ │ ├─symbols: <list> #> │ │ ├─gradient: <list> #> │ │ │ └─<dbl [2]>1, 1.5 #> │ │ ├─lines: <list> #> │ │ ├─text: <list> #> │ │ └─bivariate: <list> #> │ ├─ticks.disable.na<lgl [6]>: FALSE, FALSE, TRUE, FALSE, FALSE, TRUE #> │ ├─ticks.col: NA #> │ ├─ticks.lwd: 1.5 #> │ ├─margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> │ └─item_text.margin: 0.25 #> ├─legend.settings.standard.landscape: <list> #> │ ├─item.height<dbl [5]>: 1, 1, 1.2, 1, 1 #> │ ├─item.width<dbl [5]>: 6, 3, 6, 6, 6 #> │ ├─item.r: 2 #> │ ├─item.space<dbl [5]>: 0.2, 0.3, 0, 0.2, 0.2 #> │ ├─item.na.height<dbl [5]>: NA, NA, 2, NA, NA #> │ ├─item.na.width<dbl [5]>: NA, NA, 4, NA, NA #> │ ├─item.na.space<dbl [5]>: 0.2, 0.3, 0.3, 0.2, 0.2 #> │ ├─item.shape: 107 #> │ ├─title.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─xlab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─ylab.padding<dbl [4]>: 0, 0, 0.25, 0 #> │ ├─title.align<chr [2]>: \"right\", \"left\" #> │ ├─xlab.align: \"left\" #> │ ├─ylab.align: \"center\" #> │ ├─ticks: <list> #> │ │ ├─rect: <list> #> │ │ ├─symbols: <list> #> │ │ ├─gradient: <list> #> │ │ │ └─<dbl [2]>1, 1.2 #> │ │ ├─lines: <list> #> │ │ └─text: <list> #> │ ├─ticks.disable.na<lgl [5]>: FALSE, FALSE, TRUE, FALSE, FALSE #> │ ├─ticks.col: NA #> │ ├─ticks.lwd: 1.5 #> │ ├─margins<dbl [4]>: 0.4, 0.4, 0.4, 0.4 #> │ └─item_text.margin: 0.25 #> ├─add_legend.position: <NULL> #> ├─chart.show: TRUE #> ├─chart.plot.axis.x: FALSE #> ├─chart.plot.axis.y: TRUE #> ├─chart.position: S3<tm_pos> #> │ ├─cell.h: \"right\" #> │ ├─cell.v: \"bottom\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"bottom\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"autoout\" #> ├─chart.width<dbl [8]>: 10, 20, 10, 20, 10, 10, 10, 15 #> ├─chart.height<dbl [8]>: 10, 10, 10, 10, 10, 10, 10, 10 #> ├─chart.reverse: FALSE #> ├─chart.na.show: NA #> ├─chart.title.color: NA #> ├─chart.title.size: 0.9 #> ├─chart.title.fontface: <NULL> #> ├─chart.title.fontfamily: <NULL> #> ├─chart.title.alpha: <NULL> #> ├─chart.xlab.color: NA #> ├─chart.xlab.size: 0.9 #> ├─chart.xlab.fontface: <NULL> #> ├─chart.xlab.fontfamily: <NULL> #> ├─chart.xlab.alpha: <NULL> #> ├─chart.ylab.color: NA #> ├─chart.ylab.size: 0.9 #> ├─chart.ylab.fontface: <NULL> #> ├─chart.ylab.fontfamily: <NULL> #> ├─chart.ylab.alpha: 1 #> ├─chart.text.color: NA #> ├─chart.text.size: 0.7 #> ├─chart.text.fontface: <NULL> #> ├─chart.text.fontfamily: <NULL> #> ├─chart.text.alpha: 1 #> ├─chart.frame: TRUE #> ├─chart.frame.color: NA #> ├─chart.frame.alpha: 1 #> ├─chart.frame.lwd: 1 #> ├─chart.frame.r: 2 #> ├─chart.bg: TRUE #> ├─chart.bg.color: \"white\" #> ├─chart.bg.alpha: 1 #> ├─chart.object.color: \"#DDDDDD\" #> ├─title.size: 1.3 #> ├─title.color: NA #> ├─title.fontface: <NULL> #> ├─title.fontfamily: <NULL> #> ├─title.alpha: 1 #> ├─title.padding<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─title.frame: FALSE #> ├─title.frame.color: NA #> ├─title.frame.alpha: 1 #> ├─title.frame.lwd: 1 #> ├─title.frame.r: 2 #> ├─title.position: S3<tm_pos> #> │ ├─cell.h: \"center\" #> │ ├─cell.v: \"top\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"out\" #> ├─title.width: NA #> ├─credits.size: 0.7 #> ├─credits.color: NA #> ├─credits.fontface: <NULL> #> ├─credits.fontfamily: <NULL> #> ├─credits.alpha: 1 #> ├─credits.padding<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─credits.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─credits.width: NA #> ├─credits.height: NA #> ├─compass.north: 0 #> ├─compass.type: \"arrow\" #> ├─compass.text.size: 0.8 #> ├─compass.size: NA #> ├─compass.show.labels: 1 #> ├─compass.cardinal.directions<chr [4]>: \"N\", \"E\", \"S\", \"W\" #> ├─compass.text.color: NA #> ├─compass.color.dark: NA #> ├─compass.color.light: NA #> ├─compass.lwd: 1 #> ├─compass.margins<dbl [4]>: 0.25, 0.25, 0.25, 0.25 #> ├─compass.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"bottom\" #> │ └─type: \"in\" #> ├─inset.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─logo.height: 3 #> ├─logo.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─logo.between_margin: 0.2 #> ├─logo.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset_map.height: 7 #> ├─inset_map.width: 7 #> ├─inset_map.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─inset_map.between_margin: 0.2 #> ├─inset_map.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset_map.frame: TRUE #> ├─inset.height: 3 #> ├─inset.width: 3 #> ├─inset.margins<dbl [4]>: 0.2, 0.2, 0.2, 0.2 #> ├─inset.between_margin: 0.2 #> ├─inset.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─inset.frame: TRUE #> ├─inset.bg: TRUE #> ├─inset.bg.color: \"#ffffff\" #> ├─inset.bg.alpha: 1 #> ├─inset_grob.height: 7 #> ├─inset_grob.width: 7 #> ├─inset_gg.height: 7 #> ├─inset_gg.width: 7 #> ├─scalebar.breaks: <NULL> #> ├─scalebar.width: 12 #> ├─scalebar.text.size: 0.5 #> ├─scalebar.text.color: NA #> ├─scalebar.text.fontface: <NULL> #> ├─scalebar.text.fontfamily: <NULL> #> ├─scalebar.color.dark: \"black\" #> ├─scalebar.color.light: \"white\" #> ├─scalebar.lwd: 1 #> ├─scalebar.size: <NULL> #> ├─scalebar.margins<dbl [4]>: 0.01, 0.01, 0.01, 0.01 #> ├─scalebar.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─grid.show: FALSE #> ├─grid.labels.pos<chr [2]>: \"left\", \"bottom\" #> ├─grid.x: NA #> ├─grid.y: NA #> ├─grid.n.x: NA #> ├─grid.n.y: NA #> ├─grid.crs: NA #> ├─grid.col: NA #> ├─grid.lwd: 1 #> ├─grid.alpha: NA #> ├─grid.labels.show: TRUE #> ├─grid.labels.size: 0.6 #> ├─grid.labels.col: NA #> ├─grid.labels.fontface: <NULL> #> ├─grid.labels.fontfamily: <NULL> #> ├─grid.labels.rot<dbl [2]>: 0, 0 #> ├─grid.labels.format: <list> #> │ └─big.mark: \",\" #> ├─grid.labels.cardinal: FALSE #> ├─grid.labels.margin.x: 0 #> ├─grid.labels.margin.y: 0 #> ├─grid.labels.space.x: NA #> ├─grid.labels.space.y: NA #> ├─grid.labels.inside_frame: FALSE #> ├─grid.ticks: TRUE #> ├─grid.lines: TRUE #> ├─grid.ndiscr: 100 #> ├─mouse_coordinates.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─minimap.server: NA #> ├─minimap.toggle: TRUE #> ├─minimap.position: S3<tm_pos> #> │ ├─pos.h: \"right\" #> │ ├─pos.v: \"bottom\" #> │ ├─align.h: \"right\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─panel.show: NA #> ├─panel.labels: NA #> ├─panel.label.size: 1 #> ├─panel.label.color: \"black\" #> ├─panel.label.fontface: <NULL> #> ├─panel.label.fontfamily: <NULL> #> ├─panel.label.alpha: 1 #> ├─panel.label.bg: TRUE #> ├─panel.label.bg.color: \"grey80\" #> ├─panel.label.bg.alpha: 1 #> ├─panel.label.frame: TRUE #> ├─panel.label.frame.color: NA #> ├─panel.label.frame.alpha: 1 #> ├─panel.label.frame.lwd: 1 #> ├─panel.label.frame.r: 2 #> ├─panel.label.height: 1 #> ├─panel.label.rot<dbl [4]>: 90, 0, 270, 0 #> ├─qtm.scalebar: FALSE #> ├─qtm.minimap: FALSE #> ├─qtm.mouse_coordinates: FALSE #> ├─earth_boundary: FALSE #> ├─earth_boundary.color: NA #> ├─earth_boundary.lwd: 1 #> ├─earth_datum: \"OGC:CRS84\" #> ├─space.color: NA #> ├─check_and_fix: FALSE #> ├─basemap.show: FALSE #> ├─basemap.server<chr [3]>: \"Esri.WorldGr...\", \"OpenStreetMap\", \"Esri.WorldTo...\" #> ├─basemap.alpha: 1 #> ├─basemap.zoom: NA #> ├─tiles.show: FALSE #> ├─tiles.server: \"\" #> ├─tiles.alpha: 1 #> ├─tiles.zoom: NA #> ├─attr.color: \"black\" #> ├─crs_extra: \"\" #> └─crs_global: \"+proj=eqearth\"  # a fancy set of options: tmap_options(   bg.color = \"steelblue\",   outer.bg.color = \"salmon\",   frame.color = \"purple3\",   frame.lwd = 5,   compass.type = \"8star\",   legend.bg.color = \"gold\",   legend.position = tm_pos_in(pos.h = \"left\", pos.v = \"top\")  )  if (requireNamespace(\"lobstr\")) {   lobstr::tree(     tmap_options_diff()   ) } #> current tmap options (style \"white (modified)\") that are different from default tmap options (style \"white\"): #> <list> #> ├─bg.color: \"steelblue\" #> ├─outer.bg.color: \"salmon\" #> ├─frame.color: \"purple3\" #> ├─frame.lwd: 5 #> ├─legend.position: S3<tm_pos> #> │ ├─cell.h: \"right\" #> │ ├─cell.v: \"bottom\" #> │ ├─pos.h: \"left\" #> │ ├─pos.v: \"top\" #> │ ├─align.h: \"left\" #> │ ├─align.v: \"top\" #> │ ├─just.h: \"left\" #> │ ├─just.v: \"top\" #> │ └─type: \"in\" #> ├─legend.bg.color: \"gold\" #> └─compass.type: \"8star\"  tm_shape(World) +   tm_polygons(\"footprint\")   tmap_options_save(\"fancy\") #> current tmap options saved as style \"fancy\"  # the default style: tmap_style(\"white\") #> style set to \"white\" (tmap default) #> other available styles are: \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\", \"fancy\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) +   tm_polygons(\"footprint\")   tmap_style(\"fancy\") #> style set to \"fancy\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) +   tm_polygons(\"footprint\")   # reset all options tmap_options_reset() #> tmap options successfully reset"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_providers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get basemap tiles providers — .tmap_providers","title":"Get basemap tiles providers — .tmap_providers","text":"Get basemap tiles providers credits (attribution text). tmap_providers() returns list (vector) provider nams (credits). tmap_provider_credits()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_providers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get basemap tiles providers — .tmap_providers","text":"","code":".tmap_providers  tmap_provider_credits(provider)  tmap_providers(mode, credits = FALSE, as.list = credits)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_providers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get basemap tiles providers — .tmap_providers","text":"object class environment length 44.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_providers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get basemap tiles providers — .tmap_providers","text":"provider provider name mode mode. specified default mode used credits TRUE credit (attribution) text returned. FALSE (default) provider name. .list output returned list names provider names? default TRUE credits also TRUE.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_providers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get basemap tiles providers — .tmap_providers","text":"list vector (see .list) providers (credits). tmap_provider_credits() returns credits text provided provider.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save tmap — tmap_save","title":"Save tmap — tmap_save","text":"Save tmap file. can either static plot (e.g. png) interactive map (html).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save tmap — tmap_save","text":"","code":"tmap_save(   tm = NULL,   filename = NA,   device = NULL,   width = NA,   height = NA,   units = NA,   dpi = NA,   outer.margins = NA,   asp = NULL,   scale = NA,   insets_tm = NULL,   insets_vp = NULL,   add.titles = TRUE,   in.iframe = FALSE,   selfcontained = !in.iframe,   verbose = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save tmap — tmap_save","text":"tm tmap object filename filename including extension, optionally path. extensions pdf, eps, svg, wmf (Windows ), png, jpg, bmp, tiff, html supported. extension missing, file saved static plot \"plot\" mode interactive map (html) \"view\" mode (see details). default format static plots png, can changed using option \"output.format\" tmap_options(). NA (default), file saved \"tmap01\" default format, number incremented file already exists. device graphic device use. Either device function (e.g., png cairo_pdf) text indicating selected graphic device: \"pdf\", \"eps\", \"svg\", \"wmf\" (Windows ), \"png\", \"jpg\", \"bmp\", \"tiff\". NULL, graphic device guessed based filename argument. height, width dimensions plot (applicable html files). Units set argument units. one specified, calculated using formula asp = width / height, asp estimated aspect ratio map. missing, set width * height equal option \"output.size\" tmap_options(). default 49, meaning map square (aspect ratio 1) width height set 7. units units width height (\"\", \"cm\", \"mm\"). default, pixels (\"px\") used either width height set value greater 50. Else, units inches (\"\"). dpi dots per inch. applicable raster graphics. default set 300, can changed using option \"output.dpi\" tmap_options(). outer.margins overrides outer.margins argument tm_options() (unless set NA) asp specified, overrides asp argument tm_options(). Tip: set 0 map frame placed edges image. scale overrides scale argument tm_options() (unless set NA) insets_tm tmap object inset map, list tmap objects multiple inset maps. number tmap objects equal number viewports specified insets_vp. insets_vp viewport inset map, list viewports multiple inset maps. number viewports equal number tmap objects specified insets_tm. add.titles add titles leaflet object. .iframe interactive map saved iframe? , two HTML files saved; one small parent HTML file iframe container, one large child HTML file actual widget. See widgetframe::saveWidgetframe() details. default FALSE, means one large HTML file saved (see saveWidget()). selfcontained interactive map saved, resources (e.g. JavaScript libraries) contained HTML file? FALSE, placed adjacent directory (see also htmlwidgets::saveWidget()). Note HTML file often still large selfcontained = FALSE, since map data (polygons popups), also contained HTML file, usually take space map resources. verbose Deprecated. now controlled tmap option show.messages (see tmap_options()) ... Arguments passed htmlwidgets::saveWidget, widgetframe::saveWidgetframe widget Widget save file File save HTML libdir Directory copy HTML dependencies (defaults filename_files). background Text string giving html background color widget. Defaults white. title Text use title generated page. knitrOptions list knitr chunk options.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save tmap — tmap_save","text":"filename, invisibly, export successful.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save tmap — tmap_save","text":"","code":"if (FALSE) { # \\dontrun{   data(NLD_muni, NLD_prov)   m <- tm_shape(NLD_muni) +          tm_fill(col=\"population\", convert2density=TRUE,                   style=\"kmeans\",                   title=expression(\"Population (per \" * km^2 * \")\")) +          tm_borders(\"black\", alpha=.5) +       tm_shape(NLD_prov) +          tm_borders(\"grey25\", lwd=2) +     tm_style(\"classic\") +     tm_format(\"NLD\", inner.margins = c(.02, .15, .06, .15)) +        tm_scale_bar(position = c(\"left\", \"bottom\")) +       tm_compass(position=c(\"right\", \"bottom\"))      tmap_save(m, \"choropleth.png\", height = 7) # height interpreted in inches   tmap_save(m, \"choropleth_icon.png\", height = 100, scale = .1) # height interpreted in pixels      data(World)   m2 <- tm_shape(World) +     tm_fill(\"well_being\", id=\"name\", title=\"Well-being\") +     tm_format(\"World\")    # save image   tmap_save(m2, \"World_map.png\", width=1920, height=1080, asp=0)    # cut left inner margin to make sure Antarctica is snapped to frame   tmap_save(m2 + tm_layout(inner.margins = c(0, -.1, 0.05, 0.01)),          \"World_map2.png\", width=1920, height=1080, asp=0)      # save interactive plot   tmap_save(m2, \"World_map.html\") } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get the default tmap style — tmap_style","title":"Set or get the default tmap style — tmap_style","text":"Set get default tmap style. Without arguments, current style returned. Also available styles displayed. style set, corresponding tmap options (see tmap_options()) set accordingly. default style (.e. loading package) \"white\".","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get the default tmap style — tmap_style","text":"","code":"tmap_style(style)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get the default tmap style — tmap_style","text":"style Name style. omitted, tmap_style() returns current style also shows available styles. style specified,tmap_style() sets style accordingly. Note case, tmap options (see tmap_options()) reset according style definition. See tm_layout() predefined styles, tmap_style_catalogue() creating catalogue.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or get the default tmap style — tmap_style","text":"style changing","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set or get the default tmap style — tmap_style","text":"Note tm_style() used within plot call (affects plot), whereas tmap_style() sets style globally. loading style, options defined style (.e. difference default \"white\" style) can obtained tmap_options_diff(). documentation tmap_options() (details examples) shows create new style.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or get the default tmap style — tmap_style","text":"","code":"tmap_style() #> current tmap style is \"white\" (tmap default) #> other available styles are: \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\", \"fancy\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")   tmap_style(\"cobalt\") #> style set to \"cobalt\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\", \"fancy\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")   # for backwards compatibility, the styles of tmap versions 1-3 are also included:  tmap_style(\"v3\") #> style set to \"v3\" (tmap v3 default) #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\", \"fancy\" #> tmap v3 styles: \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")   tmap_style(\"cobalt_v3\") #> style set to \"cobalt_v3\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\", \"fancy\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style_catalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a style catalogue — tmap_style_catalogue","title":"Create a style catalogue — tmap_style_catalogue","text":"Create style catalogue predefined tmap style. result set png images, one style.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style_catalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a style catalogue — tmap_style_catalogue","text":"","code":"tmap_style_catalogue(path = \"./tmap_style_previews\", styles = NA)  tmap_style_catalog(path = \"./tmap_style_previews\", styles = NA)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style_catalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a style catalogue — tmap_style_catalogue","text":"path path png images stored styles vector styles function names (see tmap_style()) preview generated. default, preview generated loaded styles.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_tip.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a random tip to the console — tmap_tip","title":"Print a random tip to the console — tmap_tip","text":"Print random tip console","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_tip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a random tip to the console — tmap_tip","text":"","code":"tmap_tip()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_tip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a random tip to the console — tmap_tip","text":"message","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-41-in-development","dir":"Changelog","previous_headings":"","what":"tmap 4.1 (in development)","title":"tmap 4.1 (in development)","text":"fixes regressions tmap v4 release adds improvements. [!] basemaps plot mode much sharper, added tmap_providers() (#1041, #1042) [!] tm_comp_group() added specify grouped components (incl legends) [!] added tm_animate() (main use case: cartograms) background frame introduce: bg/bg.color frame/frame.color tm_remove_layer() works Shiny (#1044) tm_logo() works view mode (#1038). fixes legend computing size (#1039, #1032)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-40","dir":"Changelog","previous_headings":"","what":"tmap 4.0","title":"tmap 4.0","text":"CRAN release: 2025-01-27 tmap v4 major release rewritten scratch. contains tons new features. Although best make changes backwards compatible, things may work expected.","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"new-syntax-4-0","dir":"Changelog","previous_headings":"","what":"New syntax","title":"tmap 4.0","text":"arguments layer functions tm_symbols() reorganized. Visual variables used explicit scales, legends, charts. names visual variables consistent across standard map layer functions. vector data, fill visual variable fill color col border color. New vignettes available explain upgrade code tmap v4.","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"updated-datasets-4-0","dir":"Changelog","previous_headings":"","what":"Updated datasets","title":"tmap 4.0","text":"rivers renamed World_rivers due name clash rivers datasets. Netherlands datasets updated: 2022 NLD_prov, NLD_muni, (new) NLD_dist (district level) included new demographic variables. land included color tables","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"extensions-4-0","dir":"Changelog","previous_headings":"","what":"Extensions","title":"tmap 4.0","text":"tmap can now extended several ways.","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"backwards-compatibility-4-0","dir":"Changelog","previous_headings":"","what":"Backwards compatibility","title":"tmap 4.0","text":"tmap v3 code backwards compatible v4. added ‘v3’ styles make layout (almost) identical v3 introduced messages make easier upgrade code","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-4","dir":"Changelog","previous_headings":"","what":"tmap 3.3-4","title":"tmap 3.3-4","text":"CRAN release: 2023-09-12 (!) last version tmap 3.x. Next CRAN version tmap 4.x fixed bug (stars appeared upside plot mode) fixed newly introduced shiny bug (#767)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-3","dir":"Changelog","previous_headings":"","what":"tmap 3.3-3","title":"tmap 3.3-3","text":"CRAN release: 2022-03-02 added device tmap_save() fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-2","dir":"Changelog","previous_headings":"","what":"tmap 3.3-2","title":"tmap 3.3-2","text":"CRAN release: 2021-06-16 Worlds fixed (now ‘s2’ proof, see GitHub issue #564)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-1","dir":"Changelog","previous_headings":"","what":"tmap 3.3-1","title":"tmap 3.3-1","text":"CRAN release: 2021-03-15 fixed view titles added html.escape popup.format control whether html code escaped view popups fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33","dir":"Changelog","previous_headings":"","what":"tmap 3.3","title":"tmap 3.3","text":"CRAN release: 2021-01-19 tmap_grob() added, exports tmap plots grob objects (grid package) SpatRaster objects (terra package) supported fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-32","dir":"Changelog","previous_headings":"","what":"tmap 3.2","title":"tmap 3.2","text":"CRAN release: 2020-09-15 tmap_animation() improved: now using av gifski hood; added progress bar; lists tmap objects supported; improved default settings improved tmapOutput(); now works reactive shiny objects improved internally used margins; also small exported maps look good (see example tmap_save()) improved tmap_design_mode(); tmap.design.mode now global option (tmap option anymore) reexported providers leafet added show.warnings tmap_options() added width argument tm_credits() tm_text() improved: added “id” argument, tm_remove_layer() can applied ","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-31","dir":"Changelog","previous_headings":"","what":"tmap 3.1","title":"tmap 3.1","text":"CRAN release: 2020-07-09 interactive maps origin CRS working: tmap_options(projection = 0, basemaps = NULL) added tm_mouse_coordinates() show mouse coordinates view mode added tmap_design_mode() toggle design mode. made background symbol grob shapes transparent added .iframe selfcontained tmap_save() improved tm_add_legend(): added type = \"title\" title legend elements added ttmp() shows last map mode. fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-30","dir":"Changelog","previous_headings":"","what":"tmap 3.0","title":"tmap 3.0","text":"CRAN release: 2020-04-09 [!] spatial rasters/arrays now implemented using stars package (instead raster package) .count argument added layer functions; numeric variables can treated count variables (integers) drop.levels argument added layer functions allows drop unused levels new style added color classes: “dpih” “headtails”; also added style.args pass arguments classInt::classIntervals() grid labels specification per axis fixed bug geometry collection","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-23-2","dir":"Changelog","previous_headings":"","what":"tmap 2.3-2","title":"tmap 2.3-2","text":"CRAN release: 2020-01-19 probably last version release tmap 3.0 many small improvements bug fixes (see GitHub) first stars supported (full support expected tmap 3.0) replaced projection shortcuts \"epsg/proj4strings\" examples","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-23-1","dir":"Changelog","previous_headings":"","what":"tmap 2.3-1","title":"tmap 2.3-1","text":"CRAN release: 2019-09-17 improved popups view mode added validity checks sf objects minor bugs fixed: see GitHub issue list","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-23","dir":"Changelog","previous_headings":"","what":"tmap 2.3","title":"tmap 2.3","text":"CRAN release: 2019-07-18 [!] shiny integration: added tmapOutput(), renderTmap(), tmapProxy(), , tm_remove_layer() improved tmap_save() (regarding default values) improved tm_rgb() (added r g b max.value arguments) added tm_graticules() supported TMS servers view mode, layers can hidden legend group = NULL replaced mapview leafsync minor bugs fixed: see GitHub issue list","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-22","dir":"Changelog","previous_headings":"","what":"tmap 2.2","title":"tmap 2.2","text":"CRAN release: 2019-01-05 improved tm_rgb() improved breaks interactive maps added bbox argument qtm() improved projection shortcut codes (using EPSG database) fixed several bugs (see GitHub)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-21-1","dir":"Changelog","previous_headings":"","what":"tmap 2.1-1","title":"tmap 2.1-1","text":"CRAN release: 2018-08-09 fixed two small bugs","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-21","dir":"Changelog","previous_headings":"","what":"tmap 2.1","title":"tmap 2.1","text":"CRAN release: 2018-08-06 added option max.raster (maximum raster size) made rasters view mode faster bug fixed geometry collection objects without data view mode improved handling manual palettes tmap_arrange() can take list tmap objects","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-20","dir":"Changelog","previous_headings":"","what":"tmap 2.0","title":"tmap 2.0","text":"CRAN release: 2018-07-15 [!] tmap migrated sp sf. sp objects still supported, internal functions based sf [!] added tm_sf() draws sf objects [!] renamed *_tmap() functions (e.g. save_tmap()) tmap_*() consistency [!] added tm_basemap() tm_tiles(): now, multiple (overlay) tiled maps can shown [!] rearranged tmap options, styles formats. See tmap_options(), tmap_style(), tmap_format(), tm_style() tm_format() [!] added filter argument tm_shape() added colorNULL layer functions added tm_minimap() added remove.NA.facets tm_facets() units data columns supported tmap_animation() enhanced loop options added tmap_tips() changes backwards compatible 1.11-2 vignettes rewritten, including vignette describes changes 2.0","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-111-2","dir":"Changelog","previous_headings":"","what":"tmap 1.11-2","title":"tmap 1.11-2","text":"CRAN release: 2018-04-10 added references JSS paper (including citation)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-111-1","dir":"Changelog","previous_headings":"","what":"tmap 1.11-1","title":"tmap 1.11-1","text":"CRAN release: 2018-02-13 fixed bug labels argument tm_fill() fixed bug regarding legend symbols facets free scales fixed bug rasters view mode improved popup width view mode","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-111","dir":"Changelog","previous_headings":"","what":"tmap 1.11","title":"tmap 1.11","text":"CRAN release: 2017-11-24 added text.align text..columns legend.format legend.(aes).reverse added layer functions symbol shapes can put list small multiples, named according values variable specified shape argument grid labels can now rotated formatted changed default values free.coords drop.units tm_facets() fixed bug NAs view mode fixed bug dismo::gmap() raster shapes fixed bug ambiguous values aesthetics (e.g. “blue” also variable name) NOTE: last version major update (sf fully replaces sp)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-110","dir":"Changelog","previous_headings":"","what":"tmap 1.10","title":"tmap 1.10","text":"CRAN release: 2017-05-11 [!] tm_scale_bar(), tm_text(), tm_grid() now supported view mode (requires leaflet 1.1.0) added along argument tm_facets(), enables faceting along multiple pages (animation frames) added main.title argument tm_layout added tmap_options(), including new option tmap.unit (“metric” “imperial”“) improved automatic labelling breaks improved legend view mode: missing values shown default (like plot mode) improved bubble scaling view mode fixed bug aspect ratio bug","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-18-1","dir":"Changelog","previous_headings":"","what":"tmap 1.8-1","title":"tmap 1.8-1","text":"CRAN release: 2017-01-29 added tm_rgb() (shortcut rgb rasters) fixed interactive maps R Markdown fixed bug qtm() called without arguments","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-18","dir":"Changelog","previous_headings":"","what":"tmap 1.8","title":"tmap 1.8","text":"CRAN release: 2017-01-03 [!] package split: non-plotting functions migrated tmaptools added tmap_arrange() arranging custom small multiples added simplify argument tm_shape() added error message NA-projected shapes view mode improved unit handling, now can set metric imperial NA values allowed direct color variables sf (simple features) objects supported","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-16-1","dir":"Changelog","previous_headings":"","what":"tmap 1.6-1","title":"tmap 1.6-1","text":"CRAN release: 2016-10-29 improved projections: code efficient now shortcuts renewed. Also, CRS objects now supported project arguments (e.g. tm_shape(), set_projection), .CRS added get_projection get_proj4. Rscript works: methods moved imports depends","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-16","dir":"Changelog","previous_headings":"","what":"tmap 1.6","title":"tmap 1.6","text":"CRAN release: 2016-10-21 [!] tm_symbols() added, create proportional symbol maps: besides bubbles, also supports symbol shapes, png icons, small ggplot2 plots [!] imported cartogram function cartogram package (thanks Sebastian!) [!] reverse geocoding function tmaptools::rev_geocode_OSM() added [!] tm_logo() added added popup.vars base layer functions bounding box (argument bbox tm_shape()) working view mode tmaptools::geocode_OSM() improved: SpatialPointsDataFrame can now returned last_tmap() added, retrieves last produced map crop_shape can also handle polygons cropping area append_data improved; coverage information can retrieved under_coverage over_coverage interpolate parameter added tm_raster() added support custom legend formatting functions legend items can now stacked horizontally legend width height can determined fully manually (negative values legend.height legend.width) argument interval.closure added layer functions determine intervals closed added warnings non-supported elements view mode fixed raster brick bug fixed save_tmap/get_asp_ratifo bug","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-14-1","dir":"Changelog","previous_headings":"","what":"tmap 1.4-1","title":"tmap 1.4-1","text":"CRAN release: 2016-05-07 add just argument anchor text labels, legend attributes position map attributes (scale bar) can placed outside frame added tm_xlab() tm_ylab() RGB raster support, see tm_raster static text (.e titles, credits, legend titles, labels) support expressions updated Europe shape: projection bounding box now consistent Eurostat publications added crop_shape, convenient wrapper around raster::crop()","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-14","dir":"Changelog","previous_headings":"","what":"tmap 1.4","title":"tmap 1.4","text":"CRAN release: 2016-03-18 [!] interactive mapping added. Now, tmap two modes: “plot” (graphics device) “view” (interactive viewer, leaflet widget) [!] facets (small multiples) improved: group two variables possible, panel layout added, missing data can shown separately added geocode_OSM(), function find coordinates (now tmaptools::geocode_OSM()) improved set_projection raster objects added double_line offset_line added insets option save_tmap improved default settings contrast argument regarding seq div palettes improved automatic positions legend map attributes (specifically, legend snaps right-hand side without need adjust legend.width, legend attributes position improved double frame enabled) improved tm_layouts()’s design.mode output lwd parameter added tm_scale_bar() tm_compass() fixed bb bug","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-12-1","dir":"Changelog","previous_headings":"","what":"tmap 1.2-1","title":"tmap 1.2-1","text":"fixed bug PROJ.4 version < 4.9.1 improved error messages rd projection reset \"+init=epsg:28992\", since latter now \"+towgs\" item fixed bug print.tmap() returned object","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-12","dir":"Changelog","previous_headings":"","what":"tmap 1.2","title":"tmap 1.2","text":"CRAN release: 2015-12-11 added read_osm(), function read Open Street Map data (now tmaptools::read_osm()) added bb, handy bounding box function added layout themes tm_style tm_format added automatic text labeling added interactive SVG, can opened RStudio (see itmap) added map compass (tm_compass()) added text aesthetics size col added automatic map coloring added earth boundary, useful projected world maps World added warped grid lines (e.g. long-lat lines can shown projected maps) added new color scale modes (enabled style=\"cat\", “cont”, “order”) added save_tmap() added smooth_map, smooth_raster_cover, sample_dots, points_to_raster poly_to_raster added read_GPX improved automatic layout regarding title, legend, map attributes layer arguments, e.g. palette, can take multiple values small multiples improved grid lines (labels can also placed outside frame) arguments free.coords drop.shapes tm_facets() working updated examples vignette fixed viewport bug see ?tmap structured overview tmap functions","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-10","dir":"Changelog","previous_headings":"","what":"tmap 1.0","title":"tmap 1.0","text":"CRAN release: 2015-05-28 added tm_credits() tm_scale_bar() added .master argument tm_shape(), determines shape master added unit unit.size arguments tm_shape() correlates coordinates desired units added tm_polygons(), combination tm_fill() tm_borders() fixed several small bugs","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-08","dir":"Changelog","previous_headings":"","what":"tmap 0.8","title":"tmap 0.8","text":"added tm_raster() improved legend behavior: legend titles set layer functions (instead tm_layout()) removed crop_shape(), since raster::crop() job, , faster --scope functions migrated spatialToolbox package, available https://github.com/mtennekes/spatialToolbox","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-071","dir":"Changelog","previous_headings":"","what":"tmap 0.7.1","title":"tmap 0.7.1","text":"fixed bug scale parameter (global scale set tm_layout())","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-07","dir":"Changelog","previous_headings":"","what":"tmap 0.7","title":"tmap 0.7","text":"CRAN release: 2015-03-27 enhanced small multiples (tm_facets()) respect scaling free coordinate scales added alpha argument tm_layers() transparency added text shadow argument added function split() split shape object sbind() combine shape objects. added automatic legend positioning legend.position = NULL improved number formatting legend improved inner.margins outer.margins. can take one value (e.g. outer.margins=0 rather outer.margins=c(0,0,0,0)) improved qtm(): tm_facets() parameters working, also fixed scale parameter bug improved examples approx_areas, calc_densities fixed bug regarding drawing frame outer.margins=0. fixed bug plotting bubbles improved temp file handling animation_tmap() added functions get set polygon directions, calculate intersection ratios polygons (intersection_shapes)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-06","dir":"Changelog","previous_headings":"","what":"tmap 0.6","title":"tmap 0.6","text":"CRAN release: 2014-07-30 first CRAN version newer version may available https://github.com/r-tmap/tmap get started, see package vignette ‘tmap nutshell’ help files questions suggestions, please contact (mtennekes gmail dot com)","code":""}]
